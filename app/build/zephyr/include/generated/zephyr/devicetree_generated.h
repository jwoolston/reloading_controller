/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   C:/zephyr_development/reloading_controller/controller/app/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   C:/zephyr_development/reloading_controller/controller/dts/bindings, $ZEPHYR_BASE\dts\bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /connector
 *   4   /soc
 *   5   /pin-controller
 *   6   /pin-controller/adc_default
 *   7   /clocks
 *   8   /clocks/xosc
 *   9   /clocks/pll-usb
 *   10  /clocks/clk-adc
 *   11  /clocks/pll-sys
 *   12  /clocks/clk-gpout0
 *   13  /clocks/clk-gpout1
 *   14  /clocks/clk-gpout2
 *   15  /clocks/clk-gpout3
 *   16  /clocks/clk-hstx
 *   17  /clocks/clk-sys
 *   18  /clocks/clk-peri
 *   19  /clocks/clk-ref
 *   20  /clocks/clk-usb
 *   21  /clocks/gpin0
 *   22  /clocks/gpin1
 *   23  /clocks/rosc
 *   24  /clocks/rosc-ph
 *   25  /soc/clock-controller@40010000
 *   26  /soc/interrupt-controller@e000e100
 *   27  /soc/reset-controller@40020000
 *   28  /soc/adc@400a0000
 *   29  /dietemp
 *   30  /cpus
 *   31  /cpus/cpu@0
 *   32  /cpus/cpu@1
 *   33  /pin-controller/adc_default/group1
 *   34  /pin-controller/i2c1_default
 *   35  /pin-controller/i2c1_default/group1
 *   36  /pin-controller/pwm_ch4b_default
 *   37  /pin-controller/pwm_ch4b_default/group1
 *   38  /pin-controller/spi1_default
 *   39  /pin-controller/spi1_default/group1
 *   40  /pin-controller/spi1_default/group2
 *   41  /pin-controller/uart0_default
 *   42  /pin-controller/uart0_default/group1
 *   43  /pin-controller/uart0_default/group2
 *   44  /soc/dma@50000000
 *   45  /soc/gpio@40028000
 *   46  /soc/i2c@40090000
 *   47  /soc/i2c@40098000
 *   48  /soc/memory@20000000
 *   49  /soc/pio@50200000
 *   50  /soc/pio@50300000
 *   51  /soc/pio@50400000
 *   52  /soc/pwm@400a8000
 *   53  /soc/spi@40080000
 *   54  /soc/spi@40088000
 *   55  /soc/timer@400b0000
 *   56  /soc/timer@400b8000
 *   57  /soc/timer@e000e010
 *   58  /soc/uart@40070000
 *   59  /soc/uart@40078000
 *   60  /soc/usbd@50100000
 *   61  /soc/watchdog@400d8000
 *   62  /soc/flash-controller@400d0000
 *   63  /soc/flash-controller@400d0000/flash@10000000
 *   64  /soc/flash-controller@400d0000/flash@10000000/partitions
 *   65  /soc/flash-controller@400d0000/flash@10000000/partitions/partition@0
 *   66  /soc/flash-controller@400d0000/flash@10000000/partitions/partition@100
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FULL_NAME_UNQUOTED /
#define DT_N_FULL_NAME_TOKEN _
#define DT_N_FULL_NAME_UPPER_TOKEN _

/* Helpers for dealing with node labels: */
#define DT_N_NODELABEL_NUM 0
#define DT_N_FOREACH_NODELABEL(fn) 
#define DT_N_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_FOREACH_ANCESTOR(fn) 

/* Helper macros for child nodes of this node. */
#define DT_N_CHILD_NUM 8
#define DT_N_CHILD_NUM_STATUS_OKAY 7
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_aliases) fn(DT_N_S_cpus) fn(DT_N_S_clocks) fn(DT_N_S_soc) fn(DT_N_S_pin_controller) fn(DT_N_S_dietemp) fn(DT_N_S_chosen) fn(DT_N_S_connector)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dietemp) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_dietemp, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dietemp, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_aliases) fn(DT_N_S_cpus) fn(DT_N_S_clocks) fn(DT_N_S_soc) fn(DT_N_S_pin_controller) fn(DT_N_S_chosen) fn(DT_N_S_connector)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__)

/* Node's hash: */
#define DT_N_HASH il7asoJjJEMhngUeSt4tHVu8Zxx4EFG_FDeJfL3_oPE

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /connector */ \
	4, /* /soc */ \
	5, /* /pin-controller */ \
	7, /* /clocks */ \
	29, /* /dietemp */ \
	30, /* /cpus */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_IRQ_LEVEL 0
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"
#define DT_N_S_aliases_FULL_NAME_UNQUOTED aliases
#define DT_N_S_aliases_FULL_NAME_TOKEN aliases
#define DT_N_S_aliases_FULL_NAME_UPPER_TOKEN ALIASES

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_aliases_NODELABEL_NUM 0
#define DT_N_S_aliases_FOREACH_NODELABEL(fn) 
#define DT_N_S_aliases_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_CHILD_NUM 0
#define DT_N_S_aliases_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_aliases_HASH QavYY6yplHKhLPRKsRzaLCGlR0CWZ0JUNJakcBCfDXA

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_IRQ_LEVEL 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"
#define DT_N_S_chosen_FULL_NAME_UNQUOTED chosen
#define DT_N_S_chosen_FULL_NAME_TOKEN chosen
#define DT_N_S_chosen_FULL_NAME_UPPER_TOKEN CHOSEN

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_chosen_NODELABEL_NUM 0
#define DT_N_S_chosen_FOREACH_NODELABEL(fn) 
#define DT_N_S_chosen_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_CHILD_NUM 0
#define DT_N_S_chosen_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_chosen_HASH qNExeeLInzqaWpm1KroyYDk4lRIxVO2ig78mq_hOnA8

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_IRQ_LEVEL 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /connector
 *
 * Node identifier: DT_N_S_connector
 *
 * Binding (compatible = raspberrypi,pico-header):
 *   $ZEPHYR_BASE\dts\bindings\gpio\raspberrypi,pico-header.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_connector_PATH "/connector"

/* Node's name with unit-address: */
#define DT_N_S_connector_FULL_NAME "connector"
#define DT_N_S_connector_FULL_NAME_UNQUOTED connector
#define DT_N_S_connector_FULL_NAME_TOKEN connector
#define DT_N_S_connector_FULL_NAME_UPPER_TOKEN CONNECTOR

/* Node parent (/) identifier: */
#define DT_N_S_connector_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_connector_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_connector_NODELABEL_NUM 1
#define DT_N_S_connector_FOREACH_NODELABEL(fn) fn(pico_header)
#define DT_N_S_connector_FOREACH_NODELABEL_VARGS(fn, ...) fn(pico_header, __VA_ARGS__)
#define DT_N_S_connector_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_connector_CHILD_NUM 0
#define DT_N_S_connector_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_connector_FOREACH_CHILD(fn) 
#define DT_N_S_connector_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_connector_HASH 1hNYiTso4N65bku_L_0pzRcHL_5NCz8DqiXd1i5KK7Q

/* Node's dependency ordinal: */
#define DT_N_S_connector_ORD 3
#define DT_N_S_connector_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_connector_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_connector_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_connector_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_header DT_N_S_connector
#define DT_N_NODELABEL_pico_header          DT_N_S_connector

/* Macros for properties that are special in the specification: */
#define DT_N_S_connector_REG_NUM 0
#define DT_N_S_connector_RANGES_NUM 0
#define DT_N_S_connector_FOREACH_RANGE(fn) 
#define DT_N_S_connector_IRQ_NUM 0
#define DT_N_S_connector_IRQ_LEVEL 0
#define DT_N_S_connector_COMPAT_MATCHES_raspberrypi_pico_header 1
#define DT_N_S_connector_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_connector_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_connector_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_connector_COMPAT_MODEL_IDX_0 "pico-header"
#define DT_N_S_connector_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_connector_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_connector_P_compatible {"raspberrypi,pico-header"}
#define DT_N_S_connector_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_connector_P_compatible_IDX_0 "raspberrypi,pico-header"
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-header
#define DT_N_S_connector_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_header
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_HEADER
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_LEN 1
#define DT_N_S_connector_P_compatible_EXISTS 1
#define DT_N_S_connector_P_zephyr_deferred_init 0
#define DT_N_S_connector_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_connector_P_wakeup_source 0
#define DT_N_S_connector_P_wakeup_source_EXISTS 1
#define DT_N_S_connector_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_connector_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"
#define DT_N_S_soc_FULL_NAME_UNQUOTED soc
#define DT_N_S_soc_FULL_NAME_TOKEN soc
#define DT_N_S_soc_FULL_NAME_UPPER_TOKEN SOC

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_NODELABEL_NUM 0
#define DT_N_S_soc_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_CHILD_NUM 23
#define DT_N_S_soc_CHILD_NUM_STATUS_OKAY 11
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_flash_controller_400d0000) fn(DT_N_S_soc_S_reset_controller_40020000) fn(DT_N_S_soc_S_clock_controller_40010000) fn(DT_N_S_soc_S_gpio_40028000) fn(DT_N_S_soc_S_uart_40070000) fn(DT_N_S_soc_S_uart_40078000) fn(DT_N_S_soc_S_spi_40080000) fn(DT_N_S_soc_S_spi_40088000) fn(DT_N_S_soc_S_i2c_40090000) fn(DT_N_S_soc_S_i2c_40098000) fn(DT_N_S_soc_S_adc_400a0000) fn(DT_N_S_soc_S_pwm_400a8000) fn(DT_N_S_soc_S_timer_400b0000) fn(DT_N_S_soc_S_timer_400b8000) fn(DT_N_S_soc_S_watchdog_400d8000) fn(DT_N_S_soc_S_dma_50000000) fn(DT_N_S_soc_S_usbd_50100000) fn(DT_N_S_soc_S_pio_50200000) fn(DT_N_S_soc_S_pio_50300000) fn(DT_N_S_soc_S_pio_50400000) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_400d0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_reset_controller_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_controller_40010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40028000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40070000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40078000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40080000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40088000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40090000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40098000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400a0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_400a8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_400b0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_400b8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_400d8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_50000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_50100000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pio_50200000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pio_50300000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pio_50400000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_400d0000, __VA_ARGS__) fn(DT_N_S_soc_S_reset_controller_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_controller_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40070000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40078000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40080000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40088000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40090000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40098000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400a0000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_400a8000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_400b0000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_400b8000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_400d8000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_50100000, __VA_ARGS__) fn(DT_N_S_soc_S_pio_50200000, __VA_ARGS__) fn(DT_N_S_soc_S_pio_50300000, __VA_ARGS__) fn(DT_N_S_soc_S_pio_50400000, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_400d0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_reset_controller_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_controller_40010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40028000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40070000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40078000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40080000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40088000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40090000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40098000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400a0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_400a8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_400b0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_400b8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_400d8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_50000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_50100000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pio_50200000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pio_50300000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pio_50400000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_reset_controller_40020000) fn(DT_N_S_soc_S_clock_controller_40010000) fn(DT_N_S_soc_S_gpio_40028000) fn(DT_N_S_soc_S_uart_40070000) fn(DT_N_S_soc_S_i2c_40098000) fn(DT_N_S_soc_S_adc_400a0000) fn(DT_N_S_soc_S_timer_400b0000) fn(DT_N_S_soc_S_usbd_50100000) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_reset_controller_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_controller_40010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40028000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40070000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40098000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400a0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_400b0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_50100000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_reset_controller_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_controller_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40070000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40098000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400a0000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_400b0000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_50100000, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_reset_controller_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_controller_40010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40028000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40070000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40098000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400a0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_400b0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_50100000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_HASH DcVqqq9YzG86l3_Hk7pNncUh2rnHG8USjbVY6wBdFts

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 4
#define DT_N_S_soc_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	25, /* /soc/clock-controller@40010000 */ \
	26, /* /soc/interrupt-controller@e000e100 */ \
	27, /* /soc/reset-controller@40020000 */ \
	28, /* /soc/adc@400a0000 */ \
	44, /* /soc/dma@50000000 */ \
	45, /* /soc/gpio@40028000 */ \
	46, /* /soc/i2c@40090000 */ \
	47, /* /soc/i2c@40098000 */ \
	48, /* /soc/memory@20000000 */ \
	49, /* /soc/pio@50200000 */ \
	50, /* /soc/pio@50300000 */ \
	51, /* /soc/pio@50400000 */ \
	52, /* /soc/pwm@400a8000 */ \
	53, /* /soc/spi@40080000 */ \
	54, /* /soc/spi@40088000 */ \
	55, /* /soc/timer@400b0000 */ \
	56, /* /soc/timer@400b8000 */ \
	57, /* /soc/timer@e000e010 */ \
	58, /* /soc/uart@40070000 */ \
	59, /* /soc/uart@40078000 */ \
	60, /* /soc/usbd@50100000 */ \
	61, /* /soc/watchdog@400d8000 */ \
	62, /* /soc/flash-controller@400d0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_IRQ_LEVEL 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /pin-controller
 *
 * Node identifier: DT_N_S_pin_controller
 *
 * Binding (compatible = raspberrypi,pico-pinctrl):
 *   $ZEPHYR_BASE\dts\bindings\pinctrl\raspberrypi,pico-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_PATH "/pin-controller"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_FULL_NAME "pin-controller"
#define DT_N_S_pin_controller_FULL_NAME_UNQUOTED pin-controller
#define DT_N_S_pin_controller_FULL_NAME_TOKEN pin_controller
#define DT_N_S_pin_controller_FULL_NAME_UPPER_TOKEN PIN_CONTROLLER

/* Node parent (/) identifier: */
#define DT_N_S_pin_controller_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_NODELABEL_NUM 1
#define DT_N_S_pin_controller_FOREACH_NODELABEL(fn) fn(pinctrl)
#define DT_N_S_pin_controller_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinctrl, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_CHILD_NUM 5
#define DT_N_S_pin_controller_CHILD_NUM_STATUS_OKAY 5
#define DT_N_S_pin_controller_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_i2c1_default) fn(DT_N_S_pin_controller_S_spi1_default) fn(DT_N_S_pin_controller_S_pwm_ch4b_default) fn(DT_N_S_pin_controller_S_adc_default)
#define DT_N_S_pin_controller_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c1_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi1_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_pwm_ch4b_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_adc_default)
#define DT_N_S_pin_controller_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm_ch4b_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_adc_default, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c1_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi1_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_pwm_ch4b_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_adc_default, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_i2c1_default) fn(DT_N_S_pin_controller_S_spi1_default) fn(DT_N_S_pin_controller_S_pwm_ch4b_default) fn(DT_N_S_pin_controller_S_adc_default)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c1_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi1_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_pwm_ch4b_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_adc_default)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm_ch4b_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_adc_default, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c1_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi1_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_pwm_ch4b_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_adc_default, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_HASH bWf59uCG_pY5hQAcoRx7FSfuctl8KNxAtmdgsI6QClA

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_ORD 5
#define DT_N_S_pin_controller_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_SUPPORTS_ORDS \
	6, /* /pin-controller/adc_default */ \
	34, /* /pin-controller/i2c1_default */ \
	36, /* /pin-controller/pwm_ch4b_default */ \
	38, /* /pin-controller/spi1_default */ \
	41, /* /pin-controller/uart0_default */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_pinctrl DT_N_S_pin_controller
#define DT_N_NODELABEL_pinctrl               DT_N_S_pin_controller

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_REG_NUM 0
#define DT_N_S_pin_controller_RANGES_NUM 0
#define DT_N_S_pin_controller_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_IRQ_NUM 0
#define DT_N_S_pin_controller_IRQ_LEVEL 0
#define DT_N_S_pin_controller_COMPAT_MATCHES_raspberrypi_pico_pinctrl 1
#define DT_N_S_pin_controller_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_pin_controller_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_COMPAT_MODEL_IDX_0 "pico-pinctrl"
#define DT_N_S_pin_controller_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_P_status "okay"
#define DT_N_S_pin_controller_P_status_STRING_UNQUOTED okay
#define DT_N_S_pin_controller_P_status_STRING_TOKEN okay
#define DT_N_S_pin_controller_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_pin_controller_P_status_IDX_0 "okay"
#define DT_N_S_pin_controller_P_status_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_pin_controller_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_pin_controller_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller, status, 0)
#define DT_N_S_pin_controller_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller, status, 0)
#define DT_N_S_pin_controller_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller, status, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller, status, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_status_LEN 1
#define DT_N_S_pin_controller_P_status_EXISTS 1
#define DT_N_S_pin_controller_P_compatible {"raspberrypi,pico-pinctrl"}
#define DT_N_S_pin_controller_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_P_compatible_IDX_0 "raspberrypi,pico-pinctrl"
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-pinctrl
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_pinctrl
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_PINCTRL
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller, compatible, 0)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller, compatible, 0)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_compatible_LEN 1
#define DT_N_S_pin_controller_P_compatible_EXISTS 1
#define DT_N_S_pin_controller_P_zephyr_deferred_init 0
#define DT_N_S_pin_controller_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_pin_controller_P_wakeup_source 0
#define DT_N_S_pin_controller_P_wakeup_source_EXISTS 1
#define DT_N_S_pin_controller_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_pin_controller_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pin-controller/adc_default
 *
 * Node identifier: DT_N_S_pin_controller_S_adc_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_adc_default_PATH "/pin-controller/adc_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_adc_default_FULL_NAME "adc_default"
#define DT_N_S_pin_controller_S_adc_default_FULL_NAME_UNQUOTED adc_default
#define DT_N_S_pin_controller_S_adc_default_FULL_NAME_TOKEN adc_default
#define DT_N_S_pin_controller_S_adc_default_FULL_NAME_UPPER_TOKEN ADC_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_adc_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_adc_default_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_adc_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_adc_default_FOREACH_NODELABEL(fn) fn(adc_default)
#define DT_N_S_pin_controller_S_adc_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc_default, __VA_ARGS__)
#define DT_N_S_pin_controller_S_adc_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_adc_default_CHILD_NUM 1
#define DT_N_S_pin_controller_S_adc_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pin_controller_S_adc_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_adc_default_S_group1)
#define DT_N_S_pin_controller_S_adc_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_adc_default_S_group1)
#define DT_N_S_pin_controller_S_adc_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_adc_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_adc_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_adc_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_adc_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_adc_default_S_group1)
#define DT_N_S_pin_controller_S_adc_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_adc_default_S_group1)
#define DT_N_S_pin_controller_S_adc_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_adc_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_adc_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_adc_default_S_group1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_S_adc_default_HASH C_XB9xzvKyWIPhmYTcrHx_KmTMcjOQOLIDpRi8yrHE8

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_adc_default_ORD 6
#define DT_N_S_pin_controller_S_adc_default_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_adc_default_REQUIRES_ORDS \
	5, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_adc_default_SUPPORTS_ORDS \
	28, /* /soc/adc@400a0000 */ \
	33, /* /pin-controller/adc_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_adc_default_EXISTS 1
#define DT_N_NODELABEL_adc_default DT_N_S_pin_controller_S_adc_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_adc_default_REG_NUM 0
#define DT_N_S_pin_controller_S_adc_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_adc_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_adc_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_adc_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_adc_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_adc_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /clocks
 *
 * Node identifier: DT_N_S_clocks
 */

/* Node's full path: */
#define DT_N_S_clocks_PATH "/clocks"

/* Node's name with unit-address: */
#define DT_N_S_clocks_FULL_NAME "clocks"
#define DT_N_S_clocks_FULL_NAME_UNQUOTED clocks
#define DT_N_S_clocks_FULL_NAME_TOKEN clocks
#define DT_N_S_clocks_FULL_NAME_UPPER_TOKEN CLOCKS

/* Node parent (/) identifier: */
#define DT_N_S_clocks_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_NODELABEL_NUM 0
#define DT_N_S_clocks_FOREACH_NODELABEL(fn) 
#define DT_N_S_clocks_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_clocks_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_CHILD_NUM 17
#define DT_N_S_clocks_CHILD_NUM_STATUS_OKAY 15
#define DT_N_S_clocks_FOREACH_CHILD(fn) fn(DT_N_S_clocks_S_clk_gpout0) fn(DT_N_S_clocks_S_clk_gpout1) fn(DT_N_S_clocks_S_clk_gpout2) fn(DT_N_S_clocks_S_clk_gpout3) fn(DT_N_S_clocks_S_clk_hstx) fn(DT_N_S_clocks_S_clk_ref) fn(DT_N_S_clocks_S_clk_sys) fn(DT_N_S_clocks_S_clk_usb) fn(DT_N_S_clocks_S_clk_adc) fn(DT_N_S_clocks_S_clk_peri) fn(DT_N_S_clocks_S_pll_sys) fn(DT_N_S_clocks_S_pll_usb) fn(DT_N_S_clocks_S_rosc) fn(DT_N_S_clocks_S_rosc_ph) fn(DT_N_S_clocks_S_xosc) fn(DT_N_S_clocks_S_gpin0) fn(DT_N_S_clocks_S_gpin1)
#define DT_N_S_clocks_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_gpout0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_gpout1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_gpout2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_gpout3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hstx) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_ref) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_sys) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_usb) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_adc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_peri) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll_sys) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll_usb) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_rosc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_rosc_ph) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_xosc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_gpin0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_gpin1)
#define DT_N_S_clocks_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_gpout0, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_gpout1, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_gpout2, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_gpout3, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hstx, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_ref, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_sys, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_usb, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_adc, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_peri, __VA_ARGS__) fn(DT_N_S_clocks_S_pll_sys, __VA_ARGS__) fn(DT_N_S_clocks_S_pll_usb, __VA_ARGS__) fn(DT_N_S_clocks_S_rosc, __VA_ARGS__) fn(DT_N_S_clocks_S_rosc_ph, __VA_ARGS__) fn(DT_N_S_clocks_S_xosc, __VA_ARGS__) fn(DT_N_S_clocks_S_gpin0, __VA_ARGS__) fn(DT_N_S_clocks_S_gpin1, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_gpout0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_gpout1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_gpout2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_gpout3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hstx, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_ref, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_sys, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_usb, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_adc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_peri, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll_sys, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll_usb, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_rosc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_rosc_ph, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_xosc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_gpin0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_gpin1, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_clocks_S_clk_gpout0) fn(DT_N_S_clocks_S_clk_gpout1) fn(DT_N_S_clocks_S_clk_gpout2) fn(DT_N_S_clocks_S_clk_gpout3) fn(DT_N_S_clocks_S_clk_hstx) fn(DT_N_S_clocks_S_clk_ref) fn(DT_N_S_clocks_S_clk_sys) fn(DT_N_S_clocks_S_clk_usb) fn(DT_N_S_clocks_S_clk_adc) fn(DT_N_S_clocks_S_clk_peri) fn(DT_N_S_clocks_S_pll_sys) fn(DT_N_S_clocks_S_pll_usb) fn(DT_N_S_clocks_S_rosc) fn(DT_N_S_clocks_S_rosc_ph) fn(DT_N_S_clocks_S_xosc)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_gpout0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_gpout1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_gpout2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_gpout3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hstx) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_ref) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_sys) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_usb) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_adc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_peri) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll_sys) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll_usb) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_rosc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_rosc_ph) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_xosc)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_gpout0, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_gpout1, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_gpout2, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_gpout3, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hstx, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_ref, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_sys, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_usb, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_adc, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_peri, __VA_ARGS__) fn(DT_N_S_clocks_S_pll_sys, __VA_ARGS__) fn(DT_N_S_clocks_S_pll_usb, __VA_ARGS__) fn(DT_N_S_clocks_S_rosc, __VA_ARGS__) fn(DT_N_S_clocks_S_rosc_ph, __VA_ARGS__) fn(DT_N_S_clocks_S_xosc, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_gpout0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_gpout1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_gpout2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_gpout3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hstx, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_ref, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_sys, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_usb, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_adc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_peri, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll_sys, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll_usb, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_rosc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_rosc_ph, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_xosc, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_clocks_HASH 3P3fmk_q5wPvaymGA6NeomHHBb_cCfQX2PaKw_k1t_w

/* Node's dependency ordinal: */
#define DT_N_S_clocks_ORD 7
#define DT_N_S_clocks_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_SUPPORTS_ORDS \
	8, /* /clocks/xosc */ \
	9, /* /clocks/pll-usb */ \
	10, /* /clocks/clk-adc */ \
	11, /* /clocks/pll-sys */ \
	12, /* /clocks/clk-gpout0 */ \
	13, /* /clocks/clk-gpout1 */ \
	14, /* /clocks/clk-gpout2 */ \
	15, /* /clocks/clk-gpout3 */ \
	16, /* /clocks/clk-hstx */ \
	17, /* /clocks/clk-sys */ \
	18, /* /clocks/clk-peri */ \
	19, /* /clocks/clk-ref */ \
	20, /* /clocks/clk-usb */ \
	21, /* /clocks/gpin0 */ \
	22, /* /clocks/gpin1 */ \
	23, /* /clocks/rosc */ \
	24, /* /clocks/rosc-ph */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_REG_NUM 0
#define DT_N_S_clocks_RANGES_NUM 0
#define DT_N_S_clocks_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_IRQ_NUM 0
#define DT_N_S_clocks_IRQ_LEVEL 0
#define DT_N_S_clocks_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /clocks/xosc
 *
 * Node identifier: DT_N_S_clocks_S_xosc
 *
 * Binding (compatible = raspberrypi,pico-xosc):
 *   $ZEPHYR_BASE\dts\bindings\clock\raspberrypi,pico-xosc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_xosc_PATH "/clocks/xosc"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_xosc_FULL_NAME "xosc"
#define DT_N_S_clocks_S_xosc_FULL_NAME_UNQUOTED xosc
#define DT_N_S_clocks_S_xosc_FULL_NAME_TOKEN xosc
#define DT_N_S_clocks_S_xosc_FULL_NAME_UPPER_TOKEN XOSC

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_xosc_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_xosc_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_xosc_NODELABEL_NUM 1
#define DT_N_S_clocks_S_xosc_FOREACH_NODELABEL(fn) fn(xosc)
#define DT_N_S_clocks_S_xosc_FOREACH_NODELABEL_VARGS(fn, ...) fn(xosc, __VA_ARGS__)
#define DT_N_S_clocks_S_xosc_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_xosc_CHILD_NUM 0
#define DT_N_S_clocks_S_xosc_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_xosc_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_xosc_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_xosc_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_xosc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_xosc_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_xosc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_xosc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_xosc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_xosc_HASH ipCS1P0uNOVusVDGqIqx2WbGfya8EHeHc51Kyd75GG0

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_xosc_ORD 8
#define DT_N_S_clocks_S_xosc_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_xosc_REQUIRES_ORDS \
	7, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_xosc_SUPPORTS_ORDS \
	9, /* /clocks/pll-usb */ \
	11, /* /clocks/pll-sys */ \
	19, /* /clocks/clk-ref */ \
	25, /* /soc/clock-controller@40010000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_xosc_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_xosc DT_N_S_clocks_S_xosc
#define DT_N_NODELABEL_xosc               DT_N_S_clocks_S_xosc

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_xosc_REG_NUM 0
#define DT_N_S_clocks_S_xosc_RANGES_NUM 0
#define DT_N_S_clocks_S_xosc_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_xosc_IRQ_NUM 0
#define DT_N_S_clocks_S_xosc_IRQ_LEVEL 0
#define DT_N_S_clocks_S_xosc_COMPAT_MATCHES_raspberrypi_pico_xosc 1
#define DT_N_S_clocks_S_xosc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_xosc_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_clocks_S_xosc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_xosc_COMPAT_MODEL_IDX_0 "pico-xosc"
#define DT_N_S_clocks_S_xosc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_xosc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_xosc_P_startup_delay_multiplier 1
#define DT_N_S_clocks_S_xosc_P_startup_delay_multiplier_EXISTS 1
#define DT_N_S_clocks_S_xosc_P_clock_frequency 12000000
#define DT_N_S_clocks_S_xosc_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_xosc_P_compatible {"raspberrypi,pico-xosc"}
#define DT_N_S_clocks_S_xosc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_xosc_P_compatible_IDX_0 "raspberrypi,pico-xosc"
#define DT_N_S_clocks_S_xosc_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-xosc
#define DT_N_S_clocks_S_xosc_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_xosc
#define DT_N_S_clocks_S_xosc_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_XOSC
#define DT_N_S_clocks_S_xosc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_xosc, compatible, 0)
#define DT_N_S_clocks_S_xosc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_xosc, compatible, 0)
#define DT_N_S_clocks_S_xosc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_xosc, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_xosc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_xosc, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_xosc_P_compatible_LEN 1
#define DT_N_S_clocks_S_xosc_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_xosc_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_xosc_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_xosc_P_wakeup_source 0
#define DT_N_S_clocks_S_xosc_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_xosc_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_xosc_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/pll-usb
 *
 * Node identifier: DT_N_S_clocks_S_pll_usb
 *
 * Binding (compatible = raspberrypi,pico-pll):
 *   $ZEPHYR_BASE\dts\bindings\clock\raspberrypi,pico-pll.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_pll_usb_PATH "/clocks/pll-usb"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_pll_usb_FULL_NAME "pll-usb"
#define DT_N_S_clocks_S_pll_usb_FULL_NAME_UNQUOTED pll-usb
#define DT_N_S_clocks_S_pll_usb_FULL_NAME_TOKEN pll_usb
#define DT_N_S_clocks_S_pll_usb_FULL_NAME_UPPER_TOKEN PLL_USB

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_pll_usb_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_pll_usb_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_pll_usb_NODELABEL_NUM 1
#define DT_N_S_clocks_S_pll_usb_FOREACH_NODELABEL(fn) fn(pll_usb)
#define DT_N_S_clocks_S_pll_usb_FOREACH_NODELABEL_VARGS(fn, ...) fn(pll_usb, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_usb_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_pll_usb_CHILD_NUM 0
#define DT_N_S_clocks_S_pll_usb_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_pll_usb_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_pll_usb_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll_usb_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll_usb_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_pll_usb_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_pll_usb_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll_usb_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll_usb_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_pll_usb_HASH oKkm0rEE8tkEXq0uaai_xcpWFf_3Z7V11cKA9OthSUM

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_pll_usb_ORD 9
#define DT_N_S_clocks_S_pll_usb_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_pll_usb_REQUIRES_ORDS \
	7, /* /clocks */ \
	8, /* /clocks/xosc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_pll_usb_SUPPORTS_ORDS \
	10, /* /clocks/clk-adc */ \
	20, /* /clocks/clk-usb */ \
	25, /* /soc/clock-controller@40010000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_pll_usb_EXISTS 1
#define DT_N_INST_1_raspberrypi_pico_pll DT_N_S_clocks_S_pll_usb
#define DT_N_NODELABEL_pll_usb           DT_N_S_clocks_S_pll_usb

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_pll_usb_REG_NUM 0
#define DT_N_S_clocks_S_pll_usb_RANGES_NUM 0
#define DT_N_S_clocks_S_pll_usb_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_pll_usb_IRQ_NUM 0
#define DT_N_S_clocks_S_pll_usb_IRQ_LEVEL 0
#define DT_N_S_clocks_S_pll_usb_COMPAT_MATCHES_raspberrypi_pico_pll 1
#define DT_N_S_clocks_S_pll_usb_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_usb_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_clocks_S_pll_usb_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_usb_COMPAT_MODEL_IDX_0 "pico-pll"
#define DT_N_S_clocks_S_pll_usb_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_pll_usb_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_pll_usb_P_fb_div 100
#define DT_N_S_clocks_S_pll_usb_P_fb_div_EXISTS 1
#define DT_N_S_clocks_S_pll_usb_P_post_div1 5
#define DT_N_S_clocks_S_pll_usb_P_post_div1_EXISTS 1
#define DT_N_S_clocks_S_pll_usb_P_post_div2 5
#define DT_N_S_clocks_S_pll_usb_P_post_div2_EXISTS 1
#define DT_N_S_clocks_S_pll_usb_P_compatible {"raspberrypi,pico-pll"}
#define DT_N_S_clocks_S_pll_usb_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_usb_P_compatible_IDX_0 "raspberrypi,pico-pll"
#define DT_N_S_clocks_S_pll_usb_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-pll
#define DT_N_S_clocks_S_pll_usb_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_pll
#define DT_N_S_clocks_S_pll_usb_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_PLL
#define DT_N_S_clocks_S_pll_usb_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll_usb, compatible, 0)
#define DT_N_S_clocks_S_pll_usb_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll_usb, compatible, 0)
#define DT_N_S_clocks_S_pll_usb_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll_usb, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_usb_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll_usb, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_usb_P_compatible_LEN 1
#define DT_N_S_clocks_S_pll_usb_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_pll_usb_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_usb_P_clocks_IDX_0_PH DT_N_S_clocks_S_xosc
#define DT_N_S_clocks_S_pll_usb_P_clocks_IDX_0_NAME "xosc"
#define DT_N_S_clocks_S_pll_usb_P_clocks_NAME_xosc_PH DT_N_S_clocks_S_xosc
#define DT_N_S_clocks_S_pll_usb_P_clocks_NAME_xosc_EXISTS 1
#define DT_N_S_clocks_S_pll_usb_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll_usb, clocks, 0)
#define DT_N_S_clocks_S_pll_usb_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll_usb, clocks, 0)
#define DT_N_S_clocks_S_pll_usb_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll_usb, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_usb_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll_usb, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_usb_P_clocks_LEN 1
#define DT_N_S_clocks_S_pll_usb_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_pll_usb_P_clock_names {"xosc"}
#define DT_N_S_clocks_S_pll_usb_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_usb_P_clock_names_IDX_0 "xosc"
#define DT_N_S_clocks_S_pll_usb_P_clock_names_IDX_0_STRING_UNQUOTED xosc
#define DT_N_S_clocks_S_pll_usb_P_clock_names_IDX_0_STRING_TOKEN xosc
#define DT_N_S_clocks_S_pll_usb_P_clock_names_IDX_0_STRING_UPPER_TOKEN XOSC
#define DT_N_S_clocks_S_pll_usb_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll_usb, clock_names, 0)
#define DT_N_S_clocks_S_pll_usb_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll_usb, clock_names, 0)
#define DT_N_S_clocks_S_pll_usb_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll_usb, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_usb_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll_usb, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_usb_P_clock_names_LEN 1
#define DT_N_S_clocks_S_pll_usb_P_clock_names_EXISTS 1
#define DT_N_S_clocks_S_pll_usb_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_pll_usb_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_pll_usb_P_wakeup_source 0
#define DT_N_S_clocks_S_pll_usb_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_pll_usb_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_pll_usb_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_clocks_S_pll_usb_P_clock_div 1
#define DT_N_S_clocks_S_pll_usb_P_clock_div_EXISTS 1

/*
 * Devicetree node: /clocks/clk-adc
 *
 * Node identifier: DT_N_S_clocks_S_clk_adc
 *
 * Binding (compatible = raspberrypi,pico-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\raspberrypi,pico-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_adc_PATH "/clocks/clk-adc"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_adc_FULL_NAME "clk-adc"
#define DT_N_S_clocks_S_clk_adc_FULL_NAME_UNQUOTED clk-adc
#define DT_N_S_clocks_S_clk_adc_FULL_NAME_TOKEN clk_adc
#define DT_N_S_clocks_S_clk_adc_FULL_NAME_UPPER_TOKEN CLK_ADC

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_adc_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_adc_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_adc_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_adc_FOREACH_NODELABEL(fn) fn(clk_adc)
#define DT_N_S_clocks_S_clk_adc_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_adc, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_adc_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_adc_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_adc_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_adc_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_adc_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_adc_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_adc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_adc_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_adc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_adc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_adc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_clk_adc_HASH labQUv6HQdJkW9fnfgNn8EPi5eDWcH_BDnw8_zgAyA8

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_adc_ORD 10
#define DT_N_S_clocks_S_clk_adc_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_adc_REQUIRES_ORDS \
	7, /* /clocks */ \
	9, /* /clocks/pll-usb */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_adc_SUPPORTS_ORDS \
	25, /* /soc/clock-controller@40010000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_adc_EXISTS 1
#define DT_N_INST_8_raspberrypi_pico_clock DT_N_S_clocks_S_clk_adc
#define DT_N_NODELABEL_clk_adc             DT_N_S_clocks_S_clk_adc

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_adc_REG_NUM 0
#define DT_N_S_clocks_S_clk_adc_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_adc_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_adc_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_adc_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_adc_COMPAT_MATCHES_raspberrypi_pico_clock 1
#define DT_N_S_clocks_S_clk_adc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_adc_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_clocks_S_clk_adc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_adc_COMPAT_MODEL_IDX_0 "pico-clock"
#define DT_N_S_clocks_S_clk_adc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_adc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_adc_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_adc_P_clocks_IDX_0_PH DT_N_S_clocks_S_pll_usb
#define DT_N_S_clocks_S_clk_adc_P_clocks_IDX_0_NAME "pll_usb"
#define DT_N_S_clocks_S_clk_adc_P_clocks_NAME_pll_usb_PH DT_N_S_clocks_S_pll_usb
#define DT_N_S_clocks_S_clk_adc_P_clocks_NAME_pll_usb_EXISTS 1
#define DT_N_S_clocks_S_clk_adc_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_adc, clocks, 0)
#define DT_N_S_clocks_S_clk_adc_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_adc, clocks, 0)
#define DT_N_S_clocks_S_clk_adc_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_adc, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_adc_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_adc, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_adc_P_clocks_LEN 1
#define DT_N_S_clocks_S_clk_adc_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_clk_adc_P_clock_names {"pll_usb"}
#define DT_N_S_clocks_S_clk_adc_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_adc_P_clock_names_IDX_0 "pll_usb"
#define DT_N_S_clocks_S_clk_adc_P_clock_names_IDX_0_STRING_UNQUOTED pll_usb
#define DT_N_S_clocks_S_clk_adc_P_clock_names_IDX_0_STRING_TOKEN pll_usb
#define DT_N_S_clocks_S_clk_adc_P_clock_names_IDX_0_STRING_UPPER_TOKEN PLL_USB
#define DT_N_S_clocks_S_clk_adc_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_adc, clock_names, 0)
#define DT_N_S_clocks_S_clk_adc_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_adc, clock_names, 0)
#define DT_N_S_clocks_S_clk_adc_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_adc, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_adc_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_adc, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_adc_P_clock_names_LEN 1
#define DT_N_S_clocks_S_clk_adc_P_clock_names_EXISTS 1
#define DT_N_S_clocks_S_clk_adc_P_clock_frequency 48000000
#define DT_N_S_clocks_S_clk_adc_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_adc_P_compatible {"raspberrypi,pico-clock"}
#define DT_N_S_clocks_S_clk_adc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_adc_P_compatible_IDX_0 "raspberrypi,pico-clock"
#define DT_N_S_clocks_S_clk_adc_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-clock
#define DT_N_S_clocks_S_clk_adc_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_clock
#define DT_N_S_clocks_S_clk_adc_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_CLOCK
#define DT_N_S_clocks_S_clk_adc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_adc, compatible, 0)
#define DT_N_S_clocks_S_clk_adc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_adc, compatible, 0)
#define DT_N_S_clocks_S_clk_adc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_adc, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_adc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_adc, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_adc_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_adc_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_adc_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_adc_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_adc_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_adc_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_adc_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_adc_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/pll-sys
 *
 * Node identifier: DT_N_S_clocks_S_pll_sys
 *
 * Binding (compatible = raspberrypi,pico-pll):
 *   $ZEPHYR_BASE\dts\bindings\clock\raspberrypi,pico-pll.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_pll_sys_PATH "/clocks/pll-sys"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_pll_sys_FULL_NAME "pll-sys"
#define DT_N_S_clocks_S_pll_sys_FULL_NAME_UNQUOTED pll-sys
#define DT_N_S_clocks_S_pll_sys_FULL_NAME_TOKEN pll_sys
#define DT_N_S_clocks_S_pll_sys_FULL_NAME_UPPER_TOKEN PLL_SYS

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_pll_sys_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_pll_sys_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_pll_sys_NODELABEL_NUM 1
#define DT_N_S_clocks_S_pll_sys_FOREACH_NODELABEL(fn) fn(pll_sys)
#define DT_N_S_clocks_S_pll_sys_FOREACH_NODELABEL_VARGS(fn, ...) fn(pll_sys, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_sys_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_pll_sys_CHILD_NUM 0
#define DT_N_S_clocks_S_pll_sys_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_pll_sys_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_pll_sys_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll_sys_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll_sys_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_pll_sys_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_pll_sys_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll_sys_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll_sys_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_pll_sys_HASH uqBAEu__0ApVwR0T_3_1clhpy2_dVooINY8xBZn6wkI

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_pll_sys_ORD 11
#define DT_N_S_clocks_S_pll_sys_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_pll_sys_REQUIRES_ORDS \
	7, /* /clocks */ \
	8, /* /clocks/xosc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_pll_sys_SUPPORTS_ORDS \
	12, /* /clocks/clk-gpout0 */ \
	13, /* /clocks/clk-gpout1 */ \
	14, /* /clocks/clk-gpout2 */ \
	15, /* /clocks/clk-gpout3 */ \
	16, /* /clocks/clk-hstx */ \
	17, /* /clocks/clk-sys */ \
	25, /* /soc/clock-controller@40010000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_pll_sys_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_pll DT_N_S_clocks_S_pll_sys
#define DT_N_NODELABEL_pll_sys           DT_N_S_clocks_S_pll_sys

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_pll_sys_REG_NUM 0
#define DT_N_S_clocks_S_pll_sys_RANGES_NUM 0
#define DT_N_S_clocks_S_pll_sys_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_pll_sys_IRQ_NUM 0
#define DT_N_S_clocks_S_pll_sys_IRQ_LEVEL 0
#define DT_N_S_clocks_S_pll_sys_COMPAT_MATCHES_raspberrypi_pico_pll 1
#define DT_N_S_clocks_S_pll_sys_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_sys_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_clocks_S_pll_sys_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_sys_COMPAT_MODEL_IDX_0 "pico-pll"
#define DT_N_S_clocks_S_pll_sys_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_pll_sys_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_pll_sys_P_fb_div 125
#define DT_N_S_clocks_S_pll_sys_P_fb_div_EXISTS 1
#define DT_N_S_clocks_S_pll_sys_P_post_div1 5
#define DT_N_S_clocks_S_pll_sys_P_post_div1_EXISTS 1
#define DT_N_S_clocks_S_pll_sys_P_post_div2 2
#define DT_N_S_clocks_S_pll_sys_P_post_div2_EXISTS 1
#define DT_N_S_clocks_S_pll_sys_P_compatible {"raspberrypi,pico-pll"}
#define DT_N_S_clocks_S_pll_sys_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_sys_P_compatible_IDX_0 "raspberrypi,pico-pll"
#define DT_N_S_clocks_S_pll_sys_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-pll
#define DT_N_S_clocks_S_pll_sys_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_pll
#define DT_N_S_clocks_S_pll_sys_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_PLL
#define DT_N_S_clocks_S_pll_sys_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll_sys, compatible, 0)
#define DT_N_S_clocks_S_pll_sys_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll_sys, compatible, 0)
#define DT_N_S_clocks_S_pll_sys_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll_sys, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_sys_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll_sys, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_sys_P_compatible_LEN 1
#define DT_N_S_clocks_S_pll_sys_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_pll_sys_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_sys_P_clocks_IDX_0_PH DT_N_S_clocks_S_xosc
#define DT_N_S_clocks_S_pll_sys_P_clocks_IDX_0_NAME "xosc"
#define DT_N_S_clocks_S_pll_sys_P_clocks_NAME_xosc_PH DT_N_S_clocks_S_xosc
#define DT_N_S_clocks_S_pll_sys_P_clocks_NAME_xosc_EXISTS 1
#define DT_N_S_clocks_S_pll_sys_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll_sys, clocks, 0)
#define DT_N_S_clocks_S_pll_sys_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll_sys, clocks, 0)
#define DT_N_S_clocks_S_pll_sys_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll_sys, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_sys_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll_sys, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_sys_P_clocks_LEN 1
#define DT_N_S_clocks_S_pll_sys_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_pll_sys_P_clock_names {"xosc"}
#define DT_N_S_clocks_S_pll_sys_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_sys_P_clock_names_IDX_0 "xosc"
#define DT_N_S_clocks_S_pll_sys_P_clock_names_IDX_0_STRING_UNQUOTED xosc
#define DT_N_S_clocks_S_pll_sys_P_clock_names_IDX_0_STRING_TOKEN xosc
#define DT_N_S_clocks_S_pll_sys_P_clock_names_IDX_0_STRING_UPPER_TOKEN XOSC
#define DT_N_S_clocks_S_pll_sys_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll_sys, clock_names, 0)
#define DT_N_S_clocks_S_pll_sys_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll_sys, clock_names, 0)
#define DT_N_S_clocks_S_pll_sys_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll_sys, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_sys_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll_sys, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_sys_P_clock_names_LEN 1
#define DT_N_S_clocks_S_pll_sys_P_clock_names_EXISTS 1
#define DT_N_S_clocks_S_pll_sys_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_pll_sys_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_pll_sys_P_wakeup_source 0
#define DT_N_S_clocks_S_pll_sys_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_pll_sys_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_pll_sys_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_clocks_S_pll_sys_P_clock_div 1
#define DT_N_S_clocks_S_pll_sys_P_clock_div_EXISTS 1

/*
 * Devicetree node: /clocks/clk-gpout0
 *
 * Node identifier: DT_N_S_clocks_S_clk_gpout0
 *
 * Binding (compatible = raspberrypi,pico-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\raspberrypi,pico-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_gpout0_PATH "/clocks/clk-gpout0"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_gpout0_FULL_NAME "clk-gpout0"
#define DT_N_S_clocks_S_clk_gpout0_FULL_NAME_UNQUOTED clk-gpout0
#define DT_N_S_clocks_S_clk_gpout0_FULL_NAME_TOKEN clk_gpout0
#define DT_N_S_clocks_S_clk_gpout0_FULL_NAME_UPPER_TOKEN CLK_GPOUT0

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_gpout0_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_gpout0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_gpout0_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_gpout0_FOREACH_NODELABEL(fn) fn(clk_gpout0)
#define DT_N_S_clocks_S_clk_gpout0_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_gpout0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout0_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_gpout0_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_gpout0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_gpout0_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_gpout0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_gpout0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_gpout0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_gpout0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_gpout0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_gpout0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_gpout0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_clk_gpout0_HASH sVW037fhn52iEUPxeLyWFB3JWwUEo_ZnshTqi283Y68

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_gpout0_ORD 12
#define DT_N_S_clocks_S_clk_gpout0_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_gpout0_REQUIRES_ORDS \
	7, /* /clocks */ \
	11, /* /clocks/pll-sys */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_gpout0_SUPPORTS_ORDS \
	25, /* /soc/clock-controller@40010000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_gpout0_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_clock DT_N_S_clocks_S_clk_gpout0
#define DT_N_NODELABEL_clk_gpout0          DT_N_S_clocks_S_clk_gpout0

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_gpout0_REG_NUM 0
#define DT_N_S_clocks_S_clk_gpout0_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_gpout0_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_gpout0_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_gpout0_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_gpout0_COMPAT_MATCHES_raspberrypi_pico_clock 1
#define DT_N_S_clocks_S_clk_gpout0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout0_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_clocks_S_clk_gpout0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout0_COMPAT_MODEL_IDX_0 "pico-clock"
#define DT_N_S_clocks_S_clk_gpout0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_gpout0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_gpout0_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout0_P_clocks_IDX_0_PH DT_N_S_clocks_S_pll_sys
#define DT_N_S_clocks_S_clk_gpout0_P_clocks_IDX_0_NAME "pll_sys"
#define DT_N_S_clocks_S_clk_gpout0_P_clocks_NAME_pll_sys_PH DT_N_S_clocks_S_pll_sys
#define DT_N_S_clocks_S_clk_gpout0_P_clocks_NAME_pll_sys_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout0_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_gpout0, clocks, 0)
#define DT_N_S_clocks_S_clk_gpout0_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_gpout0, clocks, 0)
#define DT_N_S_clocks_S_clk_gpout0_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_gpout0, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout0_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_gpout0, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout0_P_clocks_LEN 1
#define DT_N_S_clocks_S_clk_gpout0_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout0_P_clock_names {"pll_sys"}
#define DT_N_S_clocks_S_clk_gpout0_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout0_P_clock_names_IDX_0 "pll_sys"
#define DT_N_S_clocks_S_clk_gpout0_P_clock_names_IDX_0_STRING_UNQUOTED pll_sys
#define DT_N_S_clocks_S_clk_gpout0_P_clock_names_IDX_0_STRING_TOKEN pll_sys
#define DT_N_S_clocks_S_clk_gpout0_P_clock_names_IDX_0_STRING_UPPER_TOKEN PLL_SYS
#define DT_N_S_clocks_S_clk_gpout0_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_gpout0, clock_names, 0)
#define DT_N_S_clocks_S_clk_gpout0_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_gpout0, clock_names, 0)
#define DT_N_S_clocks_S_clk_gpout0_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_gpout0, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout0_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_gpout0, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout0_P_clock_names_LEN 1
#define DT_N_S_clocks_S_clk_gpout0_P_clock_names_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout0_P_clock_frequency 150000000
#define DT_N_S_clocks_S_clk_gpout0_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout0_P_compatible {"raspberrypi,pico-clock"}
#define DT_N_S_clocks_S_clk_gpout0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout0_P_compatible_IDX_0 "raspberrypi,pico-clock"
#define DT_N_S_clocks_S_clk_gpout0_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-clock
#define DT_N_S_clocks_S_clk_gpout0_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_clock
#define DT_N_S_clocks_S_clk_gpout0_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_CLOCK
#define DT_N_S_clocks_S_clk_gpout0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_gpout0, compatible, 0)
#define DT_N_S_clocks_S_clk_gpout0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_gpout0, compatible, 0)
#define DT_N_S_clocks_S_clk_gpout0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_gpout0, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_gpout0, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout0_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_gpout0_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout0_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_gpout0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout0_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_gpout0_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_gpout0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/clk-gpout1
 *
 * Node identifier: DT_N_S_clocks_S_clk_gpout1
 *
 * Binding (compatible = raspberrypi,pico-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\raspberrypi,pico-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_gpout1_PATH "/clocks/clk-gpout1"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_gpout1_FULL_NAME "clk-gpout1"
#define DT_N_S_clocks_S_clk_gpout1_FULL_NAME_UNQUOTED clk-gpout1
#define DT_N_S_clocks_S_clk_gpout1_FULL_NAME_TOKEN clk_gpout1
#define DT_N_S_clocks_S_clk_gpout1_FULL_NAME_UPPER_TOKEN CLK_GPOUT1

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_gpout1_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_gpout1_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_gpout1_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_gpout1_FOREACH_NODELABEL(fn) fn(clk_gpout1)
#define DT_N_S_clocks_S_clk_gpout1_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_gpout1, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout1_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_gpout1_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_gpout1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_gpout1_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_gpout1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_gpout1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_gpout1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_gpout1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_gpout1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_gpout1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_gpout1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_clk_gpout1_HASH R_VwW_BIEaSi1DVQGUmbQlSbflmXwTlTGDonM5oZPOk

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_gpout1_ORD 13
#define DT_N_S_clocks_S_clk_gpout1_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_gpout1_REQUIRES_ORDS \
	7, /* /clocks */ \
	11, /* /clocks/pll-sys */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_gpout1_SUPPORTS_ORDS \
	25, /* /soc/clock-controller@40010000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_gpout1_EXISTS 1
#define DT_N_INST_1_raspberrypi_pico_clock DT_N_S_clocks_S_clk_gpout1
#define DT_N_NODELABEL_clk_gpout1          DT_N_S_clocks_S_clk_gpout1

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_gpout1_REG_NUM 0
#define DT_N_S_clocks_S_clk_gpout1_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_gpout1_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_gpout1_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_gpout1_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_gpout1_COMPAT_MATCHES_raspberrypi_pico_clock 1
#define DT_N_S_clocks_S_clk_gpout1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout1_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_clocks_S_clk_gpout1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout1_COMPAT_MODEL_IDX_0 "pico-clock"
#define DT_N_S_clocks_S_clk_gpout1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_gpout1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_gpout1_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout1_P_clocks_IDX_0_PH DT_N_S_clocks_S_pll_sys
#define DT_N_S_clocks_S_clk_gpout1_P_clocks_IDX_0_NAME "pll_sys"
#define DT_N_S_clocks_S_clk_gpout1_P_clocks_NAME_pll_sys_PH DT_N_S_clocks_S_pll_sys
#define DT_N_S_clocks_S_clk_gpout1_P_clocks_NAME_pll_sys_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout1_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_gpout1, clocks, 0)
#define DT_N_S_clocks_S_clk_gpout1_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_gpout1, clocks, 0)
#define DT_N_S_clocks_S_clk_gpout1_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_gpout1, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout1_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_gpout1, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout1_P_clocks_LEN 1
#define DT_N_S_clocks_S_clk_gpout1_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout1_P_clock_names {"pll_sys"}
#define DT_N_S_clocks_S_clk_gpout1_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout1_P_clock_names_IDX_0 "pll_sys"
#define DT_N_S_clocks_S_clk_gpout1_P_clock_names_IDX_0_STRING_UNQUOTED pll_sys
#define DT_N_S_clocks_S_clk_gpout1_P_clock_names_IDX_0_STRING_TOKEN pll_sys
#define DT_N_S_clocks_S_clk_gpout1_P_clock_names_IDX_0_STRING_UPPER_TOKEN PLL_SYS
#define DT_N_S_clocks_S_clk_gpout1_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_gpout1, clock_names, 0)
#define DT_N_S_clocks_S_clk_gpout1_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_gpout1, clock_names, 0)
#define DT_N_S_clocks_S_clk_gpout1_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_gpout1, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout1_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_gpout1, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout1_P_clock_names_LEN 1
#define DT_N_S_clocks_S_clk_gpout1_P_clock_names_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout1_P_clock_frequency 150000000
#define DT_N_S_clocks_S_clk_gpout1_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout1_P_compatible {"raspberrypi,pico-clock"}
#define DT_N_S_clocks_S_clk_gpout1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout1_P_compatible_IDX_0 "raspberrypi,pico-clock"
#define DT_N_S_clocks_S_clk_gpout1_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-clock
#define DT_N_S_clocks_S_clk_gpout1_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_clock
#define DT_N_S_clocks_S_clk_gpout1_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_CLOCK
#define DT_N_S_clocks_S_clk_gpout1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_gpout1, compatible, 0)
#define DT_N_S_clocks_S_clk_gpout1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_gpout1, compatible, 0)
#define DT_N_S_clocks_S_clk_gpout1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_gpout1, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_gpout1, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout1_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_gpout1_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout1_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_gpout1_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout1_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_gpout1_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_gpout1_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/clk-gpout2
 *
 * Node identifier: DT_N_S_clocks_S_clk_gpout2
 *
 * Binding (compatible = raspberrypi,pico-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\raspberrypi,pico-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_gpout2_PATH "/clocks/clk-gpout2"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_gpout2_FULL_NAME "clk-gpout2"
#define DT_N_S_clocks_S_clk_gpout2_FULL_NAME_UNQUOTED clk-gpout2
#define DT_N_S_clocks_S_clk_gpout2_FULL_NAME_TOKEN clk_gpout2
#define DT_N_S_clocks_S_clk_gpout2_FULL_NAME_UPPER_TOKEN CLK_GPOUT2

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_gpout2_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_gpout2_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_gpout2_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_gpout2_FOREACH_NODELABEL(fn) fn(clk_gpout2)
#define DT_N_S_clocks_S_clk_gpout2_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_gpout2, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout2_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_gpout2_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_gpout2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_gpout2_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_gpout2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_gpout2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_gpout2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_gpout2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_gpout2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_gpout2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_gpout2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_clk_gpout2_HASH 7a_kiqaoEu_TJ2ty28_f3ra8tmVf_eI__dXkp7T5q1U

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_gpout2_ORD 14
#define DT_N_S_clocks_S_clk_gpout2_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_gpout2_REQUIRES_ORDS \
	7, /* /clocks */ \
	11, /* /clocks/pll-sys */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_gpout2_SUPPORTS_ORDS \
	25, /* /soc/clock-controller@40010000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_gpout2_EXISTS 1
#define DT_N_INST_2_raspberrypi_pico_clock DT_N_S_clocks_S_clk_gpout2
#define DT_N_NODELABEL_clk_gpout2          DT_N_S_clocks_S_clk_gpout2

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_gpout2_REG_NUM 0
#define DT_N_S_clocks_S_clk_gpout2_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_gpout2_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_gpout2_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_gpout2_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_gpout2_COMPAT_MATCHES_raspberrypi_pico_clock 1
#define DT_N_S_clocks_S_clk_gpout2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout2_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_clocks_S_clk_gpout2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout2_COMPAT_MODEL_IDX_0 "pico-clock"
#define DT_N_S_clocks_S_clk_gpout2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_gpout2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_gpout2_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout2_P_clocks_IDX_0_PH DT_N_S_clocks_S_pll_sys
#define DT_N_S_clocks_S_clk_gpout2_P_clocks_IDX_0_NAME "pll_sys"
#define DT_N_S_clocks_S_clk_gpout2_P_clocks_NAME_pll_sys_PH DT_N_S_clocks_S_pll_sys
#define DT_N_S_clocks_S_clk_gpout2_P_clocks_NAME_pll_sys_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout2_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_gpout2, clocks, 0)
#define DT_N_S_clocks_S_clk_gpout2_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_gpout2, clocks, 0)
#define DT_N_S_clocks_S_clk_gpout2_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_gpout2, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout2_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_gpout2, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout2_P_clocks_LEN 1
#define DT_N_S_clocks_S_clk_gpout2_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout2_P_clock_names {"pll_sys"}
#define DT_N_S_clocks_S_clk_gpout2_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout2_P_clock_names_IDX_0 "pll_sys"
#define DT_N_S_clocks_S_clk_gpout2_P_clock_names_IDX_0_STRING_UNQUOTED pll_sys
#define DT_N_S_clocks_S_clk_gpout2_P_clock_names_IDX_0_STRING_TOKEN pll_sys
#define DT_N_S_clocks_S_clk_gpout2_P_clock_names_IDX_0_STRING_UPPER_TOKEN PLL_SYS
#define DT_N_S_clocks_S_clk_gpout2_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_gpout2, clock_names, 0)
#define DT_N_S_clocks_S_clk_gpout2_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_gpout2, clock_names, 0)
#define DT_N_S_clocks_S_clk_gpout2_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_gpout2, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout2_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_gpout2, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout2_P_clock_names_LEN 1
#define DT_N_S_clocks_S_clk_gpout2_P_clock_names_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout2_P_clock_frequency 150000000
#define DT_N_S_clocks_S_clk_gpout2_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout2_P_compatible {"raspberrypi,pico-clock"}
#define DT_N_S_clocks_S_clk_gpout2_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout2_P_compatible_IDX_0 "raspberrypi,pico-clock"
#define DT_N_S_clocks_S_clk_gpout2_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-clock
#define DT_N_S_clocks_S_clk_gpout2_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_clock
#define DT_N_S_clocks_S_clk_gpout2_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_CLOCK
#define DT_N_S_clocks_S_clk_gpout2_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_gpout2, compatible, 0)
#define DT_N_S_clocks_S_clk_gpout2_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_gpout2, compatible, 0)
#define DT_N_S_clocks_S_clk_gpout2_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_gpout2, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout2_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_gpout2, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout2_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_gpout2_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout2_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_gpout2_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout2_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_gpout2_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout2_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_gpout2_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/clk-gpout3
 *
 * Node identifier: DT_N_S_clocks_S_clk_gpout3
 *
 * Binding (compatible = raspberrypi,pico-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\raspberrypi,pico-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_gpout3_PATH "/clocks/clk-gpout3"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_gpout3_FULL_NAME "clk-gpout3"
#define DT_N_S_clocks_S_clk_gpout3_FULL_NAME_UNQUOTED clk-gpout3
#define DT_N_S_clocks_S_clk_gpout3_FULL_NAME_TOKEN clk_gpout3
#define DT_N_S_clocks_S_clk_gpout3_FULL_NAME_UPPER_TOKEN CLK_GPOUT3

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_gpout3_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_gpout3_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_gpout3_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_gpout3_FOREACH_NODELABEL(fn) fn(clk_gpout3)
#define DT_N_S_clocks_S_clk_gpout3_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_gpout3, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout3_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_gpout3_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_gpout3_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_gpout3_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_gpout3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_gpout3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_gpout3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_gpout3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_gpout3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_gpout3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_gpout3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_clk_gpout3_HASH wGu6krmB9cqzSUEkQEmAKsQdOfF2TOp42zYBcg8KImo

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_gpout3_ORD 15
#define DT_N_S_clocks_S_clk_gpout3_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_gpout3_REQUIRES_ORDS \
	7, /* /clocks */ \
	11, /* /clocks/pll-sys */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_gpout3_SUPPORTS_ORDS \
	25, /* /soc/clock-controller@40010000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_gpout3_EXISTS 1
#define DT_N_INST_3_raspberrypi_pico_clock DT_N_S_clocks_S_clk_gpout3
#define DT_N_NODELABEL_clk_gpout3          DT_N_S_clocks_S_clk_gpout3

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_gpout3_REG_NUM 0
#define DT_N_S_clocks_S_clk_gpout3_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_gpout3_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_gpout3_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_gpout3_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_gpout3_COMPAT_MATCHES_raspberrypi_pico_clock 1
#define DT_N_S_clocks_S_clk_gpout3_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout3_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_clocks_S_clk_gpout3_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout3_COMPAT_MODEL_IDX_0 "pico-clock"
#define DT_N_S_clocks_S_clk_gpout3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_gpout3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_gpout3_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout3_P_clocks_IDX_0_PH DT_N_S_clocks_S_pll_sys
#define DT_N_S_clocks_S_clk_gpout3_P_clocks_IDX_0_NAME "pll_sys"
#define DT_N_S_clocks_S_clk_gpout3_P_clocks_NAME_pll_sys_PH DT_N_S_clocks_S_pll_sys
#define DT_N_S_clocks_S_clk_gpout3_P_clocks_NAME_pll_sys_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout3_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_gpout3, clocks, 0)
#define DT_N_S_clocks_S_clk_gpout3_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_gpout3, clocks, 0)
#define DT_N_S_clocks_S_clk_gpout3_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_gpout3, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout3_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_gpout3, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout3_P_clocks_LEN 1
#define DT_N_S_clocks_S_clk_gpout3_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout3_P_clock_names {"pll_sys"}
#define DT_N_S_clocks_S_clk_gpout3_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout3_P_clock_names_IDX_0 "pll_sys"
#define DT_N_S_clocks_S_clk_gpout3_P_clock_names_IDX_0_STRING_UNQUOTED pll_sys
#define DT_N_S_clocks_S_clk_gpout3_P_clock_names_IDX_0_STRING_TOKEN pll_sys
#define DT_N_S_clocks_S_clk_gpout3_P_clock_names_IDX_0_STRING_UPPER_TOKEN PLL_SYS
#define DT_N_S_clocks_S_clk_gpout3_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_gpout3, clock_names, 0)
#define DT_N_S_clocks_S_clk_gpout3_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_gpout3, clock_names, 0)
#define DT_N_S_clocks_S_clk_gpout3_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_gpout3, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout3_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_gpout3, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout3_P_clock_names_LEN 1
#define DT_N_S_clocks_S_clk_gpout3_P_clock_names_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout3_P_clock_frequency 150000000
#define DT_N_S_clocks_S_clk_gpout3_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout3_P_compatible {"raspberrypi,pico-clock"}
#define DT_N_S_clocks_S_clk_gpout3_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout3_P_compatible_IDX_0 "raspberrypi,pico-clock"
#define DT_N_S_clocks_S_clk_gpout3_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-clock
#define DT_N_S_clocks_S_clk_gpout3_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_clock
#define DT_N_S_clocks_S_clk_gpout3_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_CLOCK
#define DT_N_S_clocks_S_clk_gpout3_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_gpout3, compatible, 0)
#define DT_N_S_clocks_S_clk_gpout3_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_gpout3, compatible, 0)
#define DT_N_S_clocks_S_clk_gpout3_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_gpout3, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout3_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_gpout3, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_gpout3_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_gpout3_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout3_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_gpout3_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout3_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_gpout3_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_gpout3_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_gpout3_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/clk-hstx
 *
 * Node identifier: DT_N_S_clocks_S_clk_hstx
 *
 * Binding (compatible = raspberrypi,pico-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\raspberrypi,pico-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hstx_PATH "/clocks/clk-hstx"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hstx_FULL_NAME "clk-hstx"
#define DT_N_S_clocks_S_clk_hstx_FULL_NAME_UNQUOTED clk-hstx
#define DT_N_S_clocks_S_clk_hstx_FULL_NAME_TOKEN clk_hstx
#define DT_N_S_clocks_S_clk_hstx_FULL_NAME_UPPER_TOKEN CLK_HSTX

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hstx_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hstx_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_hstx_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_hstx_FOREACH_NODELABEL(fn) fn(clk_hstx)
#define DT_N_S_clocks_S_clk_hstx_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_hstx, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hstx_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_hstx_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_hstx_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_hstx_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hstx_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hstx_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hstx_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_hstx_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hstx_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hstx_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hstx_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_clk_hstx_HASH 2ohRaPOADl8hX5XSU28kFcAz8hZZfI4z5jCUy0QA4B0

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hstx_ORD 16
#define DT_N_S_clocks_S_clk_hstx_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hstx_REQUIRES_ORDS \
	7, /* /clocks */ \
	11, /* /clocks/pll-sys */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hstx_SUPPORTS_ORDS \
	25, /* /soc/clock-controller@40010000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hstx_EXISTS 1
#define DT_N_INST_4_raspberrypi_pico_clock DT_N_S_clocks_S_clk_hstx
#define DT_N_NODELABEL_clk_hstx            DT_N_S_clocks_S_clk_hstx

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hstx_REG_NUM 0
#define DT_N_S_clocks_S_clk_hstx_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hstx_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hstx_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hstx_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_hstx_COMPAT_MATCHES_raspberrypi_pico_clock 1
#define DT_N_S_clocks_S_clk_hstx_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hstx_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_clocks_S_clk_hstx_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hstx_COMPAT_MODEL_IDX_0 "pico-clock"
#define DT_N_S_clocks_S_clk_hstx_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hstx_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hstx_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hstx_P_clocks_IDX_0_PH DT_N_S_clocks_S_pll_sys
#define DT_N_S_clocks_S_clk_hstx_P_clocks_IDX_0_NAME "pll_sys"
#define DT_N_S_clocks_S_clk_hstx_P_clocks_NAME_pll_sys_PH DT_N_S_clocks_S_pll_sys
#define DT_N_S_clocks_S_clk_hstx_P_clocks_NAME_pll_sys_EXISTS 1
#define DT_N_S_clocks_S_clk_hstx_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_hstx, clocks, 0)
#define DT_N_S_clocks_S_clk_hstx_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hstx, clocks, 0)
#define DT_N_S_clocks_S_clk_hstx_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hstx, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hstx_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hstx, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hstx_P_clocks_LEN 1
#define DT_N_S_clocks_S_clk_hstx_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_clk_hstx_P_clock_names {"pll_sys"}
#define DT_N_S_clocks_S_clk_hstx_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hstx_P_clock_names_IDX_0 "pll_sys"
#define DT_N_S_clocks_S_clk_hstx_P_clock_names_IDX_0_STRING_UNQUOTED pll_sys
#define DT_N_S_clocks_S_clk_hstx_P_clock_names_IDX_0_STRING_TOKEN pll_sys
#define DT_N_S_clocks_S_clk_hstx_P_clock_names_IDX_0_STRING_UPPER_TOKEN PLL_SYS
#define DT_N_S_clocks_S_clk_hstx_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_hstx, clock_names, 0)
#define DT_N_S_clocks_S_clk_hstx_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hstx, clock_names, 0)
#define DT_N_S_clocks_S_clk_hstx_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hstx, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hstx_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hstx, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hstx_P_clock_names_LEN 1
#define DT_N_S_clocks_S_clk_hstx_P_clock_names_EXISTS 1
#define DT_N_S_clocks_S_clk_hstx_P_clock_frequency 150000000
#define DT_N_S_clocks_S_clk_hstx_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_hstx_P_compatible {"raspberrypi,pico-clock"}
#define DT_N_S_clocks_S_clk_hstx_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hstx_P_compatible_IDX_0 "raspberrypi,pico-clock"
#define DT_N_S_clocks_S_clk_hstx_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-clock
#define DT_N_S_clocks_S_clk_hstx_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_clock
#define DT_N_S_clocks_S_clk_hstx_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_CLOCK
#define DT_N_S_clocks_S_clk_hstx_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_hstx, compatible, 0)
#define DT_N_S_clocks_S_clk_hstx_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hstx, compatible, 0)
#define DT_N_S_clocks_S_clk_hstx_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hstx, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hstx_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hstx, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hstx_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_hstx_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_hstx_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_hstx_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_hstx_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_hstx_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_hstx_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_hstx_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/clk-sys
 *
 * Node identifier: DT_N_S_clocks_S_clk_sys
 *
 * Binding (compatible = raspberrypi,pico-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\raspberrypi,pico-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_sys_PATH "/clocks/clk-sys"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_sys_FULL_NAME "clk-sys"
#define DT_N_S_clocks_S_clk_sys_FULL_NAME_UNQUOTED clk-sys
#define DT_N_S_clocks_S_clk_sys_FULL_NAME_TOKEN clk_sys
#define DT_N_S_clocks_S_clk_sys_FULL_NAME_UPPER_TOKEN CLK_SYS

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_sys_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_sys_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_sys_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_sys_FOREACH_NODELABEL(fn) fn(clk_sys)
#define DT_N_S_clocks_S_clk_sys_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_sys, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_sys_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_sys_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_sys_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_sys_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_sys_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_sys_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_sys_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_sys_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_sys_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_sys_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_sys_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_clk_sys_HASH tfDHEx9H8_ygYUvhcVrzUoed1IQkXdoohuvd_5IzSGY

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_sys_ORD 17
#define DT_N_S_clocks_S_clk_sys_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_sys_REQUIRES_ORDS \
	7, /* /clocks */ \
	11, /* /clocks/pll-sys */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_sys_SUPPORTS_ORDS \
	18, /* /clocks/clk-peri */ \
	25, /* /soc/clock-controller@40010000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_sys_EXISTS 1
#define DT_N_INST_6_raspberrypi_pico_clock DT_N_S_clocks_S_clk_sys
#define DT_N_NODELABEL_clk_sys             DT_N_S_clocks_S_clk_sys

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_sys_REG_NUM 0
#define DT_N_S_clocks_S_clk_sys_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_sys_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_sys_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_sys_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_sys_COMPAT_MATCHES_raspberrypi_pico_clock 1
#define DT_N_S_clocks_S_clk_sys_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_sys_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_clocks_S_clk_sys_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_sys_COMPAT_MODEL_IDX_0 "pico-clock"
#define DT_N_S_clocks_S_clk_sys_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_sys_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_sys_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_sys_P_clocks_IDX_0_PH DT_N_S_clocks_S_pll_sys
#define DT_N_S_clocks_S_clk_sys_P_clocks_IDX_0_NAME "pll_sys"
#define DT_N_S_clocks_S_clk_sys_P_clocks_NAME_pll_sys_PH DT_N_S_clocks_S_pll_sys
#define DT_N_S_clocks_S_clk_sys_P_clocks_NAME_pll_sys_EXISTS 1
#define DT_N_S_clocks_S_clk_sys_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_sys, clocks, 0)
#define DT_N_S_clocks_S_clk_sys_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_sys, clocks, 0)
#define DT_N_S_clocks_S_clk_sys_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_sys, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_sys_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_sys, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_sys_P_clocks_LEN 1
#define DT_N_S_clocks_S_clk_sys_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_clk_sys_P_clock_names {"pll_sys"}
#define DT_N_S_clocks_S_clk_sys_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_sys_P_clock_names_IDX_0 "pll_sys"
#define DT_N_S_clocks_S_clk_sys_P_clock_names_IDX_0_STRING_UNQUOTED pll_sys
#define DT_N_S_clocks_S_clk_sys_P_clock_names_IDX_0_STRING_TOKEN pll_sys
#define DT_N_S_clocks_S_clk_sys_P_clock_names_IDX_0_STRING_UPPER_TOKEN PLL_SYS
#define DT_N_S_clocks_S_clk_sys_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_sys, clock_names, 0)
#define DT_N_S_clocks_S_clk_sys_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_sys, clock_names, 0)
#define DT_N_S_clocks_S_clk_sys_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_sys, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_sys_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_sys, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_sys_P_clock_names_LEN 1
#define DT_N_S_clocks_S_clk_sys_P_clock_names_EXISTS 1
#define DT_N_S_clocks_S_clk_sys_P_clock_frequency 150000000
#define DT_N_S_clocks_S_clk_sys_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_sys_P_compatible {"raspberrypi,pico-clock"}
#define DT_N_S_clocks_S_clk_sys_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_sys_P_compatible_IDX_0 "raspberrypi,pico-clock"
#define DT_N_S_clocks_S_clk_sys_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-clock
#define DT_N_S_clocks_S_clk_sys_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_clock
#define DT_N_S_clocks_S_clk_sys_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_CLOCK
#define DT_N_S_clocks_S_clk_sys_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_sys, compatible, 0)
#define DT_N_S_clocks_S_clk_sys_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_sys, compatible, 0)
#define DT_N_S_clocks_S_clk_sys_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_sys, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_sys_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_sys, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_sys_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_sys_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_sys_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_sys_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_sys_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_sys_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_sys_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_sys_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/clk-peri
 *
 * Node identifier: DT_N_S_clocks_S_clk_peri
 *
 * Binding (compatible = raspberrypi,pico-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\raspberrypi,pico-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_peri_PATH "/clocks/clk-peri"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_peri_FULL_NAME "clk-peri"
#define DT_N_S_clocks_S_clk_peri_FULL_NAME_UNQUOTED clk-peri
#define DT_N_S_clocks_S_clk_peri_FULL_NAME_TOKEN clk_peri
#define DT_N_S_clocks_S_clk_peri_FULL_NAME_UPPER_TOKEN CLK_PERI

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_peri_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_peri_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_peri_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_peri_FOREACH_NODELABEL(fn) fn(clk_peri)
#define DT_N_S_clocks_S_clk_peri_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_peri, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_peri_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_peri_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_peri_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_peri_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_peri_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_peri_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_peri_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_peri_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_peri_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_peri_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_peri_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_clk_peri_HASH k4oWAgDpwJsuR19iSJmr4VdxZuDr9QFopXz5bn6vskg

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_peri_ORD 18
#define DT_N_S_clocks_S_clk_peri_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_peri_REQUIRES_ORDS \
	7, /* /clocks */ \
	17, /* /clocks/clk-sys */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_peri_SUPPORTS_ORDS \
	25, /* /soc/clock-controller@40010000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_peri_EXISTS 1
#define DT_N_INST_9_raspberrypi_pico_clock DT_N_S_clocks_S_clk_peri
#define DT_N_NODELABEL_clk_peri            DT_N_S_clocks_S_clk_peri

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_peri_REG_NUM 0
#define DT_N_S_clocks_S_clk_peri_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_peri_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_peri_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_peri_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_peri_COMPAT_MATCHES_raspberrypi_pico_clock 1
#define DT_N_S_clocks_S_clk_peri_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_peri_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_clocks_S_clk_peri_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_peri_COMPAT_MODEL_IDX_0 "pico-clock"
#define DT_N_S_clocks_S_clk_peri_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_peri_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_peri_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_peri_P_clocks_IDX_0_PH DT_N_S_clocks_S_clk_sys
#define DT_N_S_clocks_S_clk_peri_P_clocks_IDX_0_NAME "clk_sys"
#define DT_N_S_clocks_S_clk_peri_P_clocks_NAME_clk_sys_PH DT_N_S_clocks_S_clk_sys
#define DT_N_S_clocks_S_clk_peri_P_clocks_NAME_clk_sys_EXISTS 1
#define DT_N_S_clocks_S_clk_peri_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_peri, clocks, 0)
#define DT_N_S_clocks_S_clk_peri_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_peri, clocks, 0)
#define DT_N_S_clocks_S_clk_peri_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_peri, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_peri_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_peri, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_peri_P_clocks_LEN 1
#define DT_N_S_clocks_S_clk_peri_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_clk_peri_P_clock_names {"clk_sys"}
#define DT_N_S_clocks_S_clk_peri_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_peri_P_clock_names_IDX_0 "clk_sys"
#define DT_N_S_clocks_S_clk_peri_P_clock_names_IDX_0_STRING_UNQUOTED clk_sys
#define DT_N_S_clocks_S_clk_peri_P_clock_names_IDX_0_STRING_TOKEN clk_sys
#define DT_N_S_clocks_S_clk_peri_P_clock_names_IDX_0_STRING_UPPER_TOKEN CLK_SYS
#define DT_N_S_clocks_S_clk_peri_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_peri, clock_names, 0)
#define DT_N_S_clocks_S_clk_peri_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_peri, clock_names, 0)
#define DT_N_S_clocks_S_clk_peri_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_peri, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_peri_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_peri, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_peri_P_clock_names_LEN 1
#define DT_N_S_clocks_S_clk_peri_P_clock_names_EXISTS 1
#define DT_N_S_clocks_S_clk_peri_P_clock_frequency 150000000
#define DT_N_S_clocks_S_clk_peri_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_peri_P_compatible {"raspberrypi,pico-clock"}
#define DT_N_S_clocks_S_clk_peri_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_peri_P_compatible_IDX_0 "raspberrypi,pico-clock"
#define DT_N_S_clocks_S_clk_peri_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-clock
#define DT_N_S_clocks_S_clk_peri_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_clock
#define DT_N_S_clocks_S_clk_peri_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_CLOCK
#define DT_N_S_clocks_S_clk_peri_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_peri, compatible, 0)
#define DT_N_S_clocks_S_clk_peri_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_peri, compatible, 0)
#define DT_N_S_clocks_S_clk_peri_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_peri, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_peri_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_peri, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_peri_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_peri_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_peri_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_peri_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_peri_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_peri_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_peri_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_peri_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/clk-ref
 *
 * Node identifier: DT_N_S_clocks_S_clk_ref
 *
 * Binding (compatible = raspberrypi,pico-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\raspberrypi,pico-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_ref_PATH "/clocks/clk-ref"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_ref_FULL_NAME "clk-ref"
#define DT_N_S_clocks_S_clk_ref_FULL_NAME_UNQUOTED clk-ref
#define DT_N_S_clocks_S_clk_ref_FULL_NAME_TOKEN clk_ref
#define DT_N_S_clocks_S_clk_ref_FULL_NAME_UPPER_TOKEN CLK_REF

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_ref_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_ref_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_ref_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_ref_FOREACH_NODELABEL(fn) fn(clk_ref)
#define DT_N_S_clocks_S_clk_ref_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_ref, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_ref_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_ref_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_ref_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_ref_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_ref_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_ref_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_ref_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_ref_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_ref_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_ref_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_ref_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_clk_ref_HASH 2rL69MH0smZWcO_LNcgCnG_VkcFQy8XaPz_jO7E5QSc

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_ref_ORD 19
#define DT_N_S_clocks_S_clk_ref_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_ref_REQUIRES_ORDS \
	7, /* /clocks */ \
	8, /* /clocks/xosc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_ref_SUPPORTS_ORDS \
	25, /* /soc/clock-controller@40010000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_ref_EXISTS 1
#define DT_N_INST_5_raspberrypi_pico_clock DT_N_S_clocks_S_clk_ref
#define DT_N_NODELABEL_clk_ref             DT_N_S_clocks_S_clk_ref

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_ref_REG_NUM 0
#define DT_N_S_clocks_S_clk_ref_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_ref_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_ref_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_ref_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_ref_COMPAT_MATCHES_raspberrypi_pico_clock 1
#define DT_N_S_clocks_S_clk_ref_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_ref_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_clocks_S_clk_ref_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_ref_COMPAT_MODEL_IDX_0 "pico-clock"
#define DT_N_S_clocks_S_clk_ref_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_ref_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_ref_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_ref_P_clocks_IDX_0_PH DT_N_S_clocks_S_xosc
#define DT_N_S_clocks_S_clk_ref_P_clocks_IDX_0_NAME "xosc"
#define DT_N_S_clocks_S_clk_ref_P_clocks_NAME_xosc_PH DT_N_S_clocks_S_xosc
#define DT_N_S_clocks_S_clk_ref_P_clocks_NAME_xosc_EXISTS 1
#define DT_N_S_clocks_S_clk_ref_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_ref, clocks, 0)
#define DT_N_S_clocks_S_clk_ref_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_ref, clocks, 0)
#define DT_N_S_clocks_S_clk_ref_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_ref, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_ref_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_ref, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_ref_P_clocks_LEN 1
#define DT_N_S_clocks_S_clk_ref_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_clk_ref_P_clock_names {"xosc"}
#define DT_N_S_clocks_S_clk_ref_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_ref_P_clock_names_IDX_0 "xosc"
#define DT_N_S_clocks_S_clk_ref_P_clock_names_IDX_0_STRING_UNQUOTED xosc
#define DT_N_S_clocks_S_clk_ref_P_clock_names_IDX_0_STRING_TOKEN xosc
#define DT_N_S_clocks_S_clk_ref_P_clock_names_IDX_0_STRING_UPPER_TOKEN XOSC
#define DT_N_S_clocks_S_clk_ref_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_ref, clock_names, 0)
#define DT_N_S_clocks_S_clk_ref_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_ref, clock_names, 0)
#define DT_N_S_clocks_S_clk_ref_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_ref, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_ref_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_ref, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_ref_P_clock_names_LEN 1
#define DT_N_S_clocks_S_clk_ref_P_clock_names_EXISTS 1
#define DT_N_S_clocks_S_clk_ref_P_clock_frequency 12000000
#define DT_N_S_clocks_S_clk_ref_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_ref_P_compatible {"raspberrypi,pico-clock"}
#define DT_N_S_clocks_S_clk_ref_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_ref_P_compatible_IDX_0 "raspberrypi,pico-clock"
#define DT_N_S_clocks_S_clk_ref_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-clock
#define DT_N_S_clocks_S_clk_ref_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_clock
#define DT_N_S_clocks_S_clk_ref_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_CLOCK
#define DT_N_S_clocks_S_clk_ref_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_ref, compatible, 0)
#define DT_N_S_clocks_S_clk_ref_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_ref, compatible, 0)
#define DT_N_S_clocks_S_clk_ref_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_ref, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_ref_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_ref, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_ref_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_ref_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_ref_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_ref_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_ref_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_ref_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_ref_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_ref_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/clk-usb
 *
 * Node identifier: DT_N_S_clocks_S_clk_usb
 *
 * Binding (compatible = raspberrypi,pico-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\raspberrypi,pico-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_usb_PATH "/clocks/clk-usb"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_usb_FULL_NAME "clk-usb"
#define DT_N_S_clocks_S_clk_usb_FULL_NAME_UNQUOTED clk-usb
#define DT_N_S_clocks_S_clk_usb_FULL_NAME_TOKEN clk_usb
#define DT_N_S_clocks_S_clk_usb_FULL_NAME_UPPER_TOKEN CLK_USB

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_usb_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_usb_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_usb_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_usb_FOREACH_NODELABEL(fn) fn(clk_usb)
#define DT_N_S_clocks_S_clk_usb_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_usb, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_usb_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_usb_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_usb_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_usb_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_usb_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_usb_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_usb_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_usb_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_usb_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_usb_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_usb_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_clk_usb_HASH n8yk9tTgxTZ9IOsMmzHgKAztouzHzMHLCRZGfRzOKZw

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_usb_ORD 20
#define DT_N_S_clocks_S_clk_usb_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_usb_REQUIRES_ORDS \
	7, /* /clocks */ \
	9, /* /clocks/pll-usb */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_usb_SUPPORTS_ORDS \
	25, /* /soc/clock-controller@40010000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_usb_EXISTS 1
#define DT_N_INST_7_raspberrypi_pico_clock DT_N_S_clocks_S_clk_usb
#define DT_N_NODELABEL_clk_usb             DT_N_S_clocks_S_clk_usb

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_usb_REG_NUM 0
#define DT_N_S_clocks_S_clk_usb_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_usb_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_usb_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_usb_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_usb_COMPAT_MATCHES_raspberrypi_pico_clock 1
#define DT_N_S_clocks_S_clk_usb_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_usb_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_clocks_S_clk_usb_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_usb_COMPAT_MODEL_IDX_0 "pico-clock"
#define DT_N_S_clocks_S_clk_usb_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_usb_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_usb_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_usb_P_clocks_IDX_0_PH DT_N_S_clocks_S_pll_usb
#define DT_N_S_clocks_S_clk_usb_P_clocks_IDX_0_NAME "pll_usb"
#define DT_N_S_clocks_S_clk_usb_P_clocks_NAME_pll_usb_PH DT_N_S_clocks_S_pll_usb
#define DT_N_S_clocks_S_clk_usb_P_clocks_NAME_pll_usb_EXISTS 1
#define DT_N_S_clocks_S_clk_usb_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_usb, clocks, 0)
#define DT_N_S_clocks_S_clk_usb_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_usb, clocks, 0)
#define DT_N_S_clocks_S_clk_usb_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_usb, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_usb_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_usb, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_usb_P_clocks_LEN 1
#define DT_N_S_clocks_S_clk_usb_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_clk_usb_P_clock_names {"pll_usb"}
#define DT_N_S_clocks_S_clk_usb_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_usb_P_clock_names_IDX_0 "pll_usb"
#define DT_N_S_clocks_S_clk_usb_P_clock_names_IDX_0_STRING_UNQUOTED pll_usb
#define DT_N_S_clocks_S_clk_usb_P_clock_names_IDX_0_STRING_TOKEN pll_usb
#define DT_N_S_clocks_S_clk_usb_P_clock_names_IDX_0_STRING_UPPER_TOKEN PLL_USB
#define DT_N_S_clocks_S_clk_usb_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_usb, clock_names, 0)
#define DT_N_S_clocks_S_clk_usb_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_usb, clock_names, 0)
#define DT_N_S_clocks_S_clk_usb_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_usb, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_usb_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_usb, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_usb_P_clock_names_LEN 1
#define DT_N_S_clocks_S_clk_usb_P_clock_names_EXISTS 1
#define DT_N_S_clocks_S_clk_usb_P_clock_frequency 48000000
#define DT_N_S_clocks_S_clk_usb_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_usb_P_compatible {"raspberrypi,pico-clock"}
#define DT_N_S_clocks_S_clk_usb_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_usb_P_compatible_IDX_0 "raspberrypi,pico-clock"
#define DT_N_S_clocks_S_clk_usb_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-clock
#define DT_N_S_clocks_S_clk_usb_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_clock
#define DT_N_S_clocks_S_clk_usb_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_CLOCK
#define DT_N_S_clocks_S_clk_usb_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_usb, compatible, 0)
#define DT_N_S_clocks_S_clk_usb_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_usb, compatible, 0)
#define DT_N_S_clocks_S_clk_usb_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_usb, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_usb_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_usb, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_usb_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_usb_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_usb_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_usb_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_usb_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_usb_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_usb_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_usb_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/gpin0
 *
 * Node identifier: DT_N_S_clocks_S_gpin0
 *
 * Binding (compatible = raspberrypi,pico-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\raspberrypi,pico-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_gpin0_PATH "/clocks/gpin0"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_gpin0_FULL_NAME "gpin0"
#define DT_N_S_clocks_S_gpin0_FULL_NAME_UNQUOTED gpin0
#define DT_N_S_clocks_S_gpin0_FULL_NAME_TOKEN gpin0
#define DT_N_S_clocks_S_gpin0_FULL_NAME_UPPER_TOKEN GPIN0

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_gpin0_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_gpin0_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_gpin0_NODELABEL_NUM 1
#define DT_N_S_clocks_S_gpin0_FOREACH_NODELABEL(fn) fn(gpin0)
#define DT_N_S_clocks_S_gpin0_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpin0, __VA_ARGS__)
#define DT_N_S_clocks_S_gpin0_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_gpin0_CHILD_NUM 0
#define DT_N_S_clocks_S_gpin0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_gpin0_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_gpin0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_gpin0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_gpin0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_gpin0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_gpin0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_gpin0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_gpin0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_gpin0_HASH Vxm3dWi9KnEfNrMxZB2WU2DjUe_UdqqZpGozhSEvn1Q

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_gpin0_ORD 21
#define DT_N_S_clocks_S_gpin0_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_gpin0_REQUIRES_ORDS \
	7, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_gpin0_SUPPORTS_ORDS \
	25, /* /soc/clock-controller@40010000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_gpin0_EXISTS 1
#define DT_N_INST_11_raspberrypi_pico_clock DT_N_S_clocks_S_gpin0
#define DT_N_NODELABEL_gpin0                DT_N_S_clocks_S_gpin0

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_gpin0_REG_NUM 0
#define DT_N_S_clocks_S_gpin0_RANGES_NUM 0
#define DT_N_S_clocks_S_gpin0_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_gpin0_IRQ_NUM 0
#define DT_N_S_clocks_S_gpin0_IRQ_LEVEL 0
#define DT_N_S_clocks_S_gpin0_COMPAT_MATCHES_raspberrypi_pico_clock 1
#define DT_N_S_clocks_S_gpin0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_gpin0_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_clocks_S_gpin0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_gpin0_COMPAT_MODEL_IDX_0 "pico-clock"
#define DT_N_S_clocks_S_gpin0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_gpin0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_gpin0_P_clock_frequency 0
#define DT_N_S_clocks_S_gpin0_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_gpin0_P_status "disabled"
#define DT_N_S_clocks_S_gpin0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_clocks_S_gpin0_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_gpin0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_gpin0_P_status_IDX_0 "disabled"
#define DT_N_S_clocks_S_gpin0_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_gpin0_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_clocks_S_gpin0_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_clocks_S_gpin0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_gpin0, status, 0)
#define DT_N_S_clocks_S_gpin0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_gpin0, status, 0)
#define DT_N_S_clocks_S_gpin0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_gpin0, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_gpin0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_gpin0, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_gpin0_P_status_LEN 1
#define DT_N_S_clocks_S_gpin0_P_status_EXISTS 1
#define DT_N_S_clocks_S_gpin0_P_compatible {"raspberrypi,pico-clock"}
#define DT_N_S_clocks_S_gpin0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_gpin0_P_compatible_IDX_0 "raspberrypi,pico-clock"
#define DT_N_S_clocks_S_gpin0_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-clock
#define DT_N_S_clocks_S_gpin0_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_clock
#define DT_N_S_clocks_S_gpin0_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_CLOCK
#define DT_N_S_clocks_S_gpin0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_gpin0, compatible, 0)
#define DT_N_S_clocks_S_gpin0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_gpin0, compatible, 0)
#define DT_N_S_clocks_S_gpin0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_gpin0, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_gpin0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_gpin0, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_gpin0_P_compatible_LEN 1
#define DT_N_S_clocks_S_gpin0_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_gpin0_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_gpin0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_gpin0_P_wakeup_source 0
#define DT_N_S_clocks_S_gpin0_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_gpin0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_gpin0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/gpin1
 *
 * Node identifier: DT_N_S_clocks_S_gpin1
 *
 * Binding (compatible = raspberrypi,pico-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\raspberrypi,pico-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_gpin1_PATH "/clocks/gpin1"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_gpin1_FULL_NAME "gpin1"
#define DT_N_S_clocks_S_gpin1_FULL_NAME_UNQUOTED gpin1
#define DT_N_S_clocks_S_gpin1_FULL_NAME_TOKEN gpin1
#define DT_N_S_clocks_S_gpin1_FULL_NAME_UPPER_TOKEN GPIN1

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_gpin1_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_gpin1_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_gpin1_NODELABEL_NUM 1
#define DT_N_S_clocks_S_gpin1_FOREACH_NODELABEL(fn) fn(gpin1)
#define DT_N_S_clocks_S_gpin1_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpin1, __VA_ARGS__)
#define DT_N_S_clocks_S_gpin1_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_gpin1_CHILD_NUM 0
#define DT_N_S_clocks_S_gpin1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_gpin1_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_gpin1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_gpin1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_gpin1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_gpin1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_gpin1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_gpin1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_gpin1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_gpin1_HASH uf5s9YoxsP7gPbESUqQs1M3sXa_3Seh94zZizhdzbA8

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_gpin1_ORD 22
#define DT_N_S_clocks_S_gpin1_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_gpin1_REQUIRES_ORDS \
	7, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_gpin1_SUPPORTS_ORDS \
	25, /* /soc/clock-controller@40010000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_gpin1_EXISTS 1
#define DT_N_INST_12_raspberrypi_pico_clock DT_N_S_clocks_S_gpin1
#define DT_N_NODELABEL_gpin1                DT_N_S_clocks_S_gpin1

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_gpin1_REG_NUM 0
#define DT_N_S_clocks_S_gpin1_RANGES_NUM 0
#define DT_N_S_clocks_S_gpin1_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_gpin1_IRQ_NUM 0
#define DT_N_S_clocks_S_gpin1_IRQ_LEVEL 0
#define DT_N_S_clocks_S_gpin1_COMPAT_MATCHES_raspberrypi_pico_clock 1
#define DT_N_S_clocks_S_gpin1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_gpin1_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_clocks_S_gpin1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_gpin1_COMPAT_MODEL_IDX_0 "pico-clock"
#define DT_N_S_clocks_S_gpin1_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_gpin1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_gpin1_P_clock_frequency 0
#define DT_N_S_clocks_S_gpin1_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_gpin1_P_status "disabled"
#define DT_N_S_clocks_S_gpin1_P_status_STRING_UNQUOTED disabled
#define DT_N_S_clocks_S_gpin1_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_gpin1_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_gpin1_P_status_IDX_0 "disabled"
#define DT_N_S_clocks_S_gpin1_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_gpin1_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_clocks_S_gpin1_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_clocks_S_gpin1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_gpin1, status, 0)
#define DT_N_S_clocks_S_gpin1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_gpin1, status, 0)
#define DT_N_S_clocks_S_gpin1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_gpin1, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_gpin1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_gpin1, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_gpin1_P_status_LEN 1
#define DT_N_S_clocks_S_gpin1_P_status_EXISTS 1
#define DT_N_S_clocks_S_gpin1_P_compatible {"raspberrypi,pico-clock"}
#define DT_N_S_clocks_S_gpin1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_gpin1_P_compatible_IDX_0 "raspberrypi,pico-clock"
#define DT_N_S_clocks_S_gpin1_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-clock
#define DT_N_S_clocks_S_gpin1_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_clock
#define DT_N_S_clocks_S_gpin1_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_CLOCK
#define DT_N_S_clocks_S_gpin1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_gpin1, compatible, 0)
#define DT_N_S_clocks_S_gpin1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_gpin1, compatible, 0)
#define DT_N_S_clocks_S_gpin1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_gpin1, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_gpin1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_gpin1, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_gpin1_P_compatible_LEN 1
#define DT_N_S_clocks_S_gpin1_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_gpin1_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_gpin1_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_gpin1_P_wakeup_source 0
#define DT_N_S_clocks_S_gpin1_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_gpin1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_gpin1_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/rosc
 *
 * Node identifier: DT_N_S_clocks_S_rosc
 *
 * Binding (compatible = raspberrypi,pico-rosc):
 *   $ZEPHYR_BASE\dts\bindings\clock\raspberrypi,pico-rosc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_rosc_PATH "/clocks/rosc"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_rosc_FULL_NAME "rosc"
#define DT_N_S_clocks_S_rosc_FULL_NAME_UNQUOTED rosc
#define DT_N_S_clocks_S_rosc_FULL_NAME_TOKEN rosc
#define DT_N_S_clocks_S_rosc_FULL_NAME_UPPER_TOKEN ROSC

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_rosc_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_rosc_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_rosc_NODELABEL_NUM 1
#define DT_N_S_clocks_S_rosc_FOREACH_NODELABEL(fn) fn(rosc)
#define DT_N_S_clocks_S_rosc_FOREACH_NODELABEL_VARGS(fn, ...) fn(rosc, __VA_ARGS__)
#define DT_N_S_clocks_S_rosc_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_rosc_CHILD_NUM 0
#define DT_N_S_clocks_S_rosc_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_rosc_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_rosc_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_rosc_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_rosc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_rosc_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_rosc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_rosc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_rosc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_rosc_HASH VjK0Jioijj_eYre9MUpzA5yYCK0IkQFdX2kdXEdOu08

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_rosc_ORD 23
#define DT_N_S_clocks_S_rosc_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_rosc_REQUIRES_ORDS \
	7, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_rosc_SUPPORTS_ORDS \
	24, /* /clocks/rosc-ph */ \
	25, /* /soc/clock-controller@40010000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_rosc_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_rosc DT_N_S_clocks_S_rosc
#define DT_N_NODELABEL_rosc               DT_N_S_clocks_S_rosc

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_rosc_REG_NUM 0
#define DT_N_S_clocks_S_rosc_RANGES_NUM 0
#define DT_N_S_clocks_S_rosc_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_rosc_IRQ_NUM 0
#define DT_N_S_clocks_S_rosc_IRQ_LEVEL 0
#define DT_N_S_clocks_S_rosc_COMPAT_MATCHES_raspberrypi_pico_rosc 1
#define DT_N_S_clocks_S_rosc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_rosc_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_clocks_S_rosc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_rosc_COMPAT_MODEL_IDX_0 "pico-rosc"
#define DT_N_S_clocks_S_rosc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_rosc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_rosc_P_range 2720
#define DT_N_S_clocks_S_rosc_P_range_EXISTS 1
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength {0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength_IDX_0 0
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength_IDX_1_EXISTS 1
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength_IDX_1 0
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength_IDX_2_EXISTS 1
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength_IDX_2 0
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength_IDX_3_EXISTS 1
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength_IDX_3 0
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength_IDX_4_EXISTS 1
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength_IDX_4 0
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength_IDX_5_EXISTS 1
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength_IDX_5 0
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength_IDX_6_EXISTS 1
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength_IDX_6 0
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength_IDX_7_EXISTS 1
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength_IDX_7 0
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 0) \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 1) \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 2) \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 3) \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 4) \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 5) \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 6) \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 7)
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 7)
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 3, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 4, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 5, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 6, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 7, __VA_ARGS__)
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_clocks_S_rosc, stage_drive_strength, 7, __VA_ARGS__)
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength_LEN 8
#define DT_N_S_clocks_S_rosc_P_stage_drive_strength_EXISTS 1
#define DT_N_S_clocks_S_rosc_P_phase_flip 0
#define DT_N_S_clocks_S_rosc_P_phase_flip_EXISTS 1
#define DT_N_S_clocks_S_rosc_P_phase 0
#define DT_N_S_clocks_S_rosc_P_phase_EXISTS 1
#define DT_N_S_clocks_S_rosc_P_clock_frequency 6500000
#define DT_N_S_clocks_S_rosc_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_rosc_P_compatible {"raspberrypi,pico-rosc"}
#define DT_N_S_clocks_S_rosc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_rosc_P_compatible_IDX_0 "raspberrypi,pico-rosc"
#define DT_N_S_clocks_S_rosc_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-rosc
#define DT_N_S_clocks_S_rosc_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_rosc
#define DT_N_S_clocks_S_rosc_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_ROSC
#define DT_N_S_clocks_S_rosc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_rosc, compatible, 0)
#define DT_N_S_clocks_S_rosc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_rosc, compatible, 0)
#define DT_N_S_clocks_S_rosc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_rosc, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_rosc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_rosc, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_rosc_P_compatible_LEN 1
#define DT_N_S_clocks_S_rosc_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_rosc_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_rosc_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_rosc_P_wakeup_source 0
#define DT_N_S_clocks_S_rosc_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_rosc_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_rosc_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_clocks_S_rosc_P_clock_div 16
#define DT_N_S_clocks_S_rosc_P_clock_div_EXISTS 1

/*
 * Devicetree node: /clocks/rosc-ph
 *
 * Node identifier: DT_N_S_clocks_S_rosc_ph
 *
 * Binding (compatible = raspberrypi,pico-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\raspberrypi,pico-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_rosc_ph_PATH "/clocks/rosc-ph"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_rosc_ph_FULL_NAME "rosc-ph"
#define DT_N_S_clocks_S_rosc_ph_FULL_NAME_UNQUOTED rosc-ph
#define DT_N_S_clocks_S_rosc_ph_FULL_NAME_TOKEN rosc_ph
#define DT_N_S_clocks_S_rosc_ph_FULL_NAME_UPPER_TOKEN ROSC_PH

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_rosc_ph_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_rosc_ph_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_rosc_ph_NODELABEL_NUM 1
#define DT_N_S_clocks_S_rosc_ph_FOREACH_NODELABEL(fn) fn(rosc_ph)
#define DT_N_S_clocks_S_rosc_ph_FOREACH_NODELABEL_VARGS(fn, ...) fn(rosc_ph, __VA_ARGS__)
#define DT_N_S_clocks_S_rosc_ph_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_rosc_ph_CHILD_NUM 0
#define DT_N_S_clocks_S_rosc_ph_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_rosc_ph_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_rosc_ph_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_rosc_ph_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_rosc_ph_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_rosc_ph_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_rosc_ph_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_rosc_ph_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_rosc_ph_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clocks_S_rosc_ph_HASH BJoX__so6rn3sfU_pWwyNVIDMBII606rwKK1De8EOCc

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_rosc_ph_ORD 24
#define DT_N_S_clocks_S_rosc_ph_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_rosc_ph_REQUIRES_ORDS \
	7, /* /clocks */ \
	23, /* /clocks/rosc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_rosc_ph_SUPPORTS_ORDS \
	25, /* /soc/clock-controller@40010000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_rosc_ph_EXISTS 1
#define DT_N_INST_10_raspberrypi_pico_clock DT_N_S_clocks_S_rosc_ph
#define DT_N_NODELABEL_rosc_ph              DT_N_S_clocks_S_rosc_ph

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_rosc_ph_REG_NUM 0
#define DT_N_S_clocks_S_rosc_ph_RANGES_NUM 0
#define DT_N_S_clocks_S_rosc_ph_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_rosc_ph_IRQ_NUM 0
#define DT_N_S_clocks_S_rosc_ph_IRQ_LEVEL 0
#define DT_N_S_clocks_S_rosc_ph_COMPAT_MATCHES_raspberrypi_pico_clock 1
#define DT_N_S_clocks_S_rosc_ph_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_rosc_ph_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_clocks_S_rosc_ph_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_rosc_ph_COMPAT_MODEL_IDX_0 "pico-clock"
#define DT_N_S_clocks_S_rosc_ph_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_rosc_ph_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_rosc_ph_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_rosc_ph_P_clocks_IDX_0_PH DT_N_S_clocks_S_rosc
#define DT_N_S_clocks_S_rosc_ph_P_clocks_IDX_0_NAME "rosc"
#define DT_N_S_clocks_S_rosc_ph_P_clocks_NAME_rosc_PH DT_N_S_clocks_S_rosc
#define DT_N_S_clocks_S_rosc_ph_P_clocks_NAME_rosc_EXISTS 1
#define DT_N_S_clocks_S_rosc_ph_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_rosc_ph, clocks, 0)
#define DT_N_S_clocks_S_rosc_ph_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_rosc_ph, clocks, 0)
#define DT_N_S_clocks_S_rosc_ph_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_rosc_ph, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_rosc_ph_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_rosc_ph, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_rosc_ph_P_clocks_LEN 1
#define DT_N_S_clocks_S_rosc_ph_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_rosc_ph_P_clock_names {"rosc"}
#define DT_N_S_clocks_S_rosc_ph_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_rosc_ph_P_clock_names_IDX_0 "rosc"
#define DT_N_S_clocks_S_rosc_ph_P_clock_names_IDX_0_STRING_UNQUOTED rosc
#define DT_N_S_clocks_S_rosc_ph_P_clock_names_IDX_0_STRING_TOKEN rosc
#define DT_N_S_clocks_S_rosc_ph_P_clock_names_IDX_0_STRING_UPPER_TOKEN ROSC
#define DT_N_S_clocks_S_rosc_ph_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_rosc_ph, clock_names, 0)
#define DT_N_S_clocks_S_rosc_ph_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_rosc_ph, clock_names, 0)
#define DT_N_S_clocks_S_rosc_ph_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_rosc_ph, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_rosc_ph_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_rosc_ph, clock_names, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_rosc_ph_P_clock_names_LEN 1
#define DT_N_S_clocks_S_rosc_ph_P_clock_names_EXISTS 1
#define DT_N_S_clocks_S_rosc_ph_P_clock_frequency 6500000
#define DT_N_S_clocks_S_rosc_ph_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_rosc_ph_P_compatible {"raspberrypi,pico-clock"}
#define DT_N_S_clocks_S_rosc_ph_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_rosc_ph_P_compatible_IDX_0 "raspberrypi,pico-clock"
#define DT_N_S_clocks_S_rosc_ph_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-clock
#define DT_N_S_clocks_S_rosc_ph_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_clock
#define DT_N_S_clocks_S_rosc_ph_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_CLOCK
#define DT_N_S_clocks_S_rosc_ph_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_rosc_ph, compatible, 0)
#define DT_N_S_clocks_S_rosc_ph_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_rosc_ph, compatible, 0)
#define DT_N_S_clocks_S_rosc_ph_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_rosc_ph, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_rosc_ph_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_rosc_ph, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_rosc_ph_P_compatible_LEN 1
#define DT_N_S_clocks_S_rosc_ph_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_rosc_ph_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_rosc_ph_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_rosc_ph_P_wakeup_source 0
#define DT_N_S_clocks_S_rosc_ph_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_rosc_ph_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_rosc_ph_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/clock-controller@40010000
 *
 * Node identifier: DT_N_S_soc_S_clock_controller_40010000
 *
 * Binding (compatible = raspberrypi,pico-clock-controller):
 *   $ZEPHYR_BASE\dts\bindings\clock\raspberrypi,pico-clock-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_clock_controller_40010000_PATH "/soc/clock-controller@40010000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_clock_controller_40010000_FULL_NAME "clock-controller@40010000"
#define DT_N_S_soc_S_clock_controller_40010000_FULL_NAME_UNQUOTED clock-controller@40010000
#define DT_N_S_soc_S_clock_controller_40010000_FULL_NAME_TOKEN clock_controller_40010000
#define DT_N_S_soc_S_clock_controller_40010000_FULL_NAME_UPPER_TOKEN CLOCK_CONTROLLER_40010000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_clock_controller_40010000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_clock_controller_40010000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_clock_controller_40010000_NODELABEL_NUM 1
#define DT_N_S_soc_S_clock_controller_40010000_FOREACH_NODELABEL(fn) fn(clocks)
#define DT_N_S_soc_S_clock_controller_40010000_FOREACH_NODELABEL_VARGS(fn, ...) fn(clocks, __VA_ARGS__)
#define DT_N_S_soc_S_clock_controller_40010000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_clock_controller_40010000_CHILD_NUM 0
#define DT_N_S_soc_S_clock_controller_40010000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_clock_controller_40010000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_clock_controller_40010000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_clock_controller_40010000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_clock_controller_40010000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_clock_controller_40010000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_clock_controller_40010000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_clock_controller_40010000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_clock_controller_40010000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_clock_controller_40010000_HASH WBggMvHYJhebxeqONtd_lvDsKDSfn2Hk3SU0_Vb_T_Y

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_clock_controller_40010000_ORD 25
#define DT_N_S_soc_S_clock_controller_40010000_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_clock_controller_40010000_REQUIRES_ORDS \
	4, /* /soc */ \
	8, /* /clocks/xosc */ \
	9, /* /clocks/pll-usb */ \
	10, /* /clocks/clk-adc */ \
	11, /* /clocks/pll-sys */ \
	12, /* /clocks/clk-gpout0 */ \
	13, /* /clocks/clk-gpout1 */ \
	14, /* /clocks/clk-gpout2 */ \
	15, /* /clocks/clk-gpout3 */ \
	16, /* /clocks/clk-hstx */ \
	17, /* /clocks/clk-sys */ \
	18, /* /clocks/clk-peri */ \
	19, /* /clocks/clk-ref */ \
	20, /* /clocks/clk-usb */ \
	21, /* /clocks/gpin0 */ \
	22, /* /clocks/gpin1 */ \
	23, /* /clocks/rosc */ \
	24, /* /clocks/rosc-ph */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_clock_controller_40010000_SUPPORTS_ORDS \
	28, /* /soc/adc@400a0000 */ \
	44, /* /soc/dma@50000000 */ \
	46, /* /soc/i2c@40090000 */ \
	47, /* /soc/i2c@40098000 */ \
	49, /* /soc/pio@50200000 */ \
	50, /* /soc/pio@50300000 */ \
	51, /* /soc/pio@50400000 */ \
	52, /* /soc/pwm@400a8000 */ \
	53, /* /soc/spi@40080000 */ \
	54, /* /soc/spi@40088000 */ \
	55, /* /soc/timer@400b0000 */ \
	56, /* /soc/timer@400b8000 */ \
	58, /* /soc/uart@40070000 */ \
	59, /* /soc/uart@40078000 */ \
	60, /* /soc/usbd@50100000 */ \
	61, /* /soc/watchdog@400d8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_clock_controller_40010000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_clock_controller DT_N_S_soc_S_clock_controller_40010000
#define DT_N_NODELABEL_clocks                         DT_N_S_soc_S_clock_controller_40010000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_clock_controller_40010000_REG_NUM 5
#define DT_N_S_soc_S_clock_controller_40010000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_REG_IDX_0_VAL_ADDRESS 1073807360 /* 0x40010000 */
#define DT_N_S_soc_S_clock_controller_40010000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_clock_controller_40010000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_REG_IDX_1_VAL_ADDRESS 1074036736 /* 0x40048000 */
#define DT_N_S_soc_S_clock_controller_40010000_REG_IDX_1_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_clock_controller_40010000_REG_IDX_2_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_REG_IDX_2_VAL_ADDRESS 1074069504 /* 0x40050000 */
#define DT_N_S_soc_S_clock_controller_40010000_REG_IDX_2_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_clock_controller_40010000_REG_IDX_3_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_REG_IDX_3_VAL_ADDRESS 1074102272 /* 0x40058000 */
#define DT_N_S_soc_S_clock_controller_40010000_REG_IDX_3_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_clock_controller_40010000_REG_IDX_4_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_REG_IDX_4_VAL_ADDRESS 1074692096 /* 0x400e8000 */
#define DT_N_S_soc_S_clock_controller_40010000_REG_IDX_4_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_clock_controller_40010000_REG_NAME_clocks_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_REG_NAME_clocks_VAL_ADDRESS DT_N_S_soc_S_clock_controller_40010000_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_clock_controller_40010000_REG_NAME_clocks_VAL_SIZE DT_N_S_soc_S_clock_controller_40010000_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_clock_controller_40010000_REG_NAME_xosc_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_REG_NAME_xosc_VAL_ADDRESS DT_N_S_soc_S_clock_controller_40010000_REG_IDX_1_VAL_ADDRESS
#define DT_N_S_soc_S_clock_controller_40010000_REG_NAME_xosc_VAL_SIZE DT_N_S_soc_S_clock_controller_40010000_REG_IDX_1_VAL_SIZE
#define DT_N_S_soc_S_clock_controller_40010000_REG_NAME_pll_sys_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_REG_NAME_pll_sys_VAL_ADDRESS DT_N_S_soc_S_clock_controller_40010000_REG_IDX_2_VAL_ADDRESS
#define DT_N_S_soc_S_clock_controller_40010000_REG_NAME_pll_sys_VAL_SIZE DT_N_S_soc_S_clock_controller_40010000_REG_IDX_2_VAL_SIZE
#define DT_N_S_soc_S_clock_controller_40010000_REG_NAME_pll_usb_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_REG_NAME_pll_usb_VAL_ADDRESS DT_N_S_soc_S_clock_controller_40010000_REG_IDX_3_VAL_ADDRESS
#define DT_N_S_soc_S_clock_controller_40010000_REG_NAME_pll_usb_VAL_SIZE DT_N_S_soc_S_clock_controller_40010000_REG_IDX_3_VAL_SIZE
#define DT_N_S_soc_S_clock_controller_40010000_REG_NAME_rosc_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_REG_NAME_rosc_VAL_ADDRESS DT_N_S_soc_S_clock_controller_40010000_REG_IDX_4_VAL_ADDRESS
#define DT_N_S_soc_S_clock_controller_40010000_REG_NAME_rosc_VAL_SIZE DT_N_S_soc_S_clock_controller_40010000_REG_IDX_4_VAL_SIZE
#define DT_N_S_soc_S_clock_controller_40010000_RANGES_NUM 0
#define DT_N_S_soc_S_clock_controller_40010000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_clock_controller_40010000_IRQ_NUM 0
#define DT_N_S_soc_S_clock_controller_40010000_IRQ_LEVEL 0
#define DT_N_S_soc_S_clock_controller_40010000_COMPAT_MATCHES_raspberrypi_pico_clock_controller 1
#define DT_N_S_soc_S_clock_controller_40010000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_clock_controller_40010000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_COMPAT_MODEL_IDX_0 "pico-clock-controller"
#define DT_N_S_soc_S_clock_controller_40010000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_clock_controller_40010000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_clock_controller_40010000_P_reg {1073807360 /* 0x40010000 */, 4096 /* 0x1000 */, 1074036736 /* 0x40048000 */, 4096 /* 0x1000 */, 1074069504 /* 0x40050000 */, 4096 /* 0x1000 */, 1074102272 /* 0x40058000 */, 4096 /* 0x1000 */, 1074692096 /* 0x400e8000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_IDX_0 1073807360
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_IDX_2 1074036736
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_IDX_3 4096
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_IDX_4_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_IDX_4 1074069504
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_IDX_5_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_IDX_5 4096
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_IDX_6_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_IDX_6 1074102272
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_IDX_7_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_IDX_7 4096
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_IDX_8_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_IDX_8 1074692096
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_IDX_9_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_IDX_9 4096
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_status "okay"
#define DT_N_S_soc_S_clock_controller_40010000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_clock_controller_40010000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_clock_controller_40010000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_clock_controller_40010000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_clock_controller_40010000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_clock_controller_40010000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_controller_40010000, status, 0)
#define DT_N_S_soc_S_clock_controller_40010000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_clock_controller_40010000, status, 0)
#define DT_N_S_soc_S_clock_controller_40010000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_controller_40010000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_controller_40010000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_clock_controller_40010000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_controller_40010000_P_status_LEN 1
#define DT_N_S_soc_S_clock_controller_40010000_P_status_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_compatible {"raspberrypi,pico-clock-controller"}
#define DT_N_S_soc_S_clock_controller_40010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_compatible_IDX_0 "raspberrypi,pico-clock-controller"
#define DT_N_S_soc_S_clock_controller_40010000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-clock-controller
#define DT_N_S_soc_S_clock_controller_40010000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_clock_controller
#define DT_N_S_soc_S_clock_controller_40010000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_CLOCK_CONTROLLER
#define DT_N_S_soc_S_clock_controller_40010000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_controller_40010000, compatible, 0)
#define DT_N_S_soc_S_clock_controller_40010000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_clock_controller_40010000, compatible, 0)
#define DT_N_S_soc_S_clock_controller_40010000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_controller_40010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_controller_40010000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_clock_controller_40010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_controller_40010000_P_compatible_LEN 1
#define DT_N_S_soc_S_clock_controller_40010000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names {"clocks", "xosc", "pll_sys", "pll_usb", "rosc"}
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_0 "clocks"
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_0_STRING_UNQUOTED clocks
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_0_STRING_TOKEN clocks
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_0_STRING_UPPER_TOKEN CLOCKS
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_1 "xosc"
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_1_STRING_UNQUOTED xosc
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_1_STRING_TOKEN xosc
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_1_STRING_UPPER_TOKEN XOSC
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_2 "pll_sys"
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_2_STRING_UNQUOTED pll_sys
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_2_STRING_TOKEN pll_sys
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_2_STRING_UPPER_TOKEN PLL_SYS
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_3 "pll_usb"
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_3_STRING_UNQUOTED pll_usb
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_3_STRING_TOKEN pll_usb
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_3_STRING_UPPER_TOKEN PLL_USB
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_4_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_4 "rosc"
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_4_STRING_UNQUOTED rosc
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_4_STRING_TOKEN rosc
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_IDX_4_STRING_UPPER_TOKEN ROSC
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_controller_40010000, reg_names, 0) \
	fn(DT_N_S_soc_S_clock_controller_40010000, reg_names, 1) \
	fn(DT_N_S_soc_S_clock_controller_40010000, reg_names, 2) \
	fn(DT_N_S_soc_S_clock_controller_40010000, reg_names, 3) \
	fn(DT_N_S_soc_S_clock_controller_40010000, reg_names, 4)
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_clock_controller_40010000, reg_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, reg_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, reg_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, reg_names, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, reg_names, 4)
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_controller_40010000, reg_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, reg_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, reg_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, reg_names, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, reg_names, 4, __VA_ARGS__)
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_clock_controller_40010000, reg_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, reg_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, reg_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, reg_names, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, reg_names, 4, __VA_ARGS__)
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_LEN 5
#define DT_N_S_soc_S_clock_controller_40010000_P_reg_names_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_0_PH DT_N_S_clocks_S_clk_gpout0
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_0_NAME "clk_gpout0"
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_clk_gpout0_PH DT_N_S_clocks_S_clk_gpout0
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_clk_gpout0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_1_PH DT_N_S_clocks_S_clk_gpout1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_1_NAME "clk_gpout1"
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_clk_gpout1_PH DT_N_S_clocks_S_clk_gpout1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_clk_gpout1_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_2_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_2_PH DT_N_S_clocks_S_clk_gpout2
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_2_NAME "clk_gpout2"
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_clk_gpout2_PH DT_N_S_clocks_S_clk_gpout2
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_clk_gpout2_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_3_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_3_PH DT_N_S_clocks_S_clk_gpout3
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_3_NAME "clk_gpout3"
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_clk_gpout3_PH DT_N_S_clocks_S_clk_gpout3
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_clk_gpout3_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_4_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_4_PH DT_N_S_clocks_S_clk_hstx
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_4_NAME "clk_hstx"
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_clk_hstx_PH DT_N_S_clocks_S_clk_hstx
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_clk_hstx_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_5_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_5_PH DT_N_S_clocks_S_clk_ref
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_5_NAME "clk_ref"
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_clk_ref_PH DT_N_S_clocks_S_clk_ref
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_clk_ref_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_6_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_6_PH DT_N_S_clocks_S_clk_sys
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_6_NAME "clk_sys"
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_clk_sys_PH DT_N_S_clocks_S_clk_sys
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_clk_sys_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_7_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_7_PH DT_N_S_clocks_S_clk_peri
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_7_NAME "clk_peri"
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_clk_peri_PH DT_N_S_clocks_S_clk_peri
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_clk_peri_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_8_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_8_PH DT_N_S_clocks_S_clk_usb
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_8_NAME "clk_usb"
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_clk_usb_PH DT_N_S_clocks_S_clk_usb
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_clk_usb_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_9_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_9_PH DT_N_S_clocks_S_clk_adc
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_9_NAME "clk_adc"
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_clk_adc_PH DT_N_S_clocks_S_clk_adc
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_clk_adc_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_10_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_10_PH DT_N_S_clocks_S_pll_sys
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_10_NAME "pll_sys"
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_pll_sys_PH DT_N_S_clocks_S_pll_sys
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_pll_sys_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_11_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_11_PH DT_N_S_clocks_S_pll_usb
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_11_NAME "pll_usb"
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_pll_usb_PH DT_N_S_clocks_S_pll_usb
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_pll_usb_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_12_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_12_PH DT_N_S_clocks_S_xosc
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_12_NAME "xosc"
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_xosc_PH DT_N_S_clocks_S_xosc
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_xosc_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_13_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_13_PH DT_N_S_clocks_S_rosc
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_13_NAME "rosc"
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_rosc_PH DT_N_S_clocks_S_rosc
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_rosc_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_14_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_14_PH DT_N_S_clocks_S_rosc_ph
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_14_NAME "rosc_ph"
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_rosc_ph_PH DT_N_S_clocks_S_rosc_ph
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_rosc_ph_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_15_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_15_PH DT_N_S_clocks_S_gpin0
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_15_NAME "gpin0"
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_gpin0_PH DT_N_S_clocks_S_gpin0
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_gpin0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_16_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_16_PH DT_N_S_clocks_S_gpin1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_IDX_16_NAME "gpin1"
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_gpin1_PH DT_N_S_clocks_S_gpin1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_NAME_gpin1_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 0) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 1) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 2) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 3) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 4) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 5) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 6) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 7) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 8) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 9) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 10) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 11) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 12) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 13) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 14) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 15) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 16)
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 16)
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 15, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 16, __VA_ARGS__)
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clocks, 16, __VA_ARGS__)
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_LEN 17
#define DT_N_S_soc_S_clock_controller_40010000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names {"clk_gpout0", "clk_gpout1", "clk_gpout2", "clk_gpout3", "clk_hstx", "clk_ref", "clk_sys", "clk_peri", "clk_usb", "clk_adc", "pll_sys", "pll_usb", "xosc", "rosc", "rosc_ph", "gpin0", "gpin1"}
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_0 "clk_gpout0"
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_0_STRING_UNQUOTED clk_gpout0
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_0_STRING_TOKEN clk_gpout0
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_0_STRING_UPPER_TOKEN CLK_GPOUT0
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_1 "clk_gpout1"
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_1_STRING_UNQUOTED clk_gpout1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_1_STRING_TOKEN clk_gpout1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_1_STRING_UPPER_TOKEN CLK_GPOUT1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_2 "clk_gpout2"
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_2_STRING_UNQUOTED clk_gpout2
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_2_STRING_TOKEN clk_gpout2
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_2_STRING_UPPER_TOKEN CLK_GPOUT2
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_3 "clk_gpout3"
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_3_STRING_UNQUOTED clk_gpout3
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_3_STRING_TOKEN clk_gpout3
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_3_STRING_UPPER_TOKEN CLK_GPOUT3
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_4_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_4 "clk_hstx"
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_4_STRING_UNQUOTED clk_hstx
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_4_STRING_TOKEN clk_hstx
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_4_STRING_UPPER_TOKEN CLK_HSTX
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_5_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_5 "clk_ref"
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_5_STRING_UNQUOTED clk_ref
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_5_STRING_TOKEN clk_ref
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_5_STRING_UPPER_TOKEN CLK_REF
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_6_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_6 "clk_sys"
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_6_STRING_UNQUOTED clk_sys
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_6_STRING_TOKEN clk_sys
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_6_STRING_UPPER_TOKEN CLK_SYS
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_7_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_7 "clk_peri"
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_7_STRING_UNQUOTED clk_peri
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_7_STRING_TOKEN clk_peri
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_7_STRING_UPPER_TOKEN CLK_PERI
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_8_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_8 "clk_usb"
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_8_STRING_UNQUOTED clk_usb
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_8_STRING_TOKEN clk_usb
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_8_STRING_UPPER_TOKEN CLK_USB
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_9_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_9 "clk_adc"
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_9_STRING_UNQUOTED clk_adc
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_9_STRING_TOKEN clk_adc
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_9_STRING_UPPER_TOKEN CLK_ADC
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_10_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_10 "pll_sys"
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_10_STRING_UNQUOTED pll_sys
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_10_STRING_TOKEN pll_sys
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_10_STRING_UPPER_TOKEN PLL_SYS
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_11_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_11 "pll_usb"
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_11_STRING_UNQUOTED pll_usb
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_11_STRING_TOKEN pll_usb
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_11_STRING_UPPER_TOKEN PLL_USB
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_12_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_12 "xosc"
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_12_STRING_UNQUOTED xosc
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_12_STRING_TOKEN xosc
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_12_STRING_UPPER_TOKEN XOSC
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_13_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_13 "rosc"
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_13_STRING_UNQUOTED rosc
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_13_STRING_TOKEN rosc
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_13_STRING_UPPER_TOKEN ROSC
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_14_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_14 "rosc_ph"
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_14_STRING_UNQUOTED rosc_ph
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_14_STRING_TOKEN rosc_ph
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_14_STRING_UPPER_TOKEN ROSC_PH
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_15_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_15 "gpin0"
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_15_STRING_UNQUOTED gpin0
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_15_STRING_TOKEN gpin0
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_15_STRING_UPPER_TOKEN GPIN0
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_16_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_16 "gpin1"
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_16_STRING_UNQUOTED gpin1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_16_STRING_TOKEN gpin1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_IDX_16_STRING_UPPER_TOKEN GPIN1
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 0) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 1) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 2) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 3) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 4) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 5) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 6) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 7) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 8) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 9) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 10) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 11) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 12) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 13) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 14) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 15) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 16)
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 16)
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 15, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 16, __VA_ARGS__)
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_clock_controller_40010000, clock_names, 16, __VA_ARGS__)
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_LEN 17
#define DT_N_S_soc_S_clock_controller_40010000_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_clock_controller_40010000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_wakeup_source 0
#define DT_N_S_soc_S_clock_controller_40010000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40010000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_clock_controller_40010000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v8m-nvic):
 *   $ZEPHYR_BASE\dts\bindings\interrupt-controller\arm,v8m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_UNQUOTED interrupt-controller@e000e100
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_TOKEN interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_UPPER_TOKEN INTERRUPT_CONTROLLER_E000E100

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 21

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL(fn) fn(nvic)
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL_VARGS(fn, ...) fn(nvic, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_HASH MNKByYDCdVxyLwiy4A_bv2jZfVhfDT01mZ2_1uEhUYQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 26
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	28, /* /soc/adc@400a0000 */ \
	44, /* /soc/dma@50000000 */ \
	45, /* /soc/gpio@40028000 */ \
	46, /* /soc/i2c@40090000 */ \
	47, /* /soc/i2c@40098000 */ \
	52, /* /soc/pwm@400a8000 */ \
	53, /* /soc/spi@40080000 */ \
	54, /* /soc/spi@40088000 */ \
	55, /* /soc/timer@400b0000 */ \
	56, /* /soc/timer@400b8000 */ \
	58, /* /soc/uart@40070000 */ \
	59, /* /soc/uart@40078000 */ \
	60, /* /soc/usbd@50100000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v8m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_LEVEL 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v8m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v8m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 4
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v8m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v8m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v8m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v8m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V8M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/reset-controller@40020000
 *
 * Node identifier: DT_N_S_soc_S_reset_controller_40020000
 *
 * Binding (compatible = raspberrypi,pico-reset):
 *   $ZEPHYR_BASE\dts\bindings\reset\raspberrypi,pico-reset.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_reset_controller_40020000_PATH "/soc/reset-controller@40020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_reset_controller_40020000_FULL_NAME "reset-controller@40020000"
#define DT_N_S_soc_S_reset_controller_40020000_FULL_NAME_UNQUOTED reset-controller@40020000
#define DT_N_S_soc_S_reset_controller_40020000_FULL_NAME_TOKEN reset_controller_40020000
#define DT_N_S_soc_S_reset_controller_40020000_FULL_NAME_UPPER_TOKEN RESET_CONTROLLER_40020000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_reset_controller_40020000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_reset_controller_40020000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_reset_controller_40020000_NODELABEL_NUM 1
#define DT_N_S_soc_S_reset_controller_40020000_FOREACH_NODELABEL(fn) fn(reset)
#define DT_N_S_soc_S_reset_controller_40020000_FOREACH_NODELABEL_VARGS(fn, ...) fn(reset, __VA_ARGS__)
#define DT_N_S_soc_S_reset_controller_40020000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_reset_controller_40020000_CHILD_NUM 0
#define DT_N_S_soc_S_reset_controller_40020000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_reset_controller_40020000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_reset_controller_40020000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_reset_controller_40020000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_reset_controller_40020000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_reset_controller_40020000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_reset_controller_40020000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_reset_controller_40020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_reset_controller_40020000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_reset_controller_40020000_HASH iWBcHLS_iy5jOjenjHaNLo9L8ZHrrnJdGP9dNxxpa_I

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_reset_controller_40020000_ORD 27
#define DT_N_S_soc_S_reset_controller_40020000_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_reset_controller_40020000_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_reset_controller_40020000_SUPPORTS_ORDS \
	28, /* /soc/adc@400a0000 */ \
	44, /* /soc/dma@50000000 */ \
	46, /* /soc/i2c@40090000 */ \
	47, /* /soc/i2c@40098000 */ \
	49, /* /soc/pio@50200000 */ \
	50, /* /soc/pio@50300000 */ \
	51, /* /soc/pio@50400000 */ \
	52, /* /soc/pwm@400a8000 */ \
	53, /* /soc/spi@40080000 */ \
	54, /* /soc/spi@40088000 */ \
	55, /* /soc/timer@400b0000 */ \
	56, /* /soc/timer@400b8000 */ \
	58, /* /soc/uart@40070000 */ \
	59, /* /soc/uart@40078000 */ \
	60, /* /soc/usbd@50100000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_reset_controller_40020000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_reset DT_N_S_soc_S_reset_controller_40020000
#define DT_N_NODELABEL_reset               DT_N_S_soc_S_reset_controller_40020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_reset_controller_40020000_REG_NUM 1
#define DT_N_S_soc_S_reset_controller_40020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_controller_40020000_REG_IDX_0_VAL_ADDRESS 1073872896 /* 0x40020000 */
#define DT_N_S_soc_S_reset_controller_40020000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_reset_controller_40020000_RANGES_NUM 0
#define DT_N_S_soc_S_reset_controller_40020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_reset_controller_40020000_IRQ_NUM 0
#define DT_N_S_soc_S_reset_controller_40020000_IRQ_LEVEL 0
#define DT_N_S_soc_S_reset_controller_40020000_COMPAT_MATCHES_raspberrypi_pico_reset 1
#define DT_N_S_soc_S_reset_controller_40020000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_controller_40020000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_reset_controller_40020000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_controller_40020000_COMPAT_MODEL_IDX_0 "pico-reset"
#define DT_N_S_soc_S_reset_controller_40020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_reset_controller_40020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_reset_controller_40020000_P_reg {1073872896 /* 0x40020000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_reset_controller_40020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_controller_40020000_P_reg_IDX_0 1073872896
#define DT_N_S_soc_S_reset_controller_40020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_reset_controller_40020000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_reset_controller_40020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_reset_controller_40020000_P_reg_width 4
#define DT_N_S_soc_S_reset_controller_40020000_P_reg_width_EXISTS 1
#define DT_N_S_soc_S_reset_controller_40020000_P_active_low 0
#define DT_N_S_soc_S_reset_controller_40020000_P_active_low_EXISTS 1
#define DT_N_S_soc_S_reset_controller_40020000_P_compatible {"raspberrypi,pico-reset"}
#define DT_N_S_soc_S_reset_controller_40020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_controller_40020000_P_compatible_IDX_0 "raspberrypi,pico-reset"
#define DT_N_S_soc_S_reset_controller_40020000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-reset
#define DT_N_S_soc_S_reset_controller_40020000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_reset
#define DT_N_S_soc_S_reset_controller_40020000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_RESET
#define DT_N_S_soc_S_reset_controller_40020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_reset_controller_40020000, compatible, 0)
#define DT_N_S_soc_S_reset_controller_40020000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_reset_controller_40020000, compatible, 0)
#define DT_N_S_soc_S_reset_controller_40020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_reset_controller_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_reset_controller_40020000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_reset_controller_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_reset_controller_40020000_P_compatible_LEN 1
#define DT_N_S_soc_S_reset_controller_40020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_reset_controller_40020000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_reset_controller_40020000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_reset_controller_40020000_P_wakeup_source 0
#define DT_N_S_soc_S_reset_controller_40020000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_reset_controller_40020000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_reset_controller_40020000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/adc@400a0000
 *
 * Node identifier: DT_N_S_soc_S_adc_400a0000
 *
 * Binding (compatible = raspberrypi,pico-adc):
 *   $ZEPHYR_BASE\dts\bindings\adc\raspberrypi,pico-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_400a0000_PATH "/soc/adc@400a0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_400a0000_FULL_NAME "adc@400a0000"
#define DT_N_S_soc_S_adc_400a0000_FULL_NAME_UNQUOTED adc@400a0000
#define DT_N_S_soc_S_adc_400a0000_FULL_NAME_TOKEN adc_400a0000
#define DT_N_S_soc_S_adc_400a0000_FULL_NAME_UPPER_TOKEN ADC_400A0000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_400a0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_400a0000_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_400a0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_adc_400a0000_FOREACH_NODELABEL(fn) fn(adc)
#define DT_N_S_soc_S_adc_400a0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400a0000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_400a0000_CHILD_NUM 0
#define DT_N_S_soc_S_adc_400a0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_400a0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_400a0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_400a0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400a0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_400a0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_400a0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_400a0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400a0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_adc_400a0000_HASH HkBL_eRpHVaK_kO1NTdo0ieID_i0bslRBEx0F9rhkck

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_400a0000_ORD 28
#define DT_N_S_soc_S_adc_400a0000_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_400a0000_REQUIRES_ORDS \
	4, /* /soc */ \
	6, /* /pin-controller/adc_default */ \
	25, /* /soc/clock-controller@40010000 */ \
	26, /* /soc/interrupt-controller@e000e100 */ \
	27, /* /soc/reset-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_400a0000_SUPPORTS_ORDS \
	29, /* /dietemp */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_400a0000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_adc DT_N_S_soc_S_adc_400a0000
#define DT_N_NODELABEL_adc               DT_N_S_soc_S_adc_400a0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_400a0000_REG_NUM 1
#define DT_N_S_soc_S_adc_400a0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_REG_IDX_0_VAL_ADDRESS 1074397184 /* 0x400a0000 */
#define DT_N_S_soc_S_adc_400a0000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_adc_400a0000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_400a0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_400a0000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_400a0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_adc_400a0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_adc_400a0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_adc_400a0000_IRQ_LEVEL 1
#define DT_N_S_soc_S_adc_400a0000_IRQ_NAME_adc0_VAL_irq DT_N_S_soc_S_adc_400a0000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_adc_400a0000_IRQ_NAME_adc0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_IRQ_NAME_adc0_VAL_priority DT_N_S_soc_S_adc_400a0000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_adc_400a0000_IRQ_NAME_adc0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_IRQ_NAME_adc0_CONTROLLER DT_N_S_soc_S_adc_400a0000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_adc_400a0000_COMPAT_MATCHES_raspberrypi_pico_adc 1
#define DT_N_S_soc_S_adc_400a0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_adc_400a0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_COMPAT_MODEL_IDX_0 "pico-adc"
#define DT_N_S_soc_S_adc_400a0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_400a0000_PINCTRL_NUM 1
#define DT_N_S_soc_S_adc_400a0000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_adc_400a0000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_adc_400a0000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_adc_400a0000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_adc_default

/* Generic property macros: */
#define DT_N_S_soc_S_adc_400a0000_P_reg {1074397184 /* 0x400a0000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_adc_400a0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_reg_IDX_0 1074397184
#define DT_N_S_soc_S_adc_400a0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_adc_400a0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_vref_mv 3300
#define DT_N_S_soc_S_adc_400a0000_P_vref_mv_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_status "okay"
#define DT_N_S_soc_S_adc_400a0000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_adc_400a0000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_adc_400a0000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_400a0000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_adc_400a0000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_adc_400a0000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400a0000, status, 0)
#define DT_N_S_soc_S_adc_400a0000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400a0000, status, 0)
#define DT_N_S_soc_S_adc_400a0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400a0000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400a0000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400a0000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400a0000_P_status_LEN 1
#define DT_N_S_soc_S_adc_400a0000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_compatible {"raspberrypi,pico-adc"}
#define DT_N_S_soc_S_adc_400a0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_compatible_IDX_0 "raspberrypi,pico-adc"
#define DT_N_S_soc_S_adc_400a0000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-adc
#define DT_N_S_soc_S_adc_400a0000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_adc
#define DT_N_S_soc_S_adc_400a0000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_ADC
#define DT_N_S_soc_S_adc_400a0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400a0000, compatible, 0)
#define DT_N_S_soc_S_adc_400a0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400a0000, compatible, 0)
#define DT_N_S_soc_S_adc_400a0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400a0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400a0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400a0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400a0000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_400a0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_interrupts {35 /* 0x23 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_adc_400a0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_adc_400a0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_adc_400a0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_interrupt_names {"adc0"}
#define DT_N_S_soc_S_adc_400a0000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_interrupt_names_IDX_0 "adc0"
#define DT_N_S_soc_S_adc_400a0000_P_interrupt_names_IDX_0_STRING_UNQUOTED adc0
#define DT_N_S_soc_S_adc_400a0000_P_interrupt_names_IDX_0_STRING_TOKEN adc0
#define DT_N_S_soc_S_adc_400a0000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN ADC0
#define DT_N_S_soc_S_adc_400a0000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400a0000, interrupt_names, 0)
#define DT_N_S_soc_S_adc_400a0000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400a0000, interrupt_names, 0)
#define DT_N_S_soc_S_adc_400a0000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400a0000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400a0000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400a0000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400a0000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_adc_400a0000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40010000
#define DT_N_S_soc_S_adc_400a0000_P_clocks_IDX_0_VAL_clk_id 9
#define DT_N_S_soc_S_adc_400a0000_P_clocks_IDX_0_VAL_clk_id_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400a0000, clocks, 0)
#define DT_N_S_soc_S_adc_400a0000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400a0000, clocks, 0)
#define DT_N_S_soc_S_adc_400a0000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400a0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400a0000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400a0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400a0000_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_400a0000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_adc_400a0000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_400a0000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_400a0000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_adc_default
#define DT_N_S_soc_S_adc_400a0000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_adc_default
#define DT_N_S_soc_S_adc_400a0000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400a0000, pinctrl_0, 0)
#define DT_N_S_soc_S_adc_400a0000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400a0000, pinctrl_0, 0)
#define DT_N_S_soc_S_adc_400a0000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400a0000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400a0000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400a0000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400a0000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_adc_400a0000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_adc_400a0000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_adc_400a0000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_adc_400a0000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_adc_400a0000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_adc_400a0000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400a0000, pinctrl_names, 0)
#define DT_N_S_soc_S_adc_400a0000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400a0000, pinctrl_names, 0)
#define DT_N_S_soc_S_adc_400a0000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400a0000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400a0000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400a0000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400a0000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_adc_400a0000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_40020000
#define DT_N_S_soc_S_adc_400a0000_P_resets_IDX_0_VAL_id 0
#define DT_N_S_soc_S_adc_400a0000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_adc_400a0000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400a0000, resets, 0)
#define DT_N_S_soc_S_adc_400a0000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400a0000, resets, 0)
#define DT_N_S_soc_S_adc_400a0000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400a0000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400a0000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400a0000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400a0000_P_resets_LEN 1
#define DT_N_S_soc_S_adc_400a0000_P_resets_EXISTS 1

/*
 * Devicetree node: /dietemp
 *
 * Node identifier: DT_N_S_dietemp
 *
 * Binding (compatible = raspberrypi,pico-temp):
 *   $ZEPHYR_BASE\dts\bindings\sensor\raspberrrypi,pico-temp.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_dietemp_PATH "/dietemp"

/* Node's name with unit-address: */
#define DT_N_S_dietemp_FULL_NAME "dietemp"
#define DT_N_S_dietemp_FULL_NAME_UNQUOTED dietemp
#define DT_N_S_dietemp_FULL_NAME_TOKEN dietemp
#define DT_N_S_dietemp_FULL_NAME_UPPER_TOKEN DIETEMP

/* Node parent (/) identifier: */
#define DT_N_S_dietemp_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_dietemp_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_dietemp_NODELABEL_NUM 1
#define DT_N_S_dietemp_FOREACH_NODELABEL(fn) fn(die_temp)
#define DT_N_S_dietemp_FOREACH_NODELABEL_VARGS(fn, ...) fn(die_temp, __VA_ARGS__)
#define DT_N_S_dietemp_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_dietemp_CHILD_NUM 0
#define DT_N_S_dietemp_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_dietemp_FOREACH_CHILD(fn) 
#define DT_N_S_dietemp_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_dietemp_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_dietemp_HASH 1P3ft3QMjkFq1eBnbB6dz9pZsoSMwhVrPGe82Fpxz6c

/* Node's dependency ordinal: */
#define DT_N_S_dietemp_ORD 29
#define DT_N_S_dietemp_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_dietemp_REQUIRES_ORDS \
	0, /* / */ \
	28, /* /soc/adc@400a0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_dietemp_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_dietemp_EXISTS 1
#define DT_N_ALIAS_die_temp0              DT_N_S_dietemp
#define DT_N_INST_0_raspberrypi_pico_temp DT_N_S_dietemp
#define DT_N_NODELABEL_die_temp           DT_N_S_dietemp

/* Macros for properties that are special in the specification: */
#define DT_N_S_dietemp_REG_NUM 0
#define DT_N_S_dietemp_RANGES_NUM 0
#define DT_N_S_dietemp_FOREACH_RANGE(fn) 
#define DT_N_S_dietemp_IRQ_NUM 0
#define DT_N_S_dietemp_IRQ_LEVEL 0
#define DT_N_S_dietemp_COMPAT_MATCHES_raspberrypi_pico_temp 1
#define DT_N_S_dietemp_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_dietemp_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_dietemp_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_dietemp_COMPAT_MODEL_IDX_0 "pico-temp"
#define DT_N_S_dietemp_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_dietemp_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_dietemp_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_io_channels_IDX_0_PH DT_N_S_soc_S_adc_400a0000
#define DT_N_S_dietemp_P_io_channels_IDX_0_VAL_input 4
#define DT_N_S_dietemp_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, io_channels, 0)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, io_channels, 0)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, io_channels, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, io_channels, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_io_channels_LEN 1
#define DT_N_S_dietemp_P_io_channels_EXISTS 1
#define DT_N_S_dietemp_P_vbe 706000
#define DT_N_S_dietemp_P_vbe_EXISTS 1
#define DT_N_S_dietemp_P_vbe_slope -1721
#define DT_N_S_dietemp_P_vbe_slope_EXISTS 1
#define DT_N_S_dietemp_P_status "disabled"
#define DT_N_S_dietemp_P_status_STRING_UNQUOTED disabled
#define DT_N_S_dietemp_P_status_STRING_TOKEN disabled
#define DT_N_S_dietemp_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_dietemp_P_status_IDX_0 "disabled"
#define DT_N_S_dietemp_P_status_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_dietemp_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, status, 0)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, status, 0)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, status, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, status, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_status_LEN 1
#define DT_N_S_dietemp_P_status_EXISTS 1
#define DT_N_S_dietemp_P_compatible {"raspberrypi,pico-temp"}
#define DT_N_S_dietemp_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_compatible_IDX_0 "raspberrypi,pico-temp"
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-temp
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_temp
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_TEMP
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, compatible, 0)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, compatible, 0)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, compatible, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, compatible, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_compatible_LEN 1
#define DT_N_S_dietemp_P_compatible_EXISTS 1
#define DT_N_S_dietemp_P_zephyr_deferred_init 0
#define DT_N_S_dietemp_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_dietemp_P_wakeup_source 0
#define DT_N_S_dietemp_P_wakeup_source_EXISTS 1
#define DT_N_S_dietemp_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_dietemp_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"
#define DT_N_S_cpus_FULL_NAME_UNQUOTED cpus
#define DT_N_S_cpus_FULL_NAME_TOKEN cpus
#define DT_N_S_cpus_FULL_NAME_UPPER_TOKEN CPUS

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_NODELABEL_NUM 0
#define DT_N_S_cpus_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_cpus_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_CHILD_NUM 2
#define DT_N_S_cpus_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_cpus_HASH iL3XRGZVvvtpNJqKV0_jvtuXF7m6kgky4nI2ifizwdg

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 30
#define DT_N_S_cpus_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	31, /* /cpus/cpu@0 */ \
	32, /* /cpus/cpu@1 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_IRQ_LEVEL 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m33):
 *   $ZEPHYR_BASE\dts\bindings\cpu\arm,cortex-m33.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UNQUOTED cpu@0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_TOKEN cpu_0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UPPER_TOKEN CPU_0

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_0_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL(fn) fn(cpu0)
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(cpu0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_cpus_S_cpu_0_HASH Su0JBbOtM0QIxe_1ka2Xvgw4rk1QaIlMIj8Rp_v4yVQ

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 31
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	30, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m33 DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0        DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m33 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m33"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m33"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m33"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m33
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m33
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M33
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@1
 *
 * Node identifier: DT_N_S_cpus_S_cpu_1
 *
 * Binding (compatible = arm,cortex-m33):
 *   $ZEPHYR_BASE\dts\bindings\cpu\arm,cortex-m33.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_1_PATH "/cpus/cpu@1"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_1_FULL_NAME "cpu@1"
#define DT_N_S_cpus_S_cpu_1_FULL_NAME_UNQUOTED cpu@1
#define DT_N_S_cpus_S_cpu_1_FULL_NAME_TOKEN cpu_1
#define DT_N_S_cpus_S_cpu_1_FULL_NAME_UPPER_TOKEN CPU_1

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_1_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_1_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_1_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_1_FOREACH_NODELABEL(fn) fn(cpu1)
#define DT_N_S_cpus_S_cpu_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(cpu1, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_1_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_cpus_S_cpu_1_HASH 9JjWVNk3G1ibyc8ZwlqKxfoxH3N71yBfTFpYJTDe_oU

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_1_ORD 32
#define DT_N_S_cpus_S_cpu_1_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_1_REQUIRES_ORDS \
	30, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_1_EXISTS 1
#define DT_N_INST_1_arm_cortex_m33 DT_N_S_cpus_S_cpu_1
#define DT_N_NODELABEL_cpu1        DT_N_S_cpus_S_cpu_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_1_REG_NUM 1
#define DT_N_S_cpus_S_cpu_1_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_REG_IDX_0_VAL_ADDRESS 1 /* 0x1 */
#define DT_N_S_cpus_S_cpu_1_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_1_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_1_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_1_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_1_COMPAT_MATCHES_arm_cortex_m33 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_MODEL_IDX_0 "cortex-m33"
#define DT_N_S_cpus_S_cpu_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_1_P_compatible {"arm,cortex-m33"}
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0 "arm,cortex-m33"
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m33
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m33
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M33
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_1, compatible, 0)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_1, compatible, 0)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_1_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_reg {1 /* 0x1 */}
#define DT_N_S_cpus_S_cpu_1_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_reg_IDX_0 1
#define DT_N_S_cpus_S_cpu_1_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_1_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_1_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_1_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pin-controller/adc_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_adc_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_PATH "/pin-controller/adc_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_adc_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_adc_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_adc_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/adc_default) identifier: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_PARENT DT_N_S_pin_controller_S_adc_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_adc_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_adc_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_adc_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_adc_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_adc_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_adc_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_adc_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_adc_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_adc_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_adc_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_adc_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_HASH XUwucy7wVD_Qd7UvQeSGxICPCIPG3780oiAFHif_Hfc

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_ORD 33
#define DT_N_S_pin_controller_S_adc_default_S_group1_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_REQUIRES_ORDS \
	6, /* /pin-controller/adc_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_adc_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux {959 /* 0x3bf */}
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux_IDX_0 959
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_adc_default_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_adc_default_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_adc_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_adc_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_drive_strength 4
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_drive_strength_IDX_0_ENUM_IDX 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_drive_strength_IDX_0_ENUM_VAL_4_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_slew_rate 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_slew_rate_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_raspberrypi_oe_override 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_raspberrypi_oe_override_IDX_0_ENUM_IDX 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_raspberrypi_oe_override_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_raspberrypi_oe_override_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_raspberrypi_oe_override_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_input_enable 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_input_schmitt_enable 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/i2c1_default
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c1_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c1_default_PATH "/pin-controller/i2c1_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c1_default_FULL_NAME "i2c1_default"
#define DT_N_S_pin_controller_S_i2c1_default_FULL_NAME_UNQUOTED i2c1_default
#define DT_N_S_pin_controller_S_i2c1_default_FULL_NAME_TOKEN i2c1_default
#define DT_N_S_pin_controller_S_i2c1_default_FULL_NAME_UPPER_TOKEN I2C1_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_i2c1_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c1_default_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_i2c1_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_NODELABEL(fn) fn(i2c1_default)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c1_default, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c1_default_CHILD_NUM 1
#define DT_N_S_pin_controller_S_i2c1_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_S_i2c1_default_HASH XO1mymgcvFsuC9DhMfptRTCQBeKGbvb0Ib2nQh8oc7M

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c1_default_ORD 34
#define DT_N_S_pin_controller_S_i2c1_default_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c1_default_REQUIRES_ORDS \
	5, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c1_default_SUPPORTS_ORDS \
	35, /* /pin-controller/i2c1_default/group1 */ \
	47, /* /soc/i2c@40098000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c1_default_EXISTS 1
#define DT_N_NODELABEL_i2c1_default DT_N_S_pin_controller_S_i2c1_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c1_default_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c1_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_i2c1_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c1_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/i2c1_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c1_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_PATH "/pin-controller/i2c1_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/i2c1_default) identifier: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_PARENT DT_N_S_pin_controller_S_i2c1_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_i2c1_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_HASH cUGMjaLJ_EMYBWGL8KTvzJXC89iE0MLZ6zre2oO0xVA

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_ORD 35
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_REQUIRES_ORDS \
	34, /* /pin-controller/i2c1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux {195 /* 0xc3 */, 227 /* 0xe3 */}
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_IDX_0 195
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_IDX_1 227
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 0) \
	fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 1)
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 1)
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_drive_strength 4
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_drive_strength_IDX_0_ENUM_IDX 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_drive_strength_IDX_0_ENUM_VAL_4_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_slew_rate 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_slew_rate_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_raspberrypi_oe_override 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_raspberrypi_oe_override_IDX_0_ENUM_IDX 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_raspberrypi_oe_override_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_raspberrypi_oe_override_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_raspberrypi_oe_override_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_input_enable 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_input_schmitt_enable 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/pwm_ch4b_default
 *
 * Node identifier: DT_N_S_pin_controller_S_pwm_ch4b_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_PATH "/pin-controller/pwm_ch4b_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FULL_NAME "pwm_ch4b_default"
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FULL_NAME_UNQUOTED pwm_ch4b_default
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FULL_NAME_TOKEN pwm_ch4b_default
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FULL_NAME_UPPER_TOKEN PWM_CH4B_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FOREACH_NODELABEL(fn) fn(pwm_ch4b_default)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm_ch4b_default, __VA_ARGS__)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_CHILD_NUM 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_HASH YXb3daoXyfUOdLCT_qhcdTrx4WS1sM4R3v_eFgs5Bc8

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_ORD 36
#define DT_N_S_pin_controller_S_pwm_ch4b_default_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_REQUIRES_ORDS \
	5, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_SUPPORTS_ORDS \
	37, /* /pin-controller/pwm_ch4b_default/group1 */ \
	52, /* /soc/pwm@400a8000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_EXISTS 1
#define DT_N_NODELABEL_pwm_ch4b_default DT_N_S_pin_controller_S_pwm_ch4b_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_REG_NUM 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_pwm_ch4b_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/pwm_ch4b_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_PATH "/pin-controller/pwm_ch4b_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/pwm_ch4b_default) identifier: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_PARENT DT_N_S_pin_controller_S_pwm_ch4b_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_pwm_ch4b_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_HASH _QKnAUkPOt4SEekreBsWArN88vfIou90AcfrMy_B5tQ

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_ORD 37
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_REQUIRES_ORDS \
	36, /* /pin-controller/pwm_ch4b_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_pinmux {804 /* 0x324 */}
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_pinmux_IDX_0 804
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_drive_strength 4
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_drive_strength_IDX_0_ENUM_IDX 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_drive_strength_IDX_0_ENUM_VAL_4_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_slew_rate 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_slew_rate_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_raspberrypi_oe_override 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_raspberrypi_oe_override_IDX_0_ENUM_IDX 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_raspberrypi_oe_override_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_raspberrypi_oe_override_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_raspberrypi_oe_override_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_input_schmitt_enable 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/spi1_default
 *
 * Node identifier: DT_N_S_pin_controller_S_spi1_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spi1_default_PATH "/pin-controller/spi1_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spi1_default_FULL_NAME "spi1_default"
#define DT_N_S_pin_controller_S_spi1_default_FULL_NAME_UNQUOTED spi1_default
#define DT_N_S_pin_controller_S_spi1_default_FULL_NAME_TOKEN spi1_default
#define DT_N_S_pin_controller_S_spi1_default_FULL_NAME_UPPER_TOKEN SPI1_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_spi1_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spi1_default_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_spi1_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_spi1_default_FOREACH_NODELABEL(fn) fn(spi1_default)
#define DT_N_S_pin_controller_S_spi1_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi1_default, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi1_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spi1_default_CHILD_NUM 2
#define DT_N_S_pin_controller_S_spi1_default_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_pin_controller_S_spi1_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_spi1_default_S_group1) fn(DT_N_S_pin_controller_S_spi1_default_S_group2)
#define DT_N_S_pin_controller_S_spi1_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi1_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi1_default_S_group2)
#define DT_N_S_pin_controller_S_spi1_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi1_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi1_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi1_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi1_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_spi1_default_S_group1) fn(DT_N_S_pin_controller_S_spi1_default_S_group2)
#define DT_N_S_pin_controller_S_spi1_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi1_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi1_default_S_group2)
#define DT_N_S_pin_controller_S_spi1_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi1_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi1_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi1_default_S_group2, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_S_spi1_default_HASH g5SaVqsHkylpnajxmg0WDLBGxrKgvdfoC8LnetCaVIQ

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spi1_default_ORD 38
#define DT_N_S_pin_controller_S_spi1_default_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spi1_default_REQUIRES_ORDS \
	5, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spi1_default_SUPPORTS_ORDS \
	39, /* /pin-controller/spi1_default/group1 */ \
	40, /* /pin-controller/spi1_default/group2 */ \
	54, /* /soc/spi@40088000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spi1_default_EXISTS 1
#define DT_N_NODELABEL_spi1_default DT_N_S_pin_controller_S_spi1_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spi1_default_REG_NUM 0
#define DT_N_S_pin_controller_S_spi1_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spi1_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spi1_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spi1_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_spi1_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spi1_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/spi1_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_spi1_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_PATH "/pin-controller/spi1_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/spi1_default) identifier: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_PARENT DT_N_S_pin_controller_S_spi1_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_spi1_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_HASH zgJ2DRf9IInxBLjf6ypM_C8cSd0JCTvtrk_M3Zy8gh8

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_ORD 39
#define DT_N_S_pin_controller_S_spi1_default_S_group1_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_REQUIRES_ORDS \
	38, /* /pin-controller/spi1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spi1_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_pinmux {289 /* 0x121 */, 321 /* 0x141 */, 353 /* 0x161 */}
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_pinmux_IDX_0 289
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_pinmux_IDX_1 321
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_pinmux_IDX_2 353
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_spi1_default_S_group1, pinmux, 0) \
	fn(DT_N_S_pin_controller_S_spi1_default_S_group1, pinmux, 1) \
	fn(DT_N_S_pin_controller_S_spi1_default_S_group1, pinmux, 2)
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi1_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi1_default_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi1_default_S_group1, pinmux, 2)
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi1_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spi1_default_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spi1_default_S_group1, pinmux, 2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi1_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi1_default_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi1_default_S_group1, pinmux, 2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_pinmux_LEN 3
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_drive_strength 4
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_drive_strength_IDX_0_ENUM_IDX 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_drive_strength_IDX_0_ENUM_VAL_4_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_slew_rate 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_slew_rate_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_raspberrypi_oe_override 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_raspberrypi_oe_override_IDX_0_ENUM_IDX 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_raspberrypi_oe_override_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_raspberrypi_oe_override_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_raspberrypi_oe_override_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_input_schmitt_enable 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/spi1_default/group2
 *
 * Node identifier: DT_N_S_pin_controller_S_spi1_default_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_PATH "/pin-controller/spi1_default/group2"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FULL_NAME "group2"
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FULL_NAME_UNQUOTED group2
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FULL_NAME_TOKEN group2
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FULL_NAME_UPPER_TOKEN GROUP2

/* Node parent (/pin-controller/spi1_default) identifier: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_PARENT DT_N_S_pin_controller_S_spi1_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_spi1_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_CHILD_NUM 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_HASH eFhI4QQAd4vbg_Uom4s_GKYT_5Jh3ATCeJD7HLwwDeg

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_ORD 40
#define DT_N_S_pin_controller_S_spi1_default_S_group2_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_REQUIRES_ORDS \
	38, /* /pin-controller/spi1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_REG_NUM 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spi1_default_S_group2_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_pinmux {385 /* 0x181 */}
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_pinmux_IDX_0 385
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_spi1_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi1_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi1_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi1_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_drive_strength 4
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_drive_strength_IDX_0_ENUM_IDX 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_drive_strength_IDX_0_ENUM_VAL_4_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_drive_strength_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_slew_rate 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_slew_rate_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_slew_rate_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_raspberrypi_oe_override 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_raspberrypi_oe_override_IDX_0_ENUM_IDX 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_raspberrypi_oe_override_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_raspberrypi_oe_override_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_raspberrypi_oe_override_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_bias_disable 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_input_enable 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_input_schmitt_enable 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart0_default
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_PATH "/pin-controller/uart0_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_FULL_NAME "uart0_default"
#define DT_N_S_pin_controller_S_uart0_default_FULL_NAME_UNQUOTED uart0_default
#define DT_N_S_pin_controller_S_uart0_default_FULL_NAME_TOKEN uart0_default
#define DT_N_S_pin_controller_S_uart0_default_FULL_NAME_UPPER_TOKEN UART0_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart0_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_NODELABEL(fn) fn(uart0_default)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0_default, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_CHILD_NUM 2
#define DT_N_S_pin_controller_S_uart0_default_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_S_uart0_default_HASH hpPoQq5QYEcDym1g2JBVllTKxA90m_i7KnAuJScDL4o

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_ORD 41
#define DT_N_S_pin_controller_S_uart0_default_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_REQUIRES_ORDS \
	5, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_SUPPORTS_ORDS \
	42, /* /pin-controller/uart0_default/group1 */ \
	43, /* /pin-controller/uart0_default/group2 */ \
	58, /* /soc/uart@40070000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_EXISTS 1
#define DT_N_NODELABEL_uart0_default DT_N_S_pin_controller_S_uart0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/uart0_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PATH "/pin-controller/uart0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/uart0_default) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PARENT DT_N_S_pin_controller_S_uart0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_HASH mw9A94JnX0K15LdzaqSiBYHstgeiBk__IFPWTJ90zX0

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_ORD 42
#define DT_N_S_pin_controller_S_uart0_default_S_group1_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_REQUIRES_ORDS \
	41, /* /pin-controller/uart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux {2 /* 0x2 */}
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_IDX_0 2
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_drive_strength 4
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_drive_strength_IDX_0_ENUM_IDX 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_drive_strength_IDX_0_ENUM_VAL_4_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_slew_rate 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_slew_rate_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_raspberrypi_oe_override 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_raspberrypi_oe_override_IDX_0_ENUM_IDX 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_raspberrypi_oe_override_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_raspberrypi_oe_override_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_raspberrypi_oe_override_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_input_schmitt_enable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart0_default/group2
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_PATH "/pin-controller/uart0_default/group2"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FULL_NAME "group2"
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FULL_NAME_UNQUOTED group2
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FULL_NAME_TOKEN group2
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FULL_NAME_UPPER_TOKEN GROUP2

/* Node parent (/pin-controller/uart0_default) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_PARENT DT_N_S_pin_controller_S_uart0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_CHILD_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_HASH OhplDHWYl94QPNbqB4nVbAksIsz36XFx3_uS1MnAXRo

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_ORD 43
#define DT_N_S_pin_controller_S_uart0_default_S_group2_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_REQUIRES_ORDS \
	41, /* /pin-controller/uart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux {34 /* 0x22 */}
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_IDX_0 34
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_drive_strength 4
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_drive_strength_IDX_0_ENUM_IDX 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_drive_strength_IDX_0_ENUM_VAL_4_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_drive_strength_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_slew_rate 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_slew_rate_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_slew_rate_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_raspberrypi_oe_override 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_raspberrypi_oe_override_IDX_0_ENUM_IDX 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_raspberrypi_oe_override_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_raspberrypi_oe_override_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_raspberrypi_oe_override_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_input_enable 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_input_schmitt_enable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/dma@50000000
 *
 * Node identifier: DT_N_S_soc_S_dma_50000000
 *
 * Binding (compatible = raspberrypi,pico-dma):
 *   $ZEPHYR_BASE\dts\bindings\dma\raspberrypi,pico-dma.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_50000000_PATH "/soc/dma@50000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_50000000_FULL_NAME "dma@50000000"
#define DT_N_S_soc_S_dma_50000000_FULL_NAME_UNQUOTED dma@50000000
#define DT_N_S_soc_S_dma_50000000_FULL_NAME_TOKEN dma_50000000
#define DT_N_S_soc_S_dma_50000000_FULL_NAME_UPPER_TOKEN DMA_50000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_50000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_50000000_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dma_50000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_dma_50000000_FOREACH_NODELABEL(fn) fn(dma)
#define DT_N_S_soc_S_dma_50000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(dma, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dma_50000000_CHILD_NUM 0
#define DT_N_S_soc_S_dma_50000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dma_50000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_50000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_50000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_50000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dma_50000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_50000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_50000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_50000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_dma_50000000_HASH Cm_fegR8xX9ZNEWaRkwCsxGGqOw_Hp4Is2n67kBGXHM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_50000000_ORD 44
#define DT_N_S_soc_S_dma_50000000_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_50000000_REQUIRES_ORDS \
	4, /* /soc */ \
	25, /* /soc/clock-controller@40010000 */ \
	26, /* /soc/interrupt-controller@e000e100 */ \
	27, /* /soc/reset-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_50000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_50000000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_dma DT_N_S_soc_S_dma_50000000
#define DT_N_NODELABEL_dma               DT_N_S_soc_S_dma_50000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_50000000_REG_NUM 1
#define DT_N_S_soc_S_dma_50000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_REG_IDX_0_VAL_ADDRESS 1342177280 /* 0x50000000 */
#define DT_N_S_soc_S_dma_50000000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_dma_50000000_RANGES_NUM 0
#define DT_N_S_soc_S_dma_50000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_50000000_IRQ_NUM 4
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_0_VAL_irq 10
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_1_VAL_irq 11
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_1_VAL_priority 7
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_2_VAL_irq 12
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_2_VAL_priority 7
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_3_VAL_irq 13
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_3_VAL_priority 7
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_50000000_IRQ_LEVEL 1
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma0_VAL_irq DT_N_S_soc_S_dma_50000000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma0_VAL_priority DT_N_S_soc_S_dma_50000000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma0_CONTROLLER DT_N_S_soc_S_dma_50000000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma1_VAL_irq DT_N_S_soc_S_dma_50000000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma1_VAL_priority DT_N_S_soc_S_dma_50000000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma1_CONTROLLER DT_N_S_soc_S_dma_50000000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma2_VAL_irq DT_N_S_soc_S_dma_50000000_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma2_VAL_priority DT_N_S_soc_S_dma_50000000_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma2_CONTROLLER DT_N_S_soc_S_dma_50000000_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma3_VAL_irq DT_N_S_soc_S_dma_50000000_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma3_VAL_priority DT_N_S_soc_S_dma_50000000_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma3_CONTROLLER DT_N_S_soc_S_dma_50000000_IRQ_IDX_3_CONTROLLER
#define DT_N_S_soc_S_dma_50000000_COMPAT_MATCHES_raspberrypi_pico_dma 1
#define DT_N_S_soc_S_dma_50000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_dma_50000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_COMPAT_MODEL_IDX_0 "pico-dma"
#define DT_N_S_soc_S_dma_50000000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_50000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_50000000_P_reg {1342177280 /* 0x50000000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_dma_50000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_reg_IDX_0 1342177280
#define DT_N_S_soc_S_dma_50000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_dma_50000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_interrupts {10 /* 0xa */, 7 /* 0x7 */, 11 /* 0xb */, 7 /* 0x7 */, 12 /* 0xc */, 7 /* 0x7 */, 13 /* 0xd */, 7 /* 0x7 */}
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_0 10
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_2 11
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_3 7
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_4 12
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_5 7
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_6 13
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_7 7
#define DT_N_S_soc_S_dma_50000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_dma_channels 16
#define DT_N_S_soc_S_dma_50000000_P_dma_channels_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels {0 /* 0x0 */, 2 /* 0x2 */, 4 /* 0x4 */, 6 /* 0x6 */, 8 /* 0x8 */, 10 /* 0xa */}
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_0 0
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_1 2
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_2 4
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_3 6
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_4 8
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_5 10
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 0) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 1) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 2) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 3) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 4) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 5)
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 5)
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 5, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 5, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_LEN 6
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_status "disabled"
#define DT_N_S_soc_S_dma_50000000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_dma_50000000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dma_50000000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_50000000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_dma_50000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_dma_50000000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_50000000, status, 0)
#define DT_N_S_soc_S_dma_50000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_50000000, status, 0)
#define DT_N_S_soc_S_dma_50000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_50000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_50000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_status_LEN 1
#define DT_N_S_soc_S_dma_50000000_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_compatible {"raspberrypi,pico-dma"}
#define DT_N_S_soc_S_dma_50000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_compatible_IDX_0 "raspberrypi,pico-dma"
#define DT_N_S_soc_S_dma_50000000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-dma
#define DT_N_S_soc_S_dma_50000000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_dma
#define DT_N_S_soc_S_dma_50000000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_DMA
#define DT_N_S_soc_S_dma_50000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_50000000, compatible, 0)
#define DT_N_S_soc_S_dma_50000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_50000000, compatible, 0)
#define DT_N_S_soc_S_dma_50000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_50000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names {"dma0", "dma1", "dma2", "dma3"}
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_0 "dma0"
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_0_STRING_UNQUOTED dma0
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_0_STRING_TOKEN dma0
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN DMA0
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_1 "dma1"
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_1_STRING_UNQUOTED dma1
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_1_STRING_TOKEN dma1
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN DMA1
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_2 "dma2"
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_2_STRING_UNQUOTED dma2
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_2_STRING_TOKEN dma2
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN DMA2
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_3 "dma3"
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_3_STRING_UNQUOTED dma3
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_3_STRING_TOKEN dma3
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN DMA3
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 1) \
	fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 2) \
	fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 3)
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 3)
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40010000
#define DT_N_S_soc_S_dma_50000000_P_clocks_IDX_0_VAL_clk_id 5
#define DT_N_S_soc_S_dma_50000000_P_clocks_IDX_0_VAL_clk_id_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_50000000, clocks, 0)
#define DT_N_S_soc_S_dma_50000000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_50000000, clocks, 0)
#define DT_N_S_soc_S_dma_50000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_50000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_50000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_50000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dma_50000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_wakeup_source 0
#define DT_N_S_soc_S_dma_50000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dma_50000000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_40020000
#define DT_N_S_soc_S_dma_50000000_P_resets_IDX_0_VAL_id 2
#define DT_N_S_soc_S_dma_50000000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_50000000, resets, 0)
#define DT_N_S_soc_S_dma_50000000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_50000000, resets, 0)
#define DT_N_S_soc_S_dma_50000000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_50000000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_50000000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_resets_LEN 1
#define DT_N_S_soc_S_dma_50000000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/gpio@40028000
 *
 * Node identifier: DT_N_S_soc_S_gpio_40028000
 *
 * Binding (compatible = raspberrypi,pico-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\raspberrypi,pico-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_40028000_PATH "/soc/gpio@40028000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_40028000_FULL_NAME "gpio@40028000"
#define DT_N_S_soc_S_gpio_40028000_FULL_NAME_UNQUOTED gpio@40028000
#define DT_N_S_soc_S_gpio_40028000_FULL_NAME_TOKEN gpio_40028000
#define DT_N_S_soc_S_gpio_40028000_FULL_NAME_UPPER_TOKEN GPIO_40028000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_40028000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_40028000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_40028000_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_40028000_FOREACH_NODELABEL(fn) fn(gpio0)
#define DT_N_S_soc_S_gpio_40028000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40028000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_40028000_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_40028000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_40028000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_40028000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_40028000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_40028000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_40028000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_40028000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_40028000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_40028000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_gpio_40028000_HASH GsvIPgjIK3w4QA2ufTHblOhMcZlx1OZ9SyQN8loftzk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_40028000_ORD 45
#define DT_N_S_soc_S_gpio_40028000_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_40028000_REQUIRES_ORDS \
	4, /* /soc */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_40028000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_40028000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_gpio DT_N_S_soc_S_gpio_40028000
#define DT_N_NODELABEL_gpio0              DT_N_S_soc_S_gpio_40028000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_40028000_REG_NUM 1
#define DT_N_S_soc_S_gpio_40028000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40028000_REG_IDX_0_VAL_ADDRESS 1073905664 /* 0x40028000 */
#define DT_N_S_soc_S_gpio_40028000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_gpio_40028000_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_40028000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_40028000_IRQ_NUM 1
#define DT_N_S_soc_S_gpio_40028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40028000_IRQ_IDX_0_VAL_irq 21
#define DT_N_S_soc_S_gpio_40028000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40028000_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_gpio_40028000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40028000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_gpio_40028000_IRQ_LEVEL 1
#define DT_N_S_soc_S_gpio_40028000_COMPAT_MATCHES_raspberrypi_pico_gpio 1
#define DT_N_S_soc_S_gpio_40028000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40028000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_gpio_40028000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40028000_COMPAT_MODEL_IDX_0 "pico-gpio"
#define DT_N_S_soc_S_gpio_40028000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_40028000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_40028000_P_reg {1073905664 /* 0x40028000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_gpio_40028000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40028000_P_reg_IDX_0 1073905664
#define DT_N_S_soc_S_gpio_40028000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40028000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_gpio_40028000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_40028000_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_40028000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_40028000_P_ngpios 30
#define DT_N_S_soc_S_gpio_40028000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_40028000_P_status "okay"
#define DT_N_S_soc_S_gpio_40028000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_40028000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_40028000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_40028000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_40028000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40028000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_40028000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_40028000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40028000, status, 0)
#define DT_N_S_soc_S_gpio_40028000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40028000, status, 0)
#define DT_N_S_soc_S_gpio_40028000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40028000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40028000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40028000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40028000_P_status_LEN 1
#define DT_N_S_soc_S_gpio_40028000_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_40028000_P_compatible {"raspberrypi,pico-gpio"}
#define DT_N_S_soc_S_gpio_40028000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40028000_P_compatible_IDX_0 "raspberrypi,pico-gpio"
#define DT_N_S_soc_S_gpio_40028000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-gpio
#define DT_N_S_soc_S_gpio_40028000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_gpio
#define DT_N_S_soc_S_gpio_40028000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_GPIO
#define DT_N_S_soc_S_gpio_40028000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40028000, compatible, 0)
#define DT_N_S_soc_S_gpio_40028000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40028000, compatible, 0)
#define DT_N_S_soc_S_gpio_40028000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40028000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40028000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40028000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40028000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_40028000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_40028000_P_interrupts {21 /* 0x15 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_gpio_40028000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40028000_P_interrupts_IDX_0 21
#define DT_N_S_soc_S_gpio_40028000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40028000_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_gpio_40028000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_40028000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_40028000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_40028000_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_40028000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_40028000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_40028000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40090000
 *
 * Node identifier: DT_N_S_soc_S_i2c_40090000
 *
 * Binding (compatible = raspberrypi,pico-i2c):
 *   $ZEPHYR_BASE\dts\bindings\i2c\raspberrypi,pico-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40090000_PATH "/soc/i2c@40090000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40090000_FULL_NAME "i2c@40090000"
#define DT_N_S_soc_S_i2c_40090000_FULL_NAME_UNQUOTED i2c@40090000
#define DT_N_S_soc_S_i2c_40090000_FULL_NAME_TOKEN i2c_40090000
#define DT_N_S_soc_S_i2c_40090000_FULL_NAME_UPPER_TOKEN I2C_40090000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40090000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40090000_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_40090000_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_40090000_FOREACH_NODELABEL(fn) fn(i2c0)
#define DT_N_S_soc_S_i2c_40090000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40090000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40090000_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_40090000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_40090000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40090000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40090000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40090000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40090000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40090000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40090000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40090000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2c_40090000_HASH HWBRsftaJ9y6YVGb64PY5ECq6RZN4pJ9jzEZvcCYq9U

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40090000_ORD 46
#define DT_N_S_soc_S_i2c_40090000_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40090000_REQUIRES_ORDS \
	4, /* /soc */ \
	25, /* /soc/clock-controller@40010000 */ \
	26, /* /soc/interrupt-controller@e000e100 */ \
	27, /* /soc/reset-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40090000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40090000_EXISTS 1
#define DT_N_INST_1_raspberrypi_pico_i2c DT_N_S_soc_S_i2c_40090000
#define DT_N_INST_1_snps_designware_i2c  DT_N_S_soc_S_i2c_40090000
#define DT_N_NODELABEL_i2c0              DT_N_S_soc_S_i2c_40090000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40090000_REG_NUM 1
#define DT_N_S_soc_S_i2c_40090000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_REG_IDX_0_VAL_ADDRESS 1074331648 /* 0x40090000 */
#define DT_N_S_soc_S_i2c_40090000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_40090000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40090000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40090000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40090000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_i2c_40090000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_i2c_40090000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40090000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_40090000_IRQ_NAME_i2c0_VAL_irq DT_N_S_soc_S_i2c_40090000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40090000_IRQ_NAME_i2c0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_IRQ_NAME_i2c0_VAL_priority DT_N_S_soc_S_i2c_40090000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40090000_IRQ_NAME_i2c0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_IRQ_NAME_i2c0_CONTROLLER DT_N_S_soc_S_i2c_40090000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_i2c_40090000_COMPAT_MATCHES_raspberrypi_pico_i2c 1
#define DT_N_S_soc_S_i2c_40090000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_i2c_40090000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_COMPAT_MODEL_IDX_0 "pico-i2c"
#define DT_N_S_soc_S_i2c_40090000_COMPAT_MATCHES_snps_designware_i2c 1
#define DT_N_S_soc_S_i2c_40090000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_COMPAT_VENDOR_IDX_1 "Synopsys, Inc."
#define DT_N_S_soc_S_i2c_40090000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_COMPAT_MODEL_IDX_1 "designware-i2c"
#define DT_N_S_soc_S_i2c_40090000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40090000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40090000_P_interrupts {36 /* 0x24 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_i2c_40090000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_i2c_40090000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_i2c_40090000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_sq_size 4
#define DT_N_S_soc_S_i2c_40090000_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_cq_size 4
#define DT_N_S_soc_S_i2c_40090000_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_status "disabled"
#define DT_N_S_soc_S_i2c_40090000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40090000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40090000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40090000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40090000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40090000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40090000, status, 0)
#define DT_N_S_soc_S_i2c_40090000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40090000, status, 0)
#define DT_N_S_soc_S_i2c_40090000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40090000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40090000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40090000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40090000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40090000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_compatible {"raspberrypi,pico-i2c", "snps,designware-i2c"}
#define DT_N_S_soc_S_i2c_40090000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_compatible_IDX_0 "raspberrypi,pico-i2c"
#define DT_N_S_soc_S_i2c_40090000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-i2c
#define DT_N_S_soc_S_i2c_40090000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_i2c
#define DT_N_S_soc_S_i2c_40090000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_I2C
#define DT_N_S_soc_S_i2c_40090000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_compatible_IDX_1 "snps,designware-i2c"
#define DT_N_S_soc_S_i2c_40090000_P_compatible_IDX_1_STRING_UNQUOTED snps,designware-i2c
#define DT_N_S_soc_S_i2c_40090000_P_compatible_IDX_1_STRING_TOKEN snps_designware_i2c
#define DT_N_S_soc_S_i2c_40090000_P_compatible_IDX_1_STRING_UPPER_TOKEN SNPS_DESIGNWARE_I2C
#define DT_N_S_soc_S_i2c_40090000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40090000, compatible, 0) \
	fn(DT_N_S_soc_S_i2c_40090000, compatible, 1)
#define DT_N_S_soc_S_i2c_40090000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40090000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40090000, compatible, 1)
#define DT_N_S_soc_S_i2c_40090000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40090000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40090000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40090000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40090000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40090000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40090000_P_compatible_LEN 2
#define DT_N_S_soc_S_i2c_40090000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_reg {1074331648 /* 0x40090000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_40090000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_reg_IDX_0 1074331648
#define DT_N_S_soc_S_i2c_40090000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_40090000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_interrupt_names {"i2c0"}
#define DT_N_S_soc_S_i2c_40090000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_interrupt_names_IDX_0 "i2c0"
#define DT_N_S_soc_S_i2c_40090000_P_interrupt_names_IDX_0_STRING_UNQUOTED i2c0
#define DT_N_S_soc_S_i2c_40090000_P_interrupt_names_IDX_0_STRING_TOKEN i2c0
#define DT_N_S_soc_S_i2c_40090000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN I2C0
#define DT_N_S_soc_S_i2c_40090000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40090000, interrupt_names, 0)
#define DT_N_S_soc_S_i2c_40090000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40090000, interrupt_names, 0)
#define DT_N_S_soc_S_i2c_40090000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40090000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40090000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40090000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40090000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_i2c_40090000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40010000
#define DT_N_S_soc_S_i2c_40090000_P_clocks_IDX_0_VAL_clk_id 5
#define DT_N_S_soc_S_i2c_40090000_P_clocks_IDX_0_VAL_clk_id_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40090000, clocks, 0)
#define DT_N_S_soc_S_i2c_40090000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40090000, clocks, 0)
#define DT_N_S_soc_S_i2c_40090000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40090000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40090000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40090000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40090000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40090000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40090000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40090000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40090000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_40020000
#define DT_N_S_soc_S_i2c_40090000_P_resets_IDX_0_VAL_id 4
#define DT_N_S_soc_S_i2c_40090000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_i2c_40090000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40090000, resets, 0)
#define DT_N_S_soc_S_i2c_40090000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40090000, resets, 0)
#define DT_N_S_soc_S_i2c_40090000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40090000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40090000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40090000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40090000_P_resets_LEN 1
#define DT_N_S_soc_S_i2c_40090000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40098000
 *
 * Node identifier: DT_N_S_soc_S_i2c_40098000
 *
 * Binding (compatible = raspberrypi,pico-i2c):
 *   $ZEPHYR_BASE\dts\bindings\i2c\raspberrypi,pico-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40098000_PATH "/soc/i2c@40098000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40098000_FULL_NAME "i2c@40098000"
#define DT_N_S_soc_S_i2c_40098000_FULL_NAME_UNQUOTED i2c@40098000
#define DT_N_S_soc_S_i2c_40098000_FULL_NAME_TOKEN i2c_40098000
#define DT_N_S_soc_S_i2c_40098000_FULL_NAME_UPPER_TOKEN I2C_40098000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40098000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40098000_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_40098000_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_40098000_FOREACH_NODELABEL(fn) fn(i2c1)
#define DT_N_S_soc_S_i2c_40098000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40098000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40098000_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_40098000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_40098000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40098000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40098000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40098000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40098000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40098000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40098000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40098000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2c_40098000_HASH 6xFUONT5X7FGF34Glq7lGUELYnbbcMt_jM96m_al1d0

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40098000_ORD 47
#define DT_N_S_soc_S_i2c_40098000_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40098000_REQUIRES_ORDS \
	4, /* /soc */ \
	25, /* /soc/clock-controller@40010000 */ \
	26, /* /soc/interrupt-controller@e000e100 */ \
	27, /* /soc/reset-controller@40020000 */ \
	34, /* /pin-controller/i2c1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40098000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40098000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_i2c DT_N_S_soc_S_i2c_40098000
#define DT_N_INST_0_snps_designware_i2c  DT_N_S_soc_S_i2c_40098000
#define DT_N_NODELABEL_i2c1              DT_N_S_soc_S_i2c_40098000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40098000_REG_NUM 1
#define DT_N_S_soc_S_i2c_40098000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_REG_IDX_0_VAL_ADDRESS 1074364416 /* 0x40098000 */
#define DT_N_S_soc_S_i2c_40098000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_40098000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40098000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40098000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40098000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_IRQ_IDX_0_VAL_irq 37
#define DT_N_S_soc_S_i2c_40098000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_i2c_40098000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40098000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_40098000_IRQ_NAME_i2c1_VAL_irq DT_N_S_soc_S_i2c_40098000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40098000_IRQ_NAME_i2c1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_IRQ_NAME_i2c1_VAL_priority DT_N_S_soc_S_i2c_40098000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40098000_IRQ_NAME_i2c1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_IRQ_NAME_i2c1_CONTROLLER DT_N_S_soc_S_i2c_40098000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_i2c_40098000_COMPAT_MATCHES_raspberrypi_pico_i2c 1
#define DT_N_S_soc_S_i2c_40098000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_i2c_40098000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_COMPAT_MODEL_IDX_0 "pico-i2c"
#define DT_N_S_soc_S_i2c_40098000_COMPAT_MATCHES_snps_designware_i2c 1
#define DT_N_S_soc_S_i2c_40098000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_COMPAT_VENDOR_IDX_1 "Synopsys, Inc."
#define DT_N_S_soc_S_i2c_40098000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_COMPAT_MODEL_IDX_1 "designware-i2c"
#define DT_N_S_soc_S_i2c_40098000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40098000_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40098000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40098000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40098000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40098000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_i2c1_default

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40098000_P_interrupts {37 /* 0x25 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_i2c_40098000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_interrupts_IDX_0 37
#define DT_N_S_soc_S_i2c_40098000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_i2c_40098000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40098000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_sq_size 4
#define DT_N_S_soc_S_i2c_40098000_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_cq_size 4
#define DT_N_S_soc_S_i2c_40098000_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_status "okay"
#define DT_N_S_soc_S_i2c_40098000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_40098000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40098000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40098000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_40098000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40098000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40098000, status, 0)
#define DT_N_S_soc_S_i2c_40098000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40098000, status, 0)
#define DT_N_S_soc_S_i2c_40098000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40098000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40098000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40098000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40098000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40098000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_compatible {"raspberrypi,pico-i2c", "snps,designware-i2c"}
#define DT_N_S_soc_S_i2c_40098000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_compatible_IDX_0 "raspberrypi,pico-i2c"
#define DT_N_S_soc_S_i2c_40098000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-i2c
#define DT_N_S_soc_S_i2c_40098000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_i2c
#define DT_N_S_soc_S_i2c_40098000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_I2C
#define DT_N_S_soc_S_i2c_40098000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_compatible_IDX_1 "snps,designware-i2c"
#define DT_N_S_soc_S_i2c_40098000_P_compatible_IDX_1_STRING_UNQUOTED snps,designware-i2c
#define DT_N_S_soc_S_i2c_40098000_P_compatible_IDX_1_STRING_TOKEN snps_designware_i2c
#define DT_N_S_soc_S_i2c_40098000_P_compatible_IDX_1_STRING_UPPER_TOKEN SNPS_DESIGNWARE_I2C
#define DT_N_S_soc_S_i2c_40098000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40098000, compatible, 0) \
	fn(DT_N_S_soc_S_i2c_40098000, compatible, 1)
#define DT_N_S_soc_S_i2c_40098000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40098000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40098000, compatible, 1)
#define DT_N_S_soc_S_i2c_40098000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40098000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40098000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40098000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40098000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40098000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40098000_P_compatible_LEN 2
#define DT_N_S_soc_S_i2c_40098000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_reg {1074364416 /* 0x40098000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_40098000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_reg_IDX_0 1074364416
#define DT_N_S_soc_S_i2c_40098000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_40098000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_interrupt_names {"i2c1"}
#define DT_N_S_soc_S_i2c_40098000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_interrupt_names_IDX_0 "i2c1"
#define DT_N_S_soc_S_i2c_40098000_P_interrupt_names_IDX_0_STRING_UNQUOTED i2c1
#define DT_N_S_soc_S_i2c_40098000_P_interrupt_names_IDX_0_STRING_TOKEN i2c1
#define DT_N_S_soc_S_i2c_40098000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN I2C1
#define DT_N_S_soc_S_i2c_40098000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40098000, interrupt_names, 0)
#define DT_N_S_soc_S_i2c_40098000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40098000, interrupt_names, 0)
#define DT_N_S_soc_S_i2c_40098000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40098000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40098000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40098000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40098000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_i2c_40098000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40010000
#define DT_N_S_soc_S_i2c_40098000_P_clocks_IDX_0_VAL_clk_id 5
#define DT_N_S_soc_S_i2c_40098000_P_clocks_IDX_0_VAL_clk_id_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40098000, clocks, 0)
#define DT_N_S_soc_S_i2c_40098000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40098000, clocks, 0)
#define DT_N_S_soc_S_i2c_40098000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40098000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40098000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40098000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40098000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40098000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40098000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40098000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40098000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_i2c1_default
#define DT_N_S_soc_S_i2c_40098000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_i2c1_default
#define DT_N_S_soc_S_i2c_40098000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40098000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_40098000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40098000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_40098000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40098000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40098000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40098000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40098000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_i2c_40098000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40098000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40098000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_40098000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_40098000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40098000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40098000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40098000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40098000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40098000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40098000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40098000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40098000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40098000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40098000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_40020000
#define DT_N_S_soc_S_i2c_40098000_P_resets_IDX_0_VAL_id 5
#define DT_N_S_soc_S_i2c_40098000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_i2c_40098000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40098000, resets, 0)
#define DT_N_S_soc_S_i2c_40098000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40098000, resets, 0)
#define DT_N_S_soc_S_i2c_40098000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40098000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40098000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40098000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40098000_P_resets_LEN 1
#define DT_N_S_soc_S_i2c_40098000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/memory@20000000
 *
 * Node identifier: DT_N_S_soc_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE\dts\bindings\sram\mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20000000_PATH "/soc/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_20000000_FULL_NAME "memory@20000000"
#define DT_N_S_soc_S_memory_20000000_FULL_NAME_UNQUOTED memory@20000000
#define DT_N_S_soc_S_memory_20000000_FULL_NAME_TOKEN memory_20000000
#define DT_N_S_soc_S_memory_20000000_FULL_NAME_UPPER_TOKEN MEMORY_20000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_20000000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_20000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_20000000_FOREACH_NODELABEL(fn) fn(sram0)
#define DT_N_S_soc_S_memory_20000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_20000000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_20000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_memory_20000000_HASH 5mk6hI_a0RgTbSaRk0MwzSvPe_XVqQpqtmpmf4tdmFg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20000000_ORD 48
#define DT_N_S_soc_S_memory_20000000_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20000000_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_soc_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_soc_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_20000000_REG_NUM 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_SIZE 532480 /* 0x82000 */
#define DT_N_S_soc_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 532480 /* 0x82000 */}
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1 532480
#define DT_N_S_soc_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20000000, compatible, 0)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20000000, compatible, 0)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_20000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_20000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pio@50200000
 *
 * Node identifier: DT_N_S_soc_S_pio_50200000
 *
 * Binding (compatible = raspberrypi,pico-pio):
 *   $ZEPHYR_BASE\dts\bindings\misc\raspberrypi,pico-pio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pio_50200000_PATH "/soc/pio@50200000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pio_50200000_FULL_NAME "pio@50200000"
#define DT_N_S_soc_S_pio_50200000_FULL_NAME_UNQUOTED pio@50200000
#define DT_N_S_soc_S_pio_50200000_FULL_NAME_TOKEN pio_50200000
#define DT_N_S_soc_S_pio_50200000_FULL_NAME_UPPER_TOKEN PIO_50200000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pio_50200000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pio_50200000_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pio_50200000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pio_50200000_FOREACH_NODELABEL(fn) fn(pio0)
#define DT_N_S_soc_S_pio_50200000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pio0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50200000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pio_50200000_CHILD_NUM 0
#define DT_N_S_soc_S_pio_50200000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pio_50200000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pio_50200000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pio_50200000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pio_50200000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pio_50200000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pio_50200000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pio_50200000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pio_50200000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pio_50200000_HASH z4n9pQp5DFba_g00MmO7greqK9wo9BSdBCH9vhLdVUM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pio_50200000_ORD 49
#define DT_N_S_soc_S_pio_50200000_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pio_50200000_REQUIRES_ORDS \
	4, /* /soc */ \
	25, /* /soc/clock-controller@40010000 */ \
	27, /* /soc/reset-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pio_50200000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pio_50200000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_pio DT_N_S_soc_S_pio_50200000
#define DT_N_NODELABEL_pio0              DT_N_S_soc_S_pio_50200000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pio_50200000_REG_NUM 1
#define DT_N_S_soc_S_pio_50200000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_REG_IDX_0_VAL_ADDRESS 1344274432 /* 0x50200000 */
#define DT_N_S_soc_S_pio_50200000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pio_50200000_RANGES_NUM 0
#define DT_N_S_soc_S_pio_50200000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pio_50200000_IRQ_NUM 0
#define DT_N_S_soc_S_pio_50200000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pio_50200000_COMPAT_MATCHES_raspberrypi_pico_pio 1
#define DT_N_S_soc_S_pio_50200000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_pio_50200000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_COMPAT_MODEL_IDX_0 "pico-pio"
#define DT_N_S_soc_S_pio_50200000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pio_50200000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pio_50200000_P_status "disabled"
#define DT_N_S_soc_S_pio_50200000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pio_50200000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pio_50200000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pio_50200000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pio_50200000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_pio_50200000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pio_50200000, status, 0)
#define DT_N_S_soc_S_pio_50200000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pio_50200000, status, 0)
#define DT_N_S_soc_S_pio_50200000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pio_50200000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50200000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pio_50200000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50200000_P_status_LEN 1
#define DT_N_S_soc_S_pio_50200000_P_status_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_compatible {"raspberrypi,pico-pio"}
#define DT_N_S_soc_S_pio_50200000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_compatible_IDX_0 "raspberrypi,pico-pio"
#define DT_N_S_soc_S_pio_50200000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-pio
#define DT_N_S_soc_S_pio_50200000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_pio
#define DT_N_S_soc_S_pio_50200000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_PIO
#define DT_N_S_soc_S_pio_50200000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pio_50200000, compatible, 0)
#define DT_N_S_soc_S_pio_50200000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pio_50200000, compatible, 0)
#define DT_N_S_soc_S_pio_50200000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pio_50200000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50200000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pio_50200000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50200000_P_compatible_LEN 1
#define DT_N_S_soc_S_pio_50200000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_reg {1344274432 /* 0x50200000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pio_50200000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_reg_IDX_0 1344274432
#define DT_N_S_soc_S_pio_50200000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pio_50200000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40010000
#define DT_N_S_soc_S_pio_50200000_P_clocks_IDX_0_VAL_clk_id 5
#define DT_N_S_soc_S_pio_50200000_P_clocks_IDX_0_VAL_clk_id_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pio_50200000, clocks, 0)
#define DT_N_S_soc_S_pio_50200000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pio_50200000, clocks, 0)
#define DT_N_S_soc_S_pio_50200000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pio_50200000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50200000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pio_50200000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50200000_P_clocks_LEN 1
#define DT_N_S_soc_S_pio_50200000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pio_50200000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_wakeup_source 0
#define DT_N_S_soc_S_pio_50200000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pio_50200000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_40020000
#define DT_N_S_soc_S_pio_50200000_P_resets_IDX_0_VAL_id 11
#define DT_N_S_soc_S_pio_50200000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pio_50200000, resets, 0)
#define DT_N_S_soc_S_pio_50200000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pio_50200000, resets, 0)
#define DT_N_S_soc_S_pio_50200000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pio_50200000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50200000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pio_50200000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50200000_P_resets_LEN 1
#define DT_N_S_soc_S_pio_50200000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/pio@50300000
 *
 * Node identifier: DT_N_S_soc_S_pio_50300000
 *
 * Binding (compatible = raspberrypi,pico-pio):
 *   $ZEPHYR_BASE\dts\bindings\misc\raspberrypi,pico-pio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pio_50300000_PATH "/soc/pio@50300000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pio_50300000_FULL_NAME "pio@50300000"
#define DT_N_S_soc_S_pio_50300000_FULL_NAME_UNQUOTED pio@50300000
#define DT_N_S_soc_S_pio_50300000_FULL_NAME_TOKEN pio_50300000
#define DT_N_S_soc_S_pio_50300000_FULL_NAME_UPPER_TOKEN PIO_50300000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pio_50300000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pio_50300000_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pio_50300000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pio_50300000_FOREACH_NODELABEL(fn) fn(pio1)
#define DT_N_S_soc_S_pio_50300000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pio1, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50300000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pio_50300000_CHILD_NUM 0
#define DT_N_S_soc_S_pio_50300000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pio_50300000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pio_50300000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pio_50300000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pio_50300000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pio_50300000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pio_50300000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pio_50300000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pio_50300000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pio_50300000_HASH WunqDwQidgFJUTr5mt7m5Kjo5rHQQZb99Lz1ha87LMc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pio_50300000_ORD 50
#define DT_N_S_soc_S_pio_50300000_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pio_50300000_REQUIRES_ORDS \
	4, /* /soc */ \
	25, /* /soc/clock-controller@40010000 */ \
	27, /* /soc/reset-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pio_50300000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pio_50300000_EXISTS 1
#define DT_N_INST_1_raspberrypi_pico_pio DT_N_S_soc_S_pio_50300000
#define DT_N_NODELABEL_pio1              DT_N_S_soc_S_pio_50300000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pio_50300000_REG_NUM 1
#define DT_N_S_soc_S_pio_50300000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_REG_IDX_0_VAL_ADDRESS 1345323008 /* 0x50300000 */
#define DT_N_S_soc_S_pio_50300000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pio_50300000_RANGES_NUM 0
#define DT_N_S_soc_S_pio_50300000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pio_50300000_IRQ_NUM 0
#define DT_N_S_soc_S_pio_50300000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pio_50300000_COMPAT_MATCHES_raspberrypi_pico_pio 1
#define DT_N_S_soc_S_pio_50300000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_pio_50300000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_COMPAT_MODEL_IDX_0 "pico-pio"
#define DT_N_S_soc_S_pio_50300000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pio_50300000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pio_50300000_P_status "disabled"
#define DT_N_S_soc_S_pio_50300000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pio_50300000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pio_50300000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pio_50300000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pio_50300000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_pio_50300000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pio_50300000, status, 0)
#define DT_N_S_soc_S_pio_50300000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pio_50300000, status, 0)
#define DT_N_S_soc_S_pio_50300000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pio_50300000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50300000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pio_50300000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50300000_P_status_LEN 1
#define DT_N_S_soc_S_pio_50300000_P_status_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_compatible {"raspberrypi,pico-pio"}
#define DT_N_S_soc_S_pio_50300000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_compatible_IDX_0 "raspberrypi,pico-pio"
#define DT_N_S_soc_S_pio_50300000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-pio
#define DT_N_S_soc_S_pio_50300000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_pio
#define DT_N_S_soc_S_pio_50300000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_PIO
#define DT_N_S_soc_S_pio_50300000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pio_50300000, compatible, 0)
#define DT_N_S_soc_S_pio_50300000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pio_50300000, compatible, 0)
#define DT_N_S_soc_S_pio_50300000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pio_50300000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50300000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pio_50300000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50300000_P_compatible_LEN 1
#define DT_N_S_soc_S_pio_50300000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_reg {1345323008 /* 0x50300000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pio_50300000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_reg_IDX_0 1345323008
#define DT_N_S_soc_S_pio_50300000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pio_50300000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40010000
#define DT_N_S_soc_S_pio_50300000_P_clocks_IDX_0_VAL_clk_id 5
#define DT_N_S_soc_S_pio_50300000_P_clocks_IDX_0_VAL_clk_id_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pio_50300000, clocks, 0)
#define DT_N_S_soc_S_pio_50300000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pio_50300000, clocks, 0)
#define DT_N_S_soc_S_pio_50300000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pio_50300000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50300000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pio_50300000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50300000_P_clocks_LEN 1
#define DT_N_S_soc_S_pio_50300000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pio_50300000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_wakeup_source 0
#define DT_N_S_soc_S_pio_50300000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pio_50300000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_40020000
#define DT_N_S_soc_S_pio_50300000_P_resets_IDX_0_VAL_id 12
#define DT_N_S_soc_S_pio_50300000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pio_50300000, resets, 0)
#define DT_N_S_soc_S_pio_50300000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pio_50300000, resets, 0)
#define DT_N_S_soc_S_pio_50300000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pio_50300000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50300000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pio_50300000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50300000_P_resets_LEN 1
#define DT_N_S_soc_S_pio_50300000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/pio@50400000
 *
 * Node identifier: DT_N_S_soc_S_pio_50400000
 *
 * Binding (compatible = raspberrypi,pico-pio):
 *   $ZEPHYR_BASE\dts\bindings\misc\raspberrypi,pico-pio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pio_50400000_PATH "/soc/pio@50400000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pio_50400000_FULL_NAME "pio@50400000"
#define DT_N_S_soc_S_pio_50400000_FULL_NAME_UNQUOTED pio@50400000
#define DT_N_S_soc_S_pio_50400000_FULL_NAME_TOKEN pio_50400000
#define DT_N_S_soc_S_pio_50400000_FULL_NAME_UPPER_TOKEN PIO_50400000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pio_50400000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pio_50400000_CHILD_IDX 20

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pio_50400000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pio_50400000_FOREACH_NODELABEL(fn) fn(pio2)
#define DT_N_S_soc_S_pio_50400000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pio2, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50400000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pio_50400000_CHILD_NUM 0
#define DT_N_S_soc_S_pio_50400000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pio_50400000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pio_50400000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pio_50400000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pio_50400000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pio_50400000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pio_50400000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pio_50400000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pio_50400000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pio_50400000_HASH JohrRacfSlkn8y1Cy34fl_4GNQ1j3MeyinuBecMD3hc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pio_50400000_ORD 51
#define DT_N_S_soc_S_pio_50400000_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pio_50400000_REQUIRES_ORDS \
	4, /* /soc */ \
	25, /* /soc/clock-controller@40010000 */ \
	27, /* /soc/reset-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pio_50400000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pio_50400000_EXISTS 1
#define DT_N_INST_2_raspberrypi_pico_pio DT_N_S_soc_S_pio_50400000
#define DT_N_NODELABEL_pio2              DT_N_S_soc_S_pio_50400000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pio_50400000_REG_NUM 1
#define DT_N_S_soc_S_pio_50400000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50400000_REG_IDX_0_VAL_ADDRESS 1346371584 /* 0x50400000 */
#define DT_N_S_soc_S_pio_50400000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pio_50400000_RANGES_NUM 0
#define DT_N_S_soc_S_pio_50400000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pio_50400000_IRQ_NUM 0
#define DT_N_S_soc_S_pio_50400000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pio_50400000_COMPAT_MATCHES_raspberrypi_pico_pio 1
#define DT_N_S_soc_S_pio_50400000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50400000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_pio_50400000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50400000_COMPAT_MODEL_IDX_0 "pico-pio"
#define DT_N_S_soc_S_pio_50400000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pio_50400000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pio_50400000_P_status "disabled"
#define DT_N_S_soc_S_pio_50400000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pio_50400000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pio_50400000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pio_50400000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pio_50400000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50400000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_pio_50400000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pio_50400000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pio_50400000, status, 0)
#define DT_N_S_soc_S_pio_50400000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pio_50400000, status, 0)
#define DT_N_S_soc_S_pio_50400000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pio_50400000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50400000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pio_50400000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50400000_P_status_LEN 1
#define DT_N_S_soc_S_pio_50400000_P_status_EXISTS 1
#define DT_N_S_soc_S_pio_50400000_P_compatible {"raspberrypi,pico-pio"}
#define DT_N_S_soc_S_pio_50400000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50400000_P_compatible_IDX_0 "raspberrypi,pico-pio"
#define DT_N_S_soc_S_pio_50400000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-pio
#define DT_N_S_soc_S_pio_50400000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_pio
#define DT_N_S_soc_S_pio_50400000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_PIO
#define DT_N_S_soc_S_pio_50400000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pio_50400000, compatible, 0)
#define DT_N_S_soc_S_pio_50400000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pio_50400000, compatible, 0)
#define DT_N_S_soc_S_pio_50400000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pio_50400000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50400000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pio_50400000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50400000_P_compatible_LEN 1
#define DT_N_S_soc_S_pio_50400000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pio_50400000_P_reg {1346371584 /* 0x50400000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pio_50400000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50400000_P_reg_IDX_0 1346371584
#define DT_N_S_soc_S_pio_50400000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pio_50400000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pio_50400000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pio_50400000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50400000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40010000
#define DT_N_S_soc_S_pio_50400000_P_clocks_IDX_0_VAL_clk_id 5
#define DT_N_S_soc_S_pio_50400000_P_clocks_IDX_0_VAL_clk_id_EXISTS 1
#define DT_N_S_soc_S_pio_50400000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pio_50400000, clocks, 0)
#define DT_N_S_soc_S_pio_50400000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pio_50400000, clocks, 0)
#define DT_N_S_soc_S_pio_50400000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pio_50400000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50400000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pio_50400000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50400000_P_clocks_LEN 1
#define DT_N_S_soc_S_pio_50400000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pio_50400000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pio_50400000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pio_50400000_P_wakeup_source 0
#define DT_N_S_soc_S_pio_50400000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pio_50400000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pio_50400000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pio_50400000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50400000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_40020000
#define DT_N_S_soc_S_pio_50400000_P_resets_IDX_0_VAL_id 13
#define DT_N_S_soc_S_pio_50400000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pio_50400000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pio_50400000, resets, 0)
#define DT_N_S_soc_S_pio_50400000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pio_50400000, resets, 0)
#define DT_N_S_soc_S_pio_50400000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pio_50400000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50400000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pio_50400000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50400000_P_resets_LEN 1
#define DT_N_S_soc_S_pio_50400000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/pwm@400a8000
 *
 * Node identifier: DT_N_S_soc_S_pwm_400a8000
 *
 * Binding (compatible = raspberrypi,pico-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\raspberrypi,pico-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_400a8000_PATH "/soc/pwm@400a8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_400a8000_FULL_NAME "pwm@400a8000"
#define DT_N_S_soc_S_pwm_400a8000_FULL_NAME_UNQUOTED pwm@400a8000
#define DT_N_S_soc_S_pwm_400a8000_FULL_NAME_TOKEN pwm_400a8000
#define DT_N_S_soc_S_pwm_400a8000_FULL_NAME_UPPER_TOKEN PWM_400A8000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_400a8000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_400a8000_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pwm_400a8000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pwm_400a8000_FOREACH_NODELABEL(fn) fn(pwm)
#define DT_N_S_soc_S_pwm_400a8000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_400a8000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_400a8000_CHILD_NUM 0
#define DT_N_S_soc_S_pwm_400a8000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pwm_400a8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_400a8000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_400a8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_400a8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_400a8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_400a8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_400a8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_400a8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pwm_400a8000_HASH 9cx_cYq2UBKsDyyeXUA6k0SkCECTCeLIg8mUhc6EXLM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_400a8000_ORD 52
#define DT_N_S_soc_S_pwm_400a8000_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_400a8000_REQUIRES_ORDS \
	4, /* /soc */ \
	25, /* /soc/clock-controller@40010000 */ \
	26, /* /soc/interrupt-controller@e000e100 */ \
	27, /* /soc/reset-controller@40020000 */ \
	36, /* /pin-controller/pwm_ch4b_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_400a8000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_400a8000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_pwm DT_N_S_soc_S_pwm_400a8000
#define DT_N_NODELABEL_pwm               DT_N_S_soc_S_pwm_400a8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_400a8000_REG_NUM 1
#define DT_N_S_soc_S_pwm_400a8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_REG_IDX_0_VAL_ADDRESS 1074429952 /* 0x400a8000 */
#define DT_N_S_soc_S_pwm_400a8000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pwm_400a8000_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_400a8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_400a8000_IRQ_NUM 2
#define DT_N_S_soc_S_pwm_400a8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_IRQ_IDX_0_VAL_irq 8
#define DT_N_S_soc_S_pwm_400a8000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_pwm_400a8000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_pwm_400a8000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_IRQ_IDX_1_VAL_irq 9
#define DT_N_S_soc_S_pwm_400a8000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_IRQ_IDX_1_VAL_priority 7
#define DT_N_S_soc_S_pwm_400a8000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_pwm_400a8000_IRQ_LEVEL 1
#define DT_N_S_soc_S_pwm_400a8000_IRQ_NAME_pwm_irq_wrap_0_VAL_irq DT_N_S_soc_S_pwm_400a8000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_pwm_400a8000_IRQ_NAME_pwm_irq_wrap_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_IRQ_NAME_pwm_irq_wrap_0_VAL_priority DT_N_S_soc_S_pwm_400a8000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_pwm_400a8000_IRQ_NAME_pwm_irq_wrap_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_IRQ_NAME_pwm_irq_wrap_0_CONTROLLER DT_N_S_soc_S_pwm_400a8000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_pwm_400a8000_IRQ_NAME_pwm_irq_wrap_1_VAL_irq DT_N_S_soc_S_pwm_400a8000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_pwm_400a8000_IRQ_NAME_pwm_irq_wrap_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_IRQ_NAME_pwm_irq_wrap_1_VAL_priority DT_N_S_soc_S_pwm_400a8000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_pwm_400a8000_IRQ_NAME_pwm_irq_wrap_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_IRQ_NAME_pwm_irq_wrap_1_CONTROLLER DT_N_S_soc_S_pwm_400a8000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_pwm_400a8000_COMPAT_MATCHES_raspberrypi_pico_pwm 1
#define DT_N_S_soc_S_pwm_400a8000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_pwm_400a8000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_COMPAT_MODEL_IDX_0 "pico-pwm"
#define DT_N_S_soc_S_pwm_400a8000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_400a8000_PINCTRL_NUM 1
#define DT_N_S_soc_S_pwm_400a8000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_pwm_400a8000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_pwm_400a8000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_pwm_400a8000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_pwm_ch4b_default

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_400a8000_P_reg {1074429952 /* 0x400a8000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pwm_400a8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_reg_IDX_0 1074429952
#define DT_N_S_soc_S_pwm_400a8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pwm_400a8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_interrupts {8 /* 0x8 */, 7 /* 0x7 */, 9 /* 0x9 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_pwm_400a8000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_interrupts_IDX_0 8
#define DT_N_S_soc_S_pwm_400a8000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_pwm_400a8000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_interrupts_IDX_2 9
#define DT_N_S_soc_S_pwm_400a8000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_interrupts_IDX_3 7
#define DT_N_S_soc_S_pwm_400a8000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_divider_int_0 255
#define DT_N_S_soc_S_pwm_400a8000_P_divider_int_0_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_pwm_ch4b_default
#define DT_N_S_soc_S_pwm_400a8000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_pwm_ch4b_default
#define DT_N_S_soc_S_pwm_400a8000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_400a8000, pinctrl_0, 0)
#define DT_N_S_soc_S_pwm_400a8000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_400a8000, pinctrl_0, 0)
#define DT_N_S_soc_S_pwm_400a8000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_400a8000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_400a8000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_400a8000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_400a8000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_pwm_400a8000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_pwm_400a8000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_pwm_400a8000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_pwm_400a8000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_pwm_400a8000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_pwm_400a8000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_400a8000, pinctrl_names, 0)
#define DT_N_S_soc_S_pwm_400a8000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_400a8000, pinctrl_names, 0)
#define DT_N_S_soc_S_pwm_400a8000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_400a8000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_400a8000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_400a8000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_400a8000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_pwm_400a8000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_40020000
#define DT_N_S_soc_S_pwm_400a8000_P_resets_IDX_0_VAL_id 16
#define DT_N_S_soc_S_pwm_400a8000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_400a8000, resets, 0)
#define DT_N_S_soc_S_pwm_400a8000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_400a8000, resets, 0)
#define DT_N_S_soc_S_pwm_400a8000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_400a8000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_400a8000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_400a8000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_400a8000_P_resets_LEN 1
#define DT_N_S_soc_S_pwm_400a8000_P_resets_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_status "disabled"
#define DT_N_S_soc_S_pwm_400a8000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_400a8000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_400a8000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_400a8000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_400a8000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_400a8000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_400a8000, status, 0)
#define DT_N_S_soc_S_pwm_400a8000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_400a8000, status, 0)
#define DT_N_S_soc_S_pwm_400a8000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_400a8000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_400a8000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_400a8000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_400a8000_P_status_LEN 1
#define DT_N_S_soc_S_pwm_400a8000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_compatible {"raspberrypi,pico-pwm"}
#define DT_N_S_soc_S_pwm_400a8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_compatible_IDX_0 "raspberrypi,pico-pwm"
#define DT_N_S_soc_S_pwm_400a8000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-pwm
#define DT_N_S_soc_S_pwm_400a8000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_pwm
#define DT_N_S_soc_S_pwm_400a8000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_PWM
#define DT_N_S_soc_S_pwm_400a8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_400a8000, compatible, 0)
#define DT_N_S_soc_S_pwm_400a8000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_400a8000, compatible, 0)
#define DT_N_S_soc_S_pwm_400a8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_400a8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_400a8000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_400a8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_400a8000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_400a8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_interrupt_names {"PWM_IRQ_WRAP_0", "PWM_IRQ_WRAP_1"}
#define DT_N_S_soc_S_pwm_400a8000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_interrupt_names_IDX_0 "PWM_IRQ_WRAP_0"
#define DT_N_S_soc_S_pwm_400a8000_P_interrupt_names_IDX_0_STRING_UNQUOTED PWM_IRQ_WRAP_0
#define DT_N_S_soc_S_pwm_400a8000_P_interrupt_names_IDX_0_STRING_TOKEN PWM_IRQ_WRAP_0
#define DT_N_S_soc_S_pwm_400a8000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN PWM_IRQ_WRAP_0
#define DT_N_S_soc_S_pwm_400a8000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_interrupt_names_IDX_1 "PWM_IRQ_WRAP_1"
#define DT_N_S_soc_S_pwm_400a8000_P_interrupt_names_IDX_1_STRING_UNQUOTED PWM_IRQ_WRAP_1
#define DT_N_S_soc_S_pwm_400a8000_P_interrupt_names_IDX_1_STRING_TOKEN PWM_IRQ_WRAP_1
#define DT_N_S_soc_S_pwm_400a8000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN PWM_IRQ_WRAP_1
#define DT_N_S_soc_S_pwm_400a8000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_400a8000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_pwm_400a8000, interrupt_names, 1)
#define DT_N_S_soc_S_pwm_400a8000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_400a8000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pwm_400a8000, interrupt_names, 1)
#define DT_N_S_soc_S_pwm_400a8000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_400a8000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_400a8000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_400a8000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_400a8000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pwm_400a8000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_400a8000_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_pwm_400a8000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40010000
#define DT_N_S_soc_S_pwm_400a8000_P_clocks_IDX_0_VAL_clk_id 5
#define DT_N_S_soc_S_pwm_400a8000_P_clocks_IDX_0_VAL_clk_id_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_400a8000, clocks, 0)
#define DT_N_S_soc_S_pwm_400a8000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_400a8000, clocks, 0)
#define DT_N_S_soc_S_pwm_400a8000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_400a8000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_400a8000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_400a8000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_400a8000_P_clocks_LEN 1
#define DT_N_S_soc_S_pwm_400a8000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pwm_400a8000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_400a8000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_400a8000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_400a8000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40080000
 *
 * Node identifier: DT_N_S_soc_S_spi_40080000
 *
 * Binding (compatible = raspberrypi,pico-spi):
 *   $ZEPHYR_BASE\dts\bindings\spi\raspberrypi,pico-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40080000_PATH "/soc/spi@40080000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40080000_FULL_NAME "spi@40080000"
#define DT_N_S_soc_S_spi_40080000_FULL_NAME_UNQUOTED spi@40080000
#define DT_N_S_soc_S_spi_40080000_FULL_NAME_TOKEN spi_40080000
#define DT_N_S_soc_S_spi_40080000_FULL_NAME_UPPER_TOKEN SPI_40080000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40080000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40080000_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40080000_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_40080000_FOREACH_NODELABEL(fn) fn(spi0)
#define DT_N_S_soc_S_spi_40080000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40080000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40080000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40080000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40080000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40080000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40080000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40080000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40080000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40080000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40080000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40080000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_spi_40080000_HASH nzXjrxeKX1JKG8ldybwnZBs7j90HRtXrcAS6BLTUBgM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40080000_ORD 53
#define DT_N_S_soc_S_spi_40080000_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40080000_REQUIRES_ORDS \
	4, /* /soc */ \
	25, /* /soc/clock-controller@40010000 */ \
	26, /* /soc/interrupt-controller@e000e100 */ \
	27, /* /soc/reset-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40080000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40080000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_spi DT_N_S_soc_S_spi_40080000
#define DT_N_INST_0_arm_pl022            DT_N_S_soc_S_spi_40080000
#define DT_N_NODELABEL_spi0              DT_N_S_soc_S_spi_40080000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40080000_REG_NUM 1
#define DT_N_S_soc_S_spi_40080000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_REG_IDX_0_VAL_ADDRESS 1074266112 /* 0x40080000 */
#define DT_N_S_soc_S_spi_40080000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40080000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40080000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40080000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40080000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_IRQ_IDX_0_VAL_irq 31
#define DT_N_S_soc_S_spi_40080000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_spi_40080000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40080000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40080000_IRQ_NAME_spi0_VAL_irq DT_N_S_soc_S_spi_40080000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_spi_40080000_IRQ_NAME_spi0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_IRQ_NAME_spi0_VAL_priority DT_N_S_soc_S_spi_40080000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_spi_40080000_IRQ_NAME_spi0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_IRQ_NAME_spi0_CONTROLLER DT_N_S_soc_S_spi_40080000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_spi_40080000_COMPAT_MATCHES_raspberrypi_pico_spi 1
#define DT_N_S_soc_S_spi_40080000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_spi_40080000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_COMPAT_MODEL_IDX_0 "pico-spi"
#define DT_N_S_soc_S_spi_40080000_COMPAT_MATCHES_arm_pl022 1
#define DT_N_S_soc_S_spi_40080000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_COMPAT_VENDOR_IDX_1 "ARM Ltd."
#define DT_N_S_soc_S_spi_40080000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_COMPAT_MODEL_IDX_1 "pl022"
#define DT_N_S_soc_S_spi_40080000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40080000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40080000_P_reg {1074266112 /* 0x40080000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40080000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_P_reg_IDX_0 1074266112
#define DT_N_S_soc_S_spi_40080000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40080000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40010000
#define DT_N_S_soc_S_spi_40080000_P_clocks_IDX_0_VAL_clk_id 6
#define DT_N_S_soc_S_spi_40080000_P_clocks_IDX_0_VAL_clk_id_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40080000, clocks, 0)
#define DT_N_S_soc_S_spi_40080000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40080000, clocks, 0)
#define DT_N_S_soc_S_spi_40080000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40080000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40080000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40080000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40080000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40080000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_P_status "disabled"
#define DT_N_S_soc_S_spi_40080000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40080000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40080000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40080000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40080000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40080000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40080000, status, 0)
#define DT_N_S_soc_S_spi_40080000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40080000, status, 0)
#define DT_N_S_soc_S_spi_40080000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40080000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40080000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40080000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40080000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40080000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_P_compatible {"raspberrypi,pico-spi", "arm,pl022"}
#define DT_N_S_soc_S_spi_40080000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_P_compatible_IDX_0 "raspberrypi,pico-spi"
#define DT_N_S_soc_S_spi_40080000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-spi
#define DT_N_S_soc_S_spi_40080000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_spi
#define DT_N_S_soc_S_spi_40080000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_SPI
#define DT_N_S_soc_S_spi_40080000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_P_compatible_IDX_1 "arm,pl022"
#define DT_N_S_soc_S_spi_40080000_P_compatible_IDX_1_STRING_UNQUOTED arm,pl022
#define DT_N_S_soc_S_spi_40080000_P_compatible_IDX_1_STRING_TOKEN arm_pl022
#define DT_N_S_soc_S_spi_40080000_P_compatible_IDX_1_STRING_UPPER_TOKEN ARM_PL022
#define DT_N_S_soc_S_spi_40080000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40080000, compatible, 0) \
	fn(DT_N_S_soc_S_spi_40080000, compatible, 1)
#define DT_N_S_soc_S_spi_40080000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40080000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40080000, compatible, 1)
#define DT_N_S_soc_S_spi_40080000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40080000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40080000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40080000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40080000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40080000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40080000_P_compatible_LEN 2
#define DT_N_S_soc_S_spi_40080000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_P_interrupts {31 /* 0x1f */, 7 /* 0x7 */}
#define DT_N_S_soc_S_spi_40080000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_P_interrupts_IDX_0 31
#define DT_N_S_soc_S_spi_40080000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_spi_40080000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_P_interrupt_names {"spi0"}
#define DT_N_S_soc_S_spi_40080000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_P_interrupt_names_IDX_0 "spi0"
#define DT_N_S_soc_S_spi_40080000_P_interrupt_names_IDX_0_STRING_UNQUOTED spi0
#define DT_N_S_soc_S_spi_40080000_P_interrupt_names_IDX_0_STRING_TOKEN spi0
#define DT_N_S_soc_S_spi_40080000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN SPI0
#define DT_N_S_soc_S_spi_40080000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40080000, interrupt_names, 0)
#define DT_N_S_soc_S_spi_40080000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40080000, interrupt_names, 0)
#define DT_N_S_soc_S_spi_40080000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40080000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40080000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40080000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40080000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_spi_40080000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40080000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40080000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40080000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_40020000
#define DT_N_S_soc_S_spi_40080000_P_resets_IDX_0_VAL_id 18
#define DT_N_S_soc_S_spi_40080000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_spi_40080000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40080000, resets, 0)
#define DT_N_S_soc_S_spi_40080000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40080000, resets, 0)
#define DT_N_S_soc_S_spi_40080000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40080000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40080000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40080000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40080000_P_resets_LEN 1
#define DT_N_S_soc_S_spi_40080000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/spi@40088000
 *
 * Node identifier: DT_N_S_soc_S_spi_40088000
 *
 * Binding (compatible = raspberrypi,pico-spi):
 *   $ZEPHYR_BASE\dts\bindings\spi\raspberrypi,pico-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40088000_PATH "/soc/spi@40088000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40088000_FULL_NAME "spi@40088000"
#define DT_N_S_soc_S_spi_40088000_FULL_NAME_UNQUOTED spi@40088000
#define DT_N_S_soc_S_spi_40088000_FULL_NAME_TOKEN spi_40088000
#define DT_N_S_soc_S_spi_40088000_FULL_NAME_UPPER_TOKEN SPI_40088000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40088000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40088000_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40088000_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_40088000_FOREACH_NODELABEL(fn) fn(spi1)
#define DT_N_S_soc_S_spi_40088000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40088000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40088000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40088000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40088000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40088000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40088000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40088000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40088000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40088000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40088000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40088000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_spi_40088000_HASH 7McVooQpejLcirpI_71VQhiYvpenDgDm_lzHCpzed7Q

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40088000_ORD 54
#define DT_N_S_soc_S_spi_40088000_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40088000_REQUIRES_ORDS \
	4, /* /soc */ \
	25, /* /soc/clock-controller@40010000 */ \
	26, /* /soc/interrupt-controller@e000e100 */ \
	27, /* /soc/reset-controller@40020000 */ \
	38, /* /pin-controller/spi1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40088000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40088000_EXISTS 1
#define DT_N_INST_1_raspberrypi_pico_spi DT_N_S_soc_S_spi_40088000
#define DT_N_INST_1_arm_pl022            DT_N_S_soc_S_spi_40088000
#define DT_N_NODELABEL_spi1              DT_N_S_soc_S_spi_40088000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40088000_REG_NUM 1
#define DT_N_S_soc_S_spi_40088000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_REG_IDX_0_VAL_ADDRESS 1074298880 /* 0x40088000 */
#define DT_N_S_soc_S_spi_40088000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40088000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40088000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40088000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40088000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_IRQ_IDX_0_VAL_irq 32
#define DT_N_S_soc_S_spi_40088000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_spi_40088000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40088000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40088000_IRQ_NAME_spi1_VAL_irq DT_N_S_soc_S_spi_40088000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_spi_40088000_IRQ_NAME_spi1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_IRQ_NAME_spi1_VAL_priority DT_N_S_soc_S_spi_40088000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_spi_40088000_IRQ_NAME_spi1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_IRQ_NAME_spi1_CONTROLLER DT_N_S_soc_S_spi_40088000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_spi_40088000_COMPAT_MATCHES_raspberrypi_pico_spi 1
#define DT_N_S_soc_S_spi_40088000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_spi_40088000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_COMPAT_MODEL_IDX_0 "pico-spi"
#define DT_N_S_soc_S_spi_40088000_COMPAT_MATCHES_arm_pl022 1
#define DT_N_S_soc_S_spi_40088000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_COMPAT_VENDOR_IDX_1 "ARM Ltd."
#define DT_N_S_soc_S_spi_40088000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_COMPAT_MODEL_IDX_1 "pl022"
#define DT_N_S_soc_S_spi_40088000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40088000_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_40088000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_40088000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40088000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_40088000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_spi1_default

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40088000_P_reg {1074298880 /* 0x40088000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40088000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_reg_IDX_0 1074298880
#define DT_N_S_soc_S_spi_40088000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40088000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40010000
#define DT_N_S_soc_S_spi_40088000_P_clocks_IDX_0_VAL_clk_id 6
#define DT_N_S_soc_S_spi_40088000_P_clocks_IDX_0_VAL_clk_id_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40088000, clocks, 0)
#define DT_N_S_soc_S_spi_40088000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40088000, clocks, 0)
#define DT_N_S_soc_S_spi_40088000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40088000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40088000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40088000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40088000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40088000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_clock_frequency 8000000
#define DT_N_S_soc_S_spi_40088000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_status "disabled"
#define DT_N_S_soc_S_spi_40088000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40088000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40088000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40088000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40088000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40088000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40088000, status, 0)
#define DT_N_S_soc_S_spi_40088000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40088000, status, 0)
#define DT_N_S_soc_S_spi_40088000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40088000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40088000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40088000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40088000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40088000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_compatible {"raspberrypi,pico-spi", "arm,pl022"}
#define DT_N_S_soc_S_spi_40088000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_compatible_IDX_0 "raspberrypi,pico-spi"
#define DT_N_S_soc_S_spi_40088000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-spi
#define DT_N_S_soc_S_spi_40088000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_spi
#define DT_N_S_soc_S_spi_40088000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_SPI
#define DT_N_S_soc_S_spi_40088000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_compatible_IDX_1 "arm,pl022"
#define DT_N_S_soc_S_spi_40088000_P_compatible_IDX_1_STRING_UNQUOTED arm,pl022
#define DT_N_S_soc_S_spi_40088000_P_compatible_IDX_1_STRING_TOKEN arm_pl022
#define DT_N_S_soc_S_spi_40088000_P_compatible_IDX_1_STRING_UPPER_TOKEN ARM_PL022
#define DT_N_S_soc_S_spi_40088000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40088000, compatible, 0) \
	fn(DT_N_S_soc_S_spi_40088000, compatible, 1)
#define DT_N_S_soc_S_spi_40088000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40088000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40088000, compatible, 1)
#define DT_N_S_soc_S_spi_40088000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40088000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40088000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40088000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40088000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40088000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40088000_P_compatible_LEN 2
#define DT_N_S_soc_S_spi_40088000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_interrupts {32 /* 0x20 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_spi_40088000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_interrupts_IDX_0 32
#define DT_N_S_soc_S_spi_40088000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_spi_40088000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_interrupt_names {"spi1"}
#define DT_N_S_soc_S_spi_40088000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_interrupt_names_IDX_0 "spi1"
#define DT_N_S_soc_S_spi_40088000_P_interrupt_names_IDX_0_STRING_UNQUOTED spi1
#define DT_N_S_soc_S_spi_40088000_P_interrupt_names_IDX_0_STRING_TOKEN spi1
#define DT_N_S_soc_S_spi_40088000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN SPI1
#define DT_N_S_soc_S_spi_40088000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40088000, interrupt_names, 0)
#define DT_N_S_soc_S_spi_40088000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40088000, interrupt_names, 0)
#define DT_N_S_soc_S_spi_40088000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40088000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40088000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40088000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40088000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_spi_40088000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40088000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40088000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40088000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_spi1_default
#define DT_N_S_soc_S_spi_40088000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_spi1_default
#define DT_N_S_soc_S_spi_40088000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40088000, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_40088000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40088000, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_40088000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40088000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40088000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40088000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40088000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_spi_40088000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_40088000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_40088000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_40088000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_40088000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40088000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40088000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40088000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40088000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40088000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40088000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40088000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40088000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40088000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_40088000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_40020000
#define DT_N_S_soc_S_spi_40088000_P_resets_IDX_0_VAL_id 19
#define DT_N_S_soc_S_spi_40088000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_spi_40088000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40088000, resets, 0)
#define DT_N_S_soc_S_spi_40088000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40088000, resets, 0)
#define DT_N_S_soc_S_spi_40088000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40088000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40088000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40088000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40088000_P_resets_LEN 1
#define DT_N_S_soc_S_spi_40088000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/timer@400b0000
 *
 * Node identifier: DT_N_S_soc_S_timer_400b0000
 *
 * Binding (compatible = raspberrypi,pico-timer):
 *   $ZEPHYR_BASE\dts\bindings\counter\raspberrypi,pico-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_400b0000_PATH "/soc/timer@400b0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_400b0000_FULL_NAME "timer@400b0000"
#define DT_N_S_soc_S_timer_400b0000_FULL_NAME_UNQUOTED timer@400b0000
#define DT_N_S_soc_S_timer_400b0000_FULL_NAME_TOKEN timer_400b0000
#define DT_N_S_soc_S_timer_400b0000_FULL_NAME_UPPER_TOKEN TIMER_400B0000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_400b0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_400b0000_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_400b0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_400b0000_FOREACH_NODELABEL(fn) fn(timer0)
#define DT_N_S_soc_S_timer_400b0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timer0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_400b0000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_400b0000_CHILD_NUM 0
#define DT_N_S_soc_S_timer_400b0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_400b0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_400b0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_400b0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_400b0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_400b0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_400b0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_400b0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_400b0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timer_400b0000_HASH OEKnwabeyqsH_tceYiGGVWQ0JNACXVv9fmKiwtseoEc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_400b0000_ORD 55
#define DT_N_S_soc_S_timer_400b0000_ORD_STR_SORTABLE 00055

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_400b0000_REQUIRES_ORDS \
	4, /* /soc */ \
	25, /* /soc/clock-controller@40010000 */ \
	26, /* /soc/interrupt-controller@e000e100 */ \
	27, /* /soc/reset-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_400b0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_400b0000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_timer DT_N_S_soc_S_timer_400b0000
#define DT_N_NODELABEL_timer0              DT_N_S_soc_S_timer_400b0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_400b0000_REG_NUM 1
#define DT_N_S_soc_S_timer_400b0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_REG_IDX_0_VAL_ADDRESS 1074462720 /* 0x400b0000 */
#define DT_N_S_soc_S_timer_400b0000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_400b0000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_400b0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_400b0000_IRQ_NUM 4
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_1_VAL_irq 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_1_VAL_priority 7
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_2_VAL_irq 2
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_2_VAL_priority 7
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_3_VAL_irq 3
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_3_VAL_priority 7
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_400b0000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_NAME_timer0_irq_0_VAL_irq DT_N_S_soc_S_timer_400b0000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timer_400b0000_IRQ_NAME_timer0_irq_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_NAME_timer0_irq_0_VAL_priority DT_N_S_soc_S_timer_400b0000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timer_400b0000_IRQ_NAME_timer0_irq_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_NAME_timer0_irq_0_CONTROLLER DT_N_S_soc_S_timer_400b0000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timer_400b0000_IRQ_NAME_timer0_irq_1_VAL_irq DT_N_S_soc_S_timer_400b0000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timer_400b0000_IRQ_NAME_timer0_irq_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_NAME_timer0_irq_1_VAL_priority DT_N_S_soc_S_timer_400b0000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timer_400b0000_IRQ_NAME_timer0_irq_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_NAME_timer0_irq_1_CONTROLLER DT_N_S_soc_S_timer_400b0000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_timer_400b0000_IRQ_NAME_timer0_irq_2_VAL_irq DT_N_S_soc_S_timer_400b0000_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timer_400b0000_IRQ_NAME_timer0_irq_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_NAME_timer0_irq_2_VAL_priority DT_N_S_soc_S_timer_400b0000_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timer_400b0000_IRQ_NAME_timer0_irq_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_NAME_timer0_irq_2_CONTROLLER DT_N_S_soc_S_timer_400b0000_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_timer_400b0000_IRQ_NAME_timer0_irq_3_VAL_irq DT_N_S_soc_S_timer_400b0000_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timer_400b0000_IRQ_NAME_timer0_irq_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_NAME_timer0_irq_3_VAL_priority DT_N_S_soc_S_timer_400b0000_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timer_400b0000_IRQ_NAME_timer0_irq_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_IRQ_NAME_timer0_irq_3_CONTROLLER DT_N_S_soc_S_timer_400b0000_IRQ_IDX_3_CONTROLLER
#define DT_N_S_soc_S_timer_400b0000_COMPAT_MATCHES_raspberrypi_pico_timer 1
#define DT_N_S_soc_S_timer_400b0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_timer_400b0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_COMPAT_MODEL_IDX_0 "pico-timer"
#define DT_N_S_soc_S_timer_400b0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_400b0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_400b0000_P_status "okay"
#define DT_N_S_soc_S_timer_400b0000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timer_400b0000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timer_400b0000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_400b0000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timer_400b0000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_timer_400b0000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_400b0000, status, 0)
#define DT_N_S_soc_S_timer_400b0000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_400b0000, status, 0)
#define DT_N_S_soc_S_timer_400b0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_400b0000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_400b0000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_400b0000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_400b0000_P_status_LEN 1
#define DT_N_S_soc_S_timer_400b0000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_compatible {"raspberrypi,pico-timer"}
#define DT_N_S_soc_S_timer_400b0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_compatible_IDX_0 "raspberrypi,pico-timer"
#define DT_N_S_soc_S_timer_400b0000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-timer
#define DT_N_S_soc_S_timer_400b0000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_timer
#define DT_N_S_soc_S_timer_400b0000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_TIMER
#define DT_N_S_soc_S_timer_400b0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_400b0000, compatible, 0)
#define DT_N_S_soc_S_timer_400b0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_400b0000, compatible, 0)
#define DT_N_S_soc_S_timer_400b0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_400b0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_400b0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_400b0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_400b0000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_400b0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_reg {1074462720 /* 0x400b0000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_400b0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_reg_IDX_0 1074462720
#define DT_N_S_soc_S_timer_400b0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_400b0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_interrupts {0 /* 0x0 */, 7 /* 0x7 */, 1 /* 0x1 */, 7 /* 0x7 */, 2 /* 0x2 */, 7 /* 0x7 */, 3 /* 0x3 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_timer_400b0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_timer_400b0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_timer_400b0000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_interrupts_IDX_2 1
#define DT_N_S_soc_S_timer_400b0000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_interrupts_IDX_3 7
#define DT_N_S_soc_S_timer_400b0000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_interrupts_IDX_4 2
#define DT_N_S_soc_S_timer_400b0000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_interrupts_IDX_5 7
#define DT_N_S_soc_S_timer_400b0000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_interrupts_IDX_6 3
#define DT_N_S_soc_S_timer_400b0000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_interrupts_IDX_7 7
#define DT_N_S_soc_S_timer_400b0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names {"TIMER0_IRQ_0", "TIMER0_IRQ_1", "TIMER0_IRQ_2", "TIMER0_IRQ_3"}
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_IDX_0 "TIMER0_IRQ_0"
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_IDX_0_STRING_UNQUOTED TIMER0_IRQ_0
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_IDX_0_STRING_TOKEN TIMER0_IRQ_0
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN TIMER0_IRQ_0
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_IDX_1 "TIMER0_IRQ_1"
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_IDX_1_STRING_UNQUOTED TIMER0_IRQ_1
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_IDX_1_STRING_TOKEN TIMER0_IRQ_1
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN TIMER0_IRQ_1
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_IDX_2 "TIMER0_IRQ_2"
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_IDX_2_STRING_UNQUOTED TIMER0_IRQ_2
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_IDX_2_STRING_TOKEN TIMER0_IRQ_2
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN TIMER0_IRQ_2
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_IDX_3 "TIMER0_IRQ_3"
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_IDX_3_STRING_UNQUOTED TIMER0_IRQ_3
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_IDX_3_STRING_TOKEN TIMER0_IRQ_3
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN TIMER0_IRQ_3
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_400b0000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timer_400b0000, interrupt_names, 1) \
	fn(DT_N_S_soc_S_timer_400b0000, interrupt_names, 2) \
	fn(DT_N_S_soc_S_timer_400b0000, interrupt_names, 3)
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_400b0000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_400b0000, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_400b0000, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_400b0000, interrupt_names, 3)
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_400b0000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_400b0000, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_400b0000, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_400b0000, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_400b0000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_400b0000, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_400b0000, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_400b0000, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timer_400b0000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40010000
#define DT_N_S_soc_S_timer_400b0000_P_clocks_IDX_0_VAL_clk_id 4
#define DT_N_S_soc_S_timer_400b0000_P_clocks_IDX_0_VAL_clk_id_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_400b0000, clocks, 0)
#define DT_N_S_soc_S_timer_400b0000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_400b0000, clocks, 0)
#define DT_N_S_soc_S_timer_400b0000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_400b0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_400b0000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_400b0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_400b0000_P_clocks_LEN 1
#define DT_N_S_soc_S_timer_400b0000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_400b0000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_400b0000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_400b0000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_40020000
#define DT_N_S_soc_S_timer_400b0000_P_resets_IDX_0_VAL_id 23
#define DT_N_S_soc_S_timer_400b0000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_400b0000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_400b0000, resets, 0)
#define DT_N_S_soc_S_timer_400b0000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_400b0000, resets, 0)
#define DT_N_S_soc_S_timer_400b0000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_400b0000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_400b0000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_400b0000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_400b0000_P_resets_LEN 1
#define DT_N_S_soc_S_timer_400b0000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/timer@400b8000
 *
 * Node identifier: DT_N_S_soc_S_timer_400b8000
 *
 * Binding (compatible = raspberrypi,pico-timer):
 *   $ZEPHYR_BASE\dts\bindings\counter\raspberrypi,pico-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_400b8000_PATH "/soc/timer@400b8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_400b8000_FULL_NAME "timer@400b8000"
#define DT_N_S_soc_S_timer_400b8000_FULL_NAME_UNQUOTED timer@400b8000
#define DT_N_S_soc_S_timer_400b8000_FULL_NAME_TOKEN timer_400b8000
#define DT_N_S_soc_S_timer_400b8000_FULL_NAME_UPPER_TOKEN TIMER_400B8000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_400b8000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_400b8000_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_400b8000_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_400b8000_FOREACH_NODELABEL(fn) fn(timer1)
#define DT_N_S_soc_S_timer_400b8000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timer1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_400b8000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_400b8000_CHILD_NUM 0
#define DT_N_S_soc_S_timer_400b8000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_400b8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_400b8000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_400b8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_400b8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_400b8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_400b8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_400b8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_400b8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timer_400b8000_HASH se9l2Pab9B38owF5BdwI95uTRjW3UcHmPyVAQPTxZuY

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_400b8000_ORD 56
#define DT_N_S_soc_S_timer_400b8000_ORD_STR_SORTABLE 00056

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_400b8000_REQUIRES_ORDS \
	4, /* /soc */ \
	25, /* /soc/clock-controller@40010000 */ \
	26, /* /soc/interrupt-controller@e000e100 */ \
	27, /* /soc/reset-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_400b8000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_400b8000_EXISTS 1
#define DT_N_INST_1_raspberrypi_pico_timer DT_N_S_soc_S_timer_400b8000
#define DT_N_NODELABEL_timer1              DT_N_S_soc_S_timer_400b8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_400b8000_REG_NUM 1
#define DT_N_S_soc_S_timer_400b8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_REG_IDX_0_VAL_ADDRESS 1074495488 /* 0x400b8000 */
#define DT_N_S_soc_S_timer_400b8000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_400b8000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_400b8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_400b8000_IRQ_NUM 4
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_1_VAL_irq 5
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_1_VAL_priority 7
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_2_VAL_irq 6
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_2_VAL_priority 7
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_3_VAL_irq 7
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_3_VAL_priority 7
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_400b8000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_NAME_timer1_irq_0_VAL_irq DT_N_S_soc_S_timer_400b8000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timer_400b8000_IRQ_NAME_timer1_irq_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_NAME_timer1_irq_0_VAL_priority DT_N_S_soc_S_timer_400b8000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timer_400b8000_IRQ_NAME_timer1_irq_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_NAME_timer1_irq_0_CONTROLLER DT_N_S_soc_S_timer_400b8000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timer_400b8000_IRQ_NAME_timer1_irq_1_VAL_irq DT_N_S_soc_S_timer_400b8000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timer_400b8000_IRQ_NAME_timer1_irq_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_NAME_timer1_irq_1_VAL_priority DT_N_S_soc_S_timer_400b8000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timer_400b8000_IRQ_NAME_timer1_irq_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_NAME_timer1_irq_1_CONTROLLER DT_N_S_soc_S_timer_400b8000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_timer_400b8000_IRQ_NAME_timer1_irq_2_VAL_irq DT_N_S_soc_S_timer_400b8000_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timer_400b8000_IRQ_NAME_timer1_irq_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_NAME_timer1_irq_2_VAL_priority DT_N_S_soc_S_timer_400b8000_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timer_400b8000_IRQ_NAME_timer1_irq_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_NAME_timer1_irq_2_CONTROLLER DT_N_S_soc_S_timer_400b8000_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_timer_400b8000_IRQ_NAME_timer1_irq_3_VAL_irq DT_N_S_soc_S_timer_400b8000_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timer_400b8000_IRQ_NAME_timer1_irq_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_NAME_timer1_irq_3_VAL_priority DT_N_S_soc_S_timer_400b8000_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timer_400b8000_IRQ_NAME_timer1_irq_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_IRQ_NAME_timer1_irq_3_CONTROLLER DT_N_S_soc_S_timer_400b8000_IRQ_IDX_3_CONTROLLER
#define DT_N_S_soc_S_timer_400b8000_COMPAT_MATCHES_raspberrypi_pico_timer 1
#define DT_N_S_soc_S_timer_400b8000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_timer_400b8000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_COMPAT_MODEL_IDX_0 "pico-timer"
#define DT_N_S_soc_S_timer_400b8000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_400b8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_400b8000_P_status "disabled"
#define DT_N_S_soc_S_timer_400b8000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_400b8000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_400b8000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_400b8000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_400b8000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timer_400b8000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_400b8000, status, 0)
#define DT_N_S_soc_S_timer_400b8000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_400b8000, status, 0)
#define DT_N_S_soc_S_timer_400b8000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_400b8000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_400b8000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_400b8000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_400b8000_P_status_LEN 1
#define DT_N_S_soc_S_timer_400b8000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_compatible {"raspberrypi,pico-timer"}
#define DT_N_S_soc_S_timer_400b8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_compatible_IDX_0 "raspberrypi,pico-timer"
#define DT_N_S_soc_S_timer_400b8000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-timer
#define DT_N_S_soc_S_timer_400b8000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_timer
#define DT_N_S_soc_S_timer_400b8000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_TIMER
#define DT_N_S_soc_S_timer_400b8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_400b8000, compatible, 0)
#define DT_N_S_soc_S_timer_400b8000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_400b8000, compatible, 0)
#define DT_N_S_soc_S_timer_400b8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_400b8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_400b8000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_400b8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_400b8000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_400b8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_reg {1074495488 /* 0x400b8000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_400b8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_reg_IDX_0 1074495488
#define DT_N_S_soc_S_timer_400b8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_400b8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_interrupts {4 /* 0x4 */, 7 /* 0x7 */, 5 /* 0x5 */, 7 /* 0x7 */, 6 /* 0x6 */, 7 /* 0x7 */, 7 /* 0x7 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_timer_400b8000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_timer_400b8000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_timer_400b8000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_interrupts_IDX_2 5
#define DT_N_S_soc_S_timer_400b8000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_interrupts_IDX_3 7
#define DT_N_S_soc_S_timer_400b8000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_interrupts_IDX_4 6
#define DT_N_S_soc_S_timer_400b8000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_interrupts_IDX_5 7
#define DT_N_S_soc_S_timer_400b8000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_interrupts_IDX_6 7
#define DT_N_S_soc_S_timer_400b8000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_interrupts_IDX_7 7
#define DT_N_S_soc_S_timer_400b8000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names {"TIMER1_IRQ_0", "TIMER1_IRQ_1", "TIMER1_IRQ_2", "TIMER1_IRQ_3"}
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_IDX_0 "TIMER1_IRQ_0"
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_IDX_0_STRING_UNQUOTED TIMER1_IRQ_0
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_IDX_0_STRING_TOKEN TIMER1_IRQ_0
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN TIMER1_IRQ_0
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_IDX_1 "TIMER1_IRQ_1"
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_IDX_1_STRING_UNQUOTED TIMER1_IRQ_1
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_IDX_1_STRING_TOKEN TIMER1_IRQ_1
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN TIMER1_IRQ_1
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_IDX_2 "TIMER1_IRQ_2"
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_IDX_2_STRING_UNQUOTED TIMER1_IRQ_2
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_IDX_2_STRING_TOKEN TIMER1_IRQ_2
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN TIMER1_IRQ_2
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_IDX_3 "TIMER1_IRQ_3"
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_IDX_3_STRING_UNQUOTED TIMER1_IRQ_3
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_IDX_3_STRING_TOKEN TIMER1_IRQ_3
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN TIMER1_IRQ_3
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_400b8000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timer_400b8000, interrupt_names, 1) \
	fn(DT_N_S_soc_S_timer_400b8000, interrupt_names, 2) \
	fn(DT_N_S_soc_S_timer_400b8000, interrupt_names, 3)
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_400b8000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_400b8000, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_400b8000, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_400b8000, interrupt_names, 3)
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_400b8000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_400b8000, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_400b8000, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_400b8000, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_400b8000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_400b8000, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_400b8000, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_400b8000, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timer_400b8000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40010000
#define DT_N_S_soc_S_timer_400b8000_P_clocks_IDX_0_VAL_clk_id 4
#define DT_N_S_soc_S_timer_400b8000_P_clocks_IDX_0_VAL_clk_id_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_400b8000, clocks, 0)
#define DT_N_S_soc_S_timer_400b8000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_400b8000, clocks, 0)
#define DT_N_S_soc_S_timer_400b8000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_400b8000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_400b8000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_400b8000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_400b8000_P_clocks_LEN 1
#define DT_N_S_soc_S_timer_400b8000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_400b8000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_400b8000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_400b8000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_40020000
#define DT_N_S_soc_S_timer_400b8000_P_resets_IDX_0_VAL_id 24
#define DT_N_S_soc_S_timer_400b8000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_400b8000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_400b8000, resets, 0)
#define DT_N_S_soc_S_timer_400b8000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_400b8000, resets, 0)
#define DT_N_S_soc_S_timer_400b8000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_400b8000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_400b8000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_400b8000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_400b8000_P_resets_LEN 1
#define DT_N_S_soc_S_timer_400b8000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv8m-systick):
 *   $ZEPHYR_BASE\dts\bindings\timer\arm,armv8m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_UNQUOTED timer@e000e010
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_TOKEN timer_e000e010
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_UPPER_TOKEN TIMER_E000E010

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 22

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_e000e010_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL(fn) fn(systick)
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL_VARGS(fn, ...) fn(systick, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM 0
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timer_e000e010_HASH aZrzPLAIRgEwRZJIvTCzJONA6gPgc4QlhkiU5oWGArA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 57
#define DT_N_S_soc_S_timer_e000e010_ORD_STR_SORTABLE 00057

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv8m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_IRQ_LEVEL 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv8m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv8m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv8m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv8m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv8m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv8m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV8M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/uart@40070000
 *
 * Node identifier: DT_N_S_soc_S_uart_40070000
 *
 * Binding (compatible = raspberrypi,pico-uart):
 *   $ZEPHYR_BASE\dts\bindings\serial\raspberrypi,pico-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40070000_PATH "/soc/uart@40070000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40070000_FULL_NAME "uart@40070000"
#define DT_N_S_soc_S_uart_40070000_FULL_NAME_UNQUOTED uart@40070000
#define DT_N_S_soc_S_uart_40070000_FULL_NAME_TOKEN uart_40070000
#define DT_N_S_soc_S_uart_40070000_FULL_NAME_UPPER_TOKEN UART_40070000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40070000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_40070000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_40070000_NODELABEL_NUM 2
#define DT_N_S_soc_S_uart_40070000_FOREACH_NODELABEL(fn) fn(uart0) fn(pico_serial)
#define DT_N_S_soc_S_uart_40070000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0, __VA_ARGS__) fn(pico_serial, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40070000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_40070000_CHILD_NUM 0
#define DT_N_S_soc_S_uart_40070000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_40070000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_40070000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40070000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40070000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_40070000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40070000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40070000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40070000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_uart_40070000_HASH QOFVY2osI2LuOFFJ9lxo2e_vchL5l0F6GFvzaRq7ZWA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40070000_ORD 58
#define DT_N_S_soc_S_uart_40070000_ORD_STR_SORTABLE 00058

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40070000_REQUIRES_ORDS \
	4, /* /soc */ \
	25, /* /soc/clock-controller@40010000 */ \
	26, /* /soc/interrupt-controller@e000e100 */ \
	27, /* /soc/reset-controller@40020000 */ \
	41, /* /pin-controller/uart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40070000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40070000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_uart DT_N_S_soc_S_uart_40070000
#define DT_N_INST_0_arm_pl011             DT_N_S_soc_S_uart_40070000
#define DT_N_NODELABEL_uart0              DT_N_S_soc_S_uart_40070000
#define DT_N_NODELABEL_pico_serial        DT_N_S_soc_S_uart_40070000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40070000_REG_NUM 1
#define DT_N_S_soc_S_uart_40070000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_REG_IDX_0_VAL_ADDRESS 1074200576 /* 0x40070000 */
#define DT_N_S_soc_S_uart_40070000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_40070000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40070000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40070000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40070000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_IRQ_IDX_0_VAL_irq 33
#define DT_N_S_soc_S_uart_40070000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_uart_40070000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_uart_40070000_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_40070000_IRQ_NAME_uart0_VAL_irq DT_N_S_soc_S_uart_40070000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_uart_40070000_IRQ_NAME_uart0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_IRQ_NAME_uart0_VAL_priority DT_N_S_soc_S_uart_40070000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_uart_40070000_IRQ_NAME_uart0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_IRQ_NAME_uart0_CONTROLLER DT_N_S_soc_S_uart_40070000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_uart_40070000_COMPAT_MATCHES_raspberrypi_pico_uart 1
#define DT_N_S_soc_S_uart_40070000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_uart_40070000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_COMPAT_MODEL_IDX_0 "pico-uart"
#define DT_N_S_soc_S_uart_40070000_COMPAT_MATCHES_arm_pl011 1
#define DT_N_S_soc_S_uart_40070000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_COMPAT_VENDOR_IDX_1 "ARM Ltd."
#define DT_N_S_soc_S_uart_40070000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_COMPAT_MODEL_IDX_1 "pl011"
#define DT_N_S_soc_S_uart_40070000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40070000_PINCTRL_NUM 1
#define DT_N_S_soc_S_uart_40070000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_uart_40070000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40070000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_uart_40070000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_uart0_default

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40070000_P_reg {1074200576 /* 0x40070000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_40070000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_reg_IDX_0 1074200576
#define DT_N_S_soc_S_uart_40070000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_40070000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_interrupts {33 /* 0x21 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_uart_40070000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_interrupts_IDX_0 33
#define DT_N_S_soc_S_uart_40070000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_uart_40070000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_current_speed 115200
#define DT_N_S_soc_S_uart_40070000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40070000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_parity "none"
#define DT_N_S_soc_S_uart_40070000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_uart_40070000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_uart_40070000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_uart_40070000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_uart_40070000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_uart_40070000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40070000, parity, 0)
#define DT_N_S_soc_S_uart_40070000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40070000, parity, 0)
#define DT_N_S_soc_S_uart_40070000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40070000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40070000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40070000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40070000_P_parity_LEN 1
#define DT_N_S_soc_S_uart_40070000_P_parity_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_status "okay"
#define DT_N_S_soc_S_uart_40070000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_uart_40070000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_uart_40070000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uart_40070000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_uart_40070000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_uart_40070000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40070000, status, 0)
#define DT_N_S_soc_S_uart_40070000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40070000, status, 0)
#define DT_N_S_soc_S_uart_40070000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40070000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40070000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40070000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40070000_P_status_LEN 1
#define DT_N_S_soc_S_uart_40070000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_compatible {"raspberrypi,pico-uart", "arm,pl011"}
#define DT_N_S_soc_S_uart_40070000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_compatible_IDX_0 "raspberrypi,pico-uart"
#define DT_N_S_soc_S_uart_40070000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-uart
#define DT_N_S_soc_S_uart_40070000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_uart
#define DT_N_S_soc_S_uart_40070000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_UART
#define DT_N_S_soc_S_uart_40070000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_compatible_IDX_1 "arm,pl011"
#define DT_N_S_soc_S_uart_40070000_P_compatible_IDX_1_STRING_UNQUOTED arm,pl011
#define DT_N_S_soc_S_uart_40070000_P_compatible_IDX_1_STRING_TOKEN arm_pl011
#define DT_N_S_soc_S_uart_40070000_P_compatible_IDX_1_STRING_UPPER_TOKEN ARM_PL011
#define DT_N_S_soc_S_uart_40070000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40070000, compatible, 0) \
	fn(DT_N_S_soc_S_uart_40070000, compatible, 1)
#define DT_N_S_soc_S_uart_40070000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40070000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40070000, compatible, 1)
#define DT_N_S_soc_S_uart_40070000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40070000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40070000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40070000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40070000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40070000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40070000_P_compatible_LEN 2
#define DT_N_S_soc_S_uart_40070000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_interrupt_names {"uart0"}
#define DT_N_S_soc_S_uart_40070000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_interrupt_names_IDX_0 "uart0"
#define DT_N_S_soc_S_uart_40070000_P_interrupt_names_IDX_0_STRING_UNQUOTED uart0
#define DT_N_S_soc_S_uart_40070000_P_interrupt_names_IDX_0_STRING_TOKEN uart0
#define DT_N_S_soc_S_uart_40070000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN UART0
#define DT_N_S_soc_S_uart_40070000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40070000, interrupt_names, 0)
#define DT_N_S_soc_S_uart_40070000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40070000, interrupt_names, 0)
#define DT_N_S_soc_S_uart_40070000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40070000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40070000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40070000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40070000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_uart_40070000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40010000
#define DT_N_S_soc_S_uart_40070000_P_clocks_IDX_0_VAL_clk_id 6
#define DT_N_S_soc_S_uart_40070000_P_clocks_IDX_0_VAL_clk_id_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40070000, clocks, 0)
#define DT_N_S_soc_S_uart_40070000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40070000, clocks, 0)
#define DT_N_S_soc_S_uart_40070000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40070000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40070000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40070000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40070000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_40070000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_40070000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40070000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_40070000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_uart0_default
#define DT_N_S_soc_S_uart_40070000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_uart0_default
#define DT_N_S_soc_S_uart_40070000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40070000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_40070000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40070000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_40070000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40070000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40070000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40070000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40070000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_uart_40070000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_uart_40070000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_uart_40070000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_uart_40070000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_uart_40070000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40070000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40070000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_40070000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40070000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_40070000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40070000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40070000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40070000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40070000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_uart_40070000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_40020000
#define DT_N_S_soc_S_uart_40070000_P_resets_IDX_0_VAL_id 26
#define DT_N_S_soc_S_uart_40070000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_uart_40070000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40070000, resets, 0)
#define DT_N_S_soc_S_uart_40070000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40070000, resets, 0)
#define DT_N_S_soc_S_uart_40070000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40070000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40070000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40070000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40070000_P_resets_LEN 1
#define DT_N_S_soc_S_uart_40070000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/uart@40078000
 *
 * Node identifier: DT_N_S_soc_S_uart_40078000
 *
 * Binding (compatible = raspberrypi,pico-uart):
 *   $ZEPHYR_BASE\dts\bindings\serial\raspberrypi,pico-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40078000_PATH "/soc/uart@40078000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40078000_FULL_NAME "uart@40078000"
#define DT_N_S_soc_S_uart_40078000_FULL_NAME_UNQUOTED uart@40078000
#define DT_N_S_soc_S_uart_40078000_FULL_NAME_TOKEN uart_40078000
#define DT_N_S_soc_S_uart_40078000_FULL_NAME_UPPER_TOKEN UART_40078000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40078000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_40078000_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_40078000_NODELABEL_NUM 1
#define DT_N_S_soc_S_uart_40078000_FOREACH_NODELABEL(fn) fn(uart1)
#define DT_N_S_soc_S_uart_40078000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40078000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_40078000_CHILD_NUM 0
#define DT_N_S_soc_S_uart_40078000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_40078000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_40078000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40078000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40078000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_40078000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40078000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40078000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40078000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_uart_40078000_HASH kJqJvDSXbcv4FbdhJSc7KKe2vf9UPPEHNwn_jDfqDkc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40078000_ORD 59
#define DT_N_S_soc_S_uart_40078000_ORD_STR_SORTABLE 00059

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40078000_REQUIRES_ORDS \
	4, /* /soc */ \
	25, /* /soc/clock-controller@40010000 */ \
	26, /* /soc/interrupt-controller@e000e100 */ \
	27, /* /soc/reset-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40078000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40078000_EXISTS 1
#define DT_N_INST_1_raspberrypi_pico_uart DT_N_S_soc_S_uart_40078000
#define DT_N_INST_1_arm_pl011             DT_N_S_soc_S_uart_40078000
#define DT_N_NODELABEL_uart1              DT_N_S_soc_S_uart_40078000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40078000_REG_NUM 1
#define DT_N_S_soc_S_uart_40078000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_REG_IDX_0_VAL_ADDRESS 1074233344 /* 0x40078000 */
#define DT_N_S_soc_S_uart_40078000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_40078000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40078000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40078000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40078000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_IRQ_IDX_0_VAL_irq 34
#define DT_N_S_soc_S_uart_40078000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_uart_40078000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_uart_40078000_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_40078000_IRQ_NAME_uart1_VAL_irq DT_N_S_soc_S_uart_40078000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_uart_40078000_IRQ_NAME_uart1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_IRQ_NAME_uart1_VAL_priority DT_N_S_soc_S_uart_40078000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_uart_40078000_IRQ_NAME_uart1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_IRQ_NAME_uart1_CONTROLLER DT_N_S_soc_S_uart_40078000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_uart_40078000_COMPAT_MATCHES_raspberrypi_pico_uart 1
#define DT_N_S_soc_S_uart_40078000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_uart_40078000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_COMPAT_MODEL_IDX_0 "pico-uart"
#define DT_N_S_soc_S_uart_40078000_COMPAT_MATCHES_arm_pl011 1
#define DT_N_S_soc_S_uart_40078000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_COMPAT_VENDOR_IDX_1 "ARM Ltd."
#define DT_N_S_soc_S_uart_40078000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_COMPAT_MODEL_IDX_1 "pl011"
#define DT_N_S_soc_S_uart_40078000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40078000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40078000_P_reg {1074233344 /* 0x40078000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_40078000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_reg_IDX_0 1074233344
#define DT_N_S_soc_S_uart_40078000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_40078000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_interrupts {34 /* 0x22 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_uart_40078000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_interrupts_IDX_0 34
#define DT_N_S_soc_S_uart_40078000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_uart_40078000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40078000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_parity "none"
#define DT_N_S_soc_S_uart_40078000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_uart_40078000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_uart_40078000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_uart_40078000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_uart_40078000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_uart_40078000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40078000, parity, 0)
#define DT_N_S_soc_S_uart_40078000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40078000, parity, 0)
#define DT_N_S_soc_S_uart_40078000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40078000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40078000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40078000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40078000_P_parity_LEN 1
#define DT_N_S_soc_S_uart_40078000_P_parity_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_status "disabled"
#define DT_N_S_soc_S_uart_40078000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_40078000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_40078000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40078000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_uart_40078000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_uart_40078000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40078000, status, 0)
#define DT_N_S_soc_S_uart_40078000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40078000, status, 0)
#define DT_N_S_soc_S_uart_40078000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40078000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40078000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40078000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40078000_P_status_LEN 1
#define DT_N_S_soc_S_uart_40078000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_compatible {"raspberrypi,pico-uart", "arm,pl011"}
#define DT_N_S_soc_S_uart_40078000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_compatible_IDX_0 "raspberrypi,pico-uart"
#define DT_N_S_soc_S_uart_40078000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-uart
#define DT_N_S_soc_S_uart_40078000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_uart
#define DT_N_S_soc_S_uart_40078000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_UART
#define DT_N_S_soc_S_uart_40078000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_compatible_IDX_1 "arm,pl011"
#define DT_N_S_soc_S_uart_40078000_P_compatible_IDX_1_STRING_UNQUOTED arm,pl011
#define DT_N_S_soc_S_uart_40078000_P_compatible_IDX_1_STRING_TOKEN arm_pl011
#define DT_N_S_soc_S_uart_40078000_P_compatible_IDX_1_STRING_UPPER_TOKEN ARM_PL011
#define DT_N_S_soc_S_uart_40078000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40078000, compatible, 0) \
	fn(DT_N_S_soc_S_uart_40078000, compatible, 1)
#define DT_N_S_soc_S_uart_40078000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40078000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40078000, compatible, 1)
#define DT_N_S_soc_S_uart_40078000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40078000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40078000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40078000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40078000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40078000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40078000_P_compatible_LEN 2
#define DT_N_S_soc_S_uart_40078000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_interrupt_names {"uart1"}
#define DT_N_S_soc_S_uart_40078000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_interrupt_names_IDX_0 "uart1"
#define DT_N_S_soc_S_uart_40078000_P_interrupt_names_IDX_0_STRING_UNQUOTED uart1
#define DT_N_S_soc_S_uart_40078000_P_interrupt_names_IDX_0_STRING_TOKEN uart1
#define DT_N_S_soc_S_uart_40078000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN UART1
#define DT_N_S_soc_S_uart_40078000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40078000, interrupt_names, 0)
#define DT_N_S_soc_S_uart_40078000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40078000, interrupt_names, 0)
#define DT_N_S_soc_S_uart_40078000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40078000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40078000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40078000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40078000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_uart_40078000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40010000
#define DT_N_S_soc_S_uart_40078000_P_clocks_IDX_0_VAL_clk_id 6
#define DT_N_S_soc_S_uart_40078000_P_clocks_IDX_0_VAL_clk_id_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40078000, clocks, 0)
#define DT_N_S_soc_S_uart_40078000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40078000, clocks, 0)
#define DT_N_S_soc_S_uart_40078000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40078000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40078000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40078000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40078000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_40078000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_40078000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40078000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_40078000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_40020000
#define DT_N_S_soc_S_uart_40078000_P_resets_IDX_0_VAL_id 27
#define DT_N_S_soc_S_uart_40078000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_uart_40078000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40078000, resets, 0)
#define DT_N_S_soc_S_uart_40078000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40078000, resets, 0)
#define DT_N_S_soc_S_uart_40078000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40078000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40078000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40078000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40078000_P_resets_LEN 1
#define DT_N_S_soc_S_uart_40078000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/usbd@50100000
 *
 * Node identifier: DT_N_S_soc_S_usbd_50100000
 *
 * Binding (compatible = raspberrypi,pico-usbd):
 *   $ZEPHYR_BASE\dts\bindings\usb\raspberrypi,pico-usbd.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usbd_50100000_PATH "/soc/usbd@50100000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usbd_50100000_FULL_NAME "usbd@50100000"
#define DT_N_S_soc_S_usbd_50100000_FULL_NAME_UNQUOTED usbd@50100000
#define DT_N_S_soc_S_usbd_50100000_FULL_NAME_TOKEN usbd_50100000
#define DT_N_S_soc_S_usbd_50100000_FULL_NAME_UPPER_TOKEN USBD_50100000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usbd_50100000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usbd_50100000_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_usbd_50100000_NODELABEL_NUM 2
#define DT_N_S_soc_S_usbd_50100000_FOREACH_NODELABEL(fn) fn(usbd) fn(zephyr_udc0)
#define DT_N_S_soc_S_usbd_50100000_FOREACH_NODELABEL_VARGS(fn, ...) fn(usbd, __VA_ARGS__) fn(zephyr_udc0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usbd_50100000_CHILD_NUM 0
#define DT_N_S_soc_S_usbd_50100000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_usbd_50100000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usbd_50100000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usbd_50100000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usbd_50100000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usbd_50100000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usbd_50100000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usbd_50100000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usbd_50100000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_usbd_50100000_HASH FOBTgNUro_CpHQCW7LHt_qjtocYWcSs6HaLBb_WO0jI

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usbd_50100000_ORD 60
#define DT_N_S_soc_S_usbd_50100000_ORD_STR_SORTABLE 00060

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usbd_50100000_REQUIRES_ORDS \
	4, /* /soc */ \
	25, /* /soc/clock-controller@40010000 */ \
	26, /* /soc/interrupt-controller@e000e100 */ \
	27, /* /soc/reset-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usbd_50100000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usbd_50100000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_usbd DT_N_S_soc_S_usbd_50100000
#define DT_N_NODELABEL_usbd               DT_N_S_soc_S_usbd_50100000
#define DT_N_NODELABEL_zephyr_udc0        DT_N_S_soc_S_usbd_50100000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usbd_50100000_REG_NUM 1
#define DT_N_S_soc_S_usbd_50100000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_REG_IDX_0_VAL_ADDRESS 1343225856 /* 0x50100000 */
#define DT_N_S_soc_S_usbd_50100000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_usbd_50100000_RANGES_NUM 0
#define DT_N_S_soc_S_usbd_50100000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usbd_50100000_IRQ_NUM 1
#define DT_N_S_soc_S_usbd_50100000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_IRQ_IDX_0_VAL_irq 14
#define DT_N_S_soc_S_usbd_50100000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_usbd_50100000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_usbd_50100000_IRQ_LEVEL 1
#define DT_N_S_soc_S_usbd_50100000_IRQ_NAME_usbctrl_VAL_irq DT_N_S_soc_S_usbd_50100000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_usbd_50100000_IRQ_NAME_usbctrl_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_IRQ_NAME_usbctrl_VAL_priority DT_N_S_soc_S_usbd_50100000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_usbd_50100000_IRQ_NAME_usbctrl_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_IRQ_NAME_usbctrl_CONTROLLER DT_N_S_soc_S_usbd_50100000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_usbd_50100000_COMPAT_MATCHES_raspberrypi_pico_usbd 1
#define DT_N_S_soc_S_usbd_50100000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_usbd_50100000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_COMPAT_MODEL_IDX_0 "pico-usbd"
#define DT_N_S_soc_S_usbd_50100000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usbd_50100000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_usbd_50100000_P_reg {1343225856 /* 0x50100000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_usbd_50100000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_reg_IDX_0 1343225856
#define DT_N_S_soc_S_usbd_50100000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_usbd_50100000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_interrupts {14 /* 0xe */, 7 /* 0x7 */}
#define DT_N_S_soc_S_usbd_50100000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_interrupts_IDX_0 14
#define DT_N_S_soc_S_usbd_50100000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_usbd_50100000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_num_bidir_endpoints 16
#define DT_N_S_soc_S_usbd_50100000_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_status "okay"
#define DT_N_S_soc_S_usbd_50100000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_usbd_50100000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_usbd_50100000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usbd_50100000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_usbd_50100000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_usbd_50100000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_50100000, status, 0)
#define DT_N_S_soc_S_usbd_50100000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_50100000, status, 0)
#define DT_N_S_soc_S_usbd_50100000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_50100000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_50100000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_P_status_LEN 1
#define DT_N_S_soc_S_usbd_50100000_P_status_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_compatible {"raspberrypi,pico-usbd"}
#define DT_N_S_soc_S_usbd_50100000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_compatible_IDX_0 "raspberrypi,pico-usbd"
#define DT_N_S_soc_S_usbd_50100000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-usbd
#define DT_N_S_soc_S_usbd_50100000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_usbd
#define DT_N_S_soc_S_usbd_50100000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_USBD
#define DT_N_S_soc_S_usbd_50100000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_50100000, compatible, 0)
#define DT_N_S_soc_S_usbd_50100000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_50100000, compatible, 0)
#define DT_N_S_soc_S_usbd_50100000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_50100000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_50100000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_P_compatible_LEN 1
#define DT_N_S_soc_S_usbd_50100000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names {"usbctrl"}
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names_IDX_0 "usbctrl"
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names_IDX_0_STRING_UNQUOTED usbctrl
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names_IDX_0_STRING_TOKEN usbctrl
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN USBCTRL
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_50100000, interrupt_names, 0)
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_50100000, interrupt_names, 0)
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_50100000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_50100000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40010000
#define DT_N_S_soc_S_usbd_50100000_P_clocks_IDX_0_VAL_clk_id 8
#define DT_N_S_soc_S_usbd_50100000_P_clocks_IDX_0_VAL_clk_id_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_50100000, clocks, 0)
#define DT_N_S_soc_S_usbd_50100000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_50100000, clocks, 0)
#define DT_N_S_soc_S_usbd_50100000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_50100000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_50100000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_P_clocks_LEN 1
#define DT_N_S_soc_S_usbd_50100000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_usbd_50100000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_wakeup_source 0
#define DT_N_S_soc_S_usbd_50100000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_usbd_50100000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_40020000
#define DT_N_S_soc_S_usbd_50100000_P_resets_IDX_0_VAL_id 28
#define DT_N_S_soc_S_usbd_50100000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_50100000, resets, 0)
#define DT_N_S_soc_S_usbd_50100000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_50100000, resets, 0)
#define DT_N_S_soc_S_usbd_50100000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_50100000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_50100000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_P_resets_LEN 1
#define DT_N_S_soc_S_usbd_50100000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@400d8000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_400d8000
 *
 * Binding (compatible = raspberrypi,pico-watchdog):
 *   $ZEPHYR_BASE\dts\bindings\watchdog\raspberrypi,pico-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_400d8000_PATH "/soc/watchdog@400d8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_400d8000_FULL_NAME "watchdog@400d8000"
#define DT_N_S_soc_S_watchdog_400d8000_FULL_NAME_UNQUOTED watchdog@400d8000
#define DT_N_S_soc_S_watchdog_400d8000_FULL_NAME_TOKEN watchdog_400d8000
#define DT_N_S_soc_S_watchdog_400d8000_FULL_NAME_UPPER_TOKEN WATCHDOG_400D8000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_400d8000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_400d8000_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_watchdog_400d8000_NODELABEL_NUM 1
#define DT_N_S_soc_S_watchdog_400d8000_FOREACH_NODELABEL(fn) fn(wdt0)
#define DT_N_S_soc_S_watchdog_400d8000_FOREACH_NODELABEL_VARGS(fn, ...) fn(wdt0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_400d8000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_400d8000_CHILD_NUM 0
#define DT_N_S_soc_S_watchdog_400d8000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_watchdog_400d8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_400d8000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_400d8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_400d8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_400d8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_400d8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_400d8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_400d8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_watchdog_400d8000_HASH X5Tatw5JcjoeGhMlUPK75DA5tgnElvh8DNW5k8A9RZo

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_400d8000_ORD 61
#define DT_N_S_soc_S_watchdog_400d8000_ORD_STR_SORTABLE 00061

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_400d8000_REQUIRES_ORDS \
	4, /* /soc */ \
	25, /* /soc/clock-controller@40010000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_400d8000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_400d8000_EXISTS 1
#define DT_N_ALIAS_watchdog0                  DT_N_S_soc_S_watchdog_400d8000
#define DT_N_INST_0_raspberrypi_pico_watchdog DT_N_S_soc_S_watchdog_400d8000
#define DT_N_NODELABEL_wdt0                   DT_N_S_soc_S_watchdog_400d8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_400d8000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_400d8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_400d8000_REG_IDX_0_VAL_ADDRESS 1074626560 /* 0x400d8000 */
#define DT_N_S_soc_S_watchdog_400d8000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_watchdog_400d8000_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_400d8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_400d8000_IRQ_NUM 0
#define DT_N_S_soc_S_watchdog_400d8000_IRQ_LEVEL 0
#define DT_N_S_soc_S_watchdog_400d8000_COMPAT_MATCHES_raspberrypi_pico_watchdog 1
#define DT_N_S_soc_S_watchdog_400d8000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_400d8000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_watchdog_400d8000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_400d8000_COMPAT_MODEL_IDX_0 "pico-watchdog"
#define DT_N_S_soc_S_watchdog_400d8000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_400d8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_400d8000_P_reg {1074626560 /* 0x400d8000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_watchdog_400d8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_400d8000_P_reg_IDX_0 1074626560
#define DT_N_S_soc_S_watchdog_400d8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_400d8000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_watchdog_400d8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_400d8000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_400d8000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40010000
#define DT_N_S_soc_S_watchdog_400d8000_P_clocks_IDX_0_VAL_clk_id 4
#define DT_N_S_soc_S_watchdog_400d8000_P_clocks_IDX_0_VAL_clk_id_EXISTS 1
#define DT_N_S_soc_S_watchdog_400d8000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_400d8000, clocks, 0)
#define DT_N_S_soc_S_watchdog_400d8000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_400d8000, clocks, 0)
#define DT_N_S_soc_S_watchdog_400d8000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_400d8000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_400d8000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_400d8000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_400d8000_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_400d8000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_400d8000_P_status "disabled"
#define DT_N_S_soc_S_watchdog_400d8000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_watchdog_400d8000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_watchdog_400d8000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_400d8000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_watchdog_400d8000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_400d8000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_400d8000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_watchdog_400d8000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_400d8000, status, 0)
#define DT_N_S_soc_S_watchdog_400d8000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_400d8000, status, 0)
#define DT_N_S_soc_S_watchdog_400d8000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_400d8000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_400d8000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_400d8000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_400d8000_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_400d8000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_400d8000_P_compatible {"raspberrypi,pico-watchdog"}
#define DT_N_S_soc_S_watchdog_400d8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_400d8000_P_compatible_IDX_0 "raspberrypi,pico-watchdog"
#define DT_N_S_soc_S_watchdog_400d8000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-watchdog
#define DT_N_S_soc_S_watchdog_400d8000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_watchdog
#define DT_N_S_soc_S_watchdog_400d8000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_WATCHDOG
#define DT_N_S_soc_S_watchdog_400d8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_400d8000, compatible, 0)
#define DT_N_S_soc_S_watchdog_400d8000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_400d8000, compatible, 0)
#define DT_N_S_soc_S_watchdog_400d8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_400d8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_400d8000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_400d8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_400d8000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_400d8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_400d8000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_watchdog_400d8000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_watchdog_400d8000_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_400d8000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_400d8000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_400d8000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@400d0000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_400d0000
 *
 * Binding (compatible = raspberrypi,pico-flash-controller):
 *   $ZEPHYR_BASE\dts\bindings\flash_controller\raspberrypi,pico-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_400d0000_PATH "/soc/flash-controller@400d0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_400d0000_FULL_NAME "flash-controller@400d0000"
#define DT_N_S_soc_S_flash_controller_400d0000_FULL_NAME_UNQUOTED flash-controller@400d0000
#define DT_N_S_soc_S_flash_controller_400d0000_FULL_NAME_TOKEN flash_controller_400d0000
#define DT_N_S_soc_S_flash_controller_400d0000_FULL_NAME_UPPER_TOKEN FLASH_CONTROLLER_400D0000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_400d0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_400d0000_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_400d0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_400d0000_FOREACH_NODELABEL(fn) fn(qmi)
#define DT_N_S_soc_S_flash_controller_400d0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(qmi, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_400d0000_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_400d0000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_400d0000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000)
#define DT_N_S_soc_S_flash_controller_400d0000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000)
#define DT_N_S_soc_S_flash_controller_400d0000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000)
#define DT_N_S_soc_S_flash_controller_400d0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000)
#define DT_N_S_soc_S_flash_controller_400d0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_400d0000_HASH XDdKNTmNhmB2pa8J_D_X4BEvAlogJHk4U5EIbXoaTv0

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_400d0000_ORD 62
#define DT_N_S_soc_S_flash_controller_400d0000_ORD_STR_SORTABLE 00062

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_400d0000_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_400d0000_SUPPORTS_ORDS \
	63, /* /soc/flash-controller@400d0000/flash@10000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_400d0000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_flash_controller DT_N_S_soc_S_flash_controller_400d0000
#define DT_N_NODELABEL_qmi                            DT_N_S_soc_S_flash_controller_400d0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_400d0000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_400d0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_REG_IDX_0_VAL_ADDRESS 1074593792 /* 0x400d0000 */
#define DT_N_S_soc_S_flash_controller_400d0000_REG_IDX_0_VAL_SIZE 252 /* 0xfc */
#define DT_N_S_soc_S_flash_controller_400d0000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_400d0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_400d0000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_400d0000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_400d0000_COMPAT_MATCHES_raspberrypi_pico_flash_controller 1
#define DT_N_S_soc_S_flash_controller_400d0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_flash_controller_400d0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_COMPAT_MODEL_IDX_0 "pico-flash-controller"
#define DT_N_S_soc_S_flash_controller_400d0000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_400d0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_400d0000_P_reg {1074593792 /* 0x400d0000 */, 252 /* 0xfc */}
#define DT_N_S_soc_S_flash_controller_400d0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_P_reg_IDX_0 1074593792
#define DT_N_S_soc_S_flash_controller_400d0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_P_reg_IDX_1 252
#define DT_N_S_soc_S_flash_controller_400d0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_P_status "disabled"
#define DT_N_S_soc_S_flash_controller_400d0000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_flash_controller_400d0000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_flash_controller_400d0000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flash_controller_400d0000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_flash_controller_400d0000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_flash_controller_400d0000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_400d0000, status, 0)
#define DT_N_S_soc_S_flash_controller_400d0000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_400d0000, status, 0)
#define DT_N_S_soc_S_flash_controller_400d0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_400d0000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_400d0000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_P_status_LEN 1
#define DT_N_S_soc_S_flash_controller_400d0000_P_status_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_P_compatible {"raspberrypi,pico-flash-controller"}
#define DT_N_S_soc_S_flash_controller_400d0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_P_compatible_IDX_0 "raspberrypi,pico-flash-controller"
#define DT_N_S_soc_S_flash_controller_400d0000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-flash-controller
#define DT_N_S_soc_S_flash_controller_400d0000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_flash_controller
#define DT_N_S_soc_S_flash_controller_400d0000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_400d0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_400d0000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_400d0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_400d0000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_400d0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_400d0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_400d0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_400d0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_400d0000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_400d0000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_400d0000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@400d0000/flash@10000000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE\dts\bindings\mtd\soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_PATH "/soc/flash-controller@400d0000/flash@10000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_FULL_NAME "flash@10000000"
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_FULL_NAME_UNQUOTED flash@10000000
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_FULL_NAME_TOKEN flash_10000000
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_FULL_NAME_UPPER_TOKEN FLASH_10000000

/* Node parent (/soc/flash-controller@400d0000) identifier: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_PARENT DT_N_S_soc_S_flash_controller_400d0000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_FOREACH_NODELABEL(fn) fn(flash0)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_400d0000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_HASH yWI2L9QfpWZZjK52_5ovIAPJjHRo44_fbvqiy5nEPCk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_ORD 63
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_ORD_STR_SORTABLE 00063

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_REQUIRES_ORDS \
	62, /* /soc/flash-controller@400d0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_SUPPORTS_ORDS \
	64, /* /soc/flash-controller@400d0000/flash@10000000/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_REG_IDX_0_VAL_ADDRESS 268435456 /* 0x10000000 */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_REG_IDX_0_VAL_SIZE 4194304 /* 0x400000 */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_erase_block_size 4096
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_write_block_size 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_compatible_IDX_0_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_compatible_IDX_0_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_compatible_IDX_0_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_reg {268435456 /* 0x10000000 */, 4194304 /* 0x400000 */}
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_reg_IDX_0 268435456
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_reg_IDX_1 4194304
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@400d0000/flash@10000000/partitions
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE\dts\bindings\mtd\fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_PATH "/soc/flash-controller@400d0000/flash@10000000/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_FULL_NAME "partitions"
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_FULL_NAME_UNQUOTED partitions
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_FULL_NAME_TOKEN partitions
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_FULL_NAME_UPPER_TOKEN PARTITIONS

/* Node parent (/soc/flash-controller@400d0000/flash@10000000) identifier: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_PARENT DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_NODELABEL_NUM 0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000) fn(DT_N_S_soc_S_flash_controller_400d0000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_CHILD_NUM 2
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_HASH oWW_TzC_Iynk__b8w06jEUrLdLVljOSth0Zy0nyFqcM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_ORD 64
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_ORD_STR_SORTABLE 00064

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_REQUIRES_ORDS \
	63, /* /soc/flash-controller@400d0000/flash@10000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_SUPPORTS_ORDS \
	65, /* /soc/flash-controller@400d0000/flash@10000000/partitions/partition@0 */ \
	66, /* /soc/flash-controller@400d0000/flash@10000000/partitions/partition@100 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@400d0000/flash@10000000/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_PATH "/soc/flash-controller@400d0000/flash@10000000/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_FULL_NAME "partition@0"
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_FULL_NAME_UNQUOTED partition@0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_FULL_NAME_TOKEN partition_0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_FULL_NAME_UPPER_TOKEN PARTITION_0

/* Node parent (/soc/flash-controller@400d0000/flash@10000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_FOREACH_NODELABEL(fn) fn(image_def)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(image_def, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000) fn(DT_N_S_soc_S_flash_controller_400d0000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_HASH PKC_lc_m3m4a1xABh5A2zC8Xc52LpR6XdTGkyUf8T7I

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_ORD 65
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_ORD_STR_SORTABLE 00065

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_REQUIRES_ORDS \
	64, /* /soc/flash-controller@400d0000/flash@10000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_image_def DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_P_label "image_def"
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_P_label_STRING_UNQUOTED image_def
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_P_label_STRING_TOKEN image_def
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_P_label_STRING_UPPER_TOKEN IMAGE_DEF
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_P_label_IDX_0 "image_def"
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_P_read_only 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 256 /* 0x100 */}
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_P_reg_IDX_1 256
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@400d0000/flash@10000000/partitions/partition@100
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_PATH "/soc/flash-controller@400d0000/flash@10000000/partitions/partition@100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_FULL_NAME "partition@100"
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_FULL_NAME_UNQUOTED partition@100
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_FULL_NAME_TOKEN partition_100
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_FULL_NAME_UPPER_TOKEN PARTITION_100

/* Node parent (/soc/flash-controller@400d0000/flash@10000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_PARENT DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_FOREACH_NODELABEL(fn) fn(code_partition)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_FOREACH_NODELABEL_VARGS(fn, ...) fn(code_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000) fn(DT_N_S_soc_S_flash_controller_400d0000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_HASH DuLfOSjAe7OMMmLjVrFXlGtGuJXant2MxJfZdSmA3t8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_ORD 66
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_ORD_STR_SORTABLE 00066

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_REQUIRES_ORDS \
	64, /* /soc/flash-controller@400d0000/flash@10000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_EXISTS 1
#define DT_N_NODELABEL_code_partition DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_REG_IDX_0_VAL_ADDRESS 256 /* 0x100 */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_REG_IDX_0_VAL_SIZE 4194048 /* 0x3fff00 */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_P_label "code-partition"
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_P_label_STRING_UNQUOTED code-partition
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_P_label_STRING_TOKEN code_partition
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_P_label_STRING_UPPER_TOKEN CODE_PARTITION
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_P_label_IDX_0 "code-partition"
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100, label, 0)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100, label, 0)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_P_read_only 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_P_reg {256 /* 0x100 */, 4194048 /* 0x3fff00 */}
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_P_reg_IDX_0 256
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_P_reg_IDX_1 4194048
#define DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100_P_reg_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_sram                  DT_N_S_soc_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS           1
#define DT_CHOSEN_zephyr_flash                 DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000
#define DT_CHOSEN_zephyr_flash_EXISTS          1
#define DT_CHOSEN_zephyr_console               DT_N_S_soc_S_uart_40070000
#define DT_CHOSEN_zephyr_console_EXISTS        1
#define DT_CHOSEN_zephyr_shell_uart            DT_N_S_soc_S_uart_40070000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS     1
#define DT_CHOSEN_zephyr_code_partition        DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100
#define DT_CHOSEN_zephyr_code_partition_EXISTS 1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_aliases) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_clk_gpout0) fn(DT_N_S_clocks_S_clk_gpout1) fn(DT_N_S_clocks_S_clk_gpout2) fn(DT_N_S_clocks_S_clk_gpout3) fn(DT_N_S_clocks_S_clk_hstx) fn(DT_N_S_clocks_S_clk_ref) fn(DT_N_S_clocks_S_clk_sys) fn(DT_N_S_clocks_S_clk_usb) fn(DT_N_S_clocks_S_clk_adc) fn(DT_N_S_clocks_S_clk_peri) fn(DT_N_S_clocks_S_pll_sys) fn(DT_N_S_clocks_S_pll_usb) fn(DT_N_S_clocks_S_rosc) fn(DT_N_S_clocks_S_rosc_ph) fn(DT_N_S_clocks_S_xosc) fn(DT_N_S_clocks_S_gpin0) fn(DT_N_S_clocks_S_gpin1) fn(DT_N_S_soc) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_flash_controller_400d0000) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100) fn(DT_N_S_soc_S_reset_controller_40020000) fn(DT_N_S_soc_S_clock_controller_40010000) fn(DT_N_S_soc_S_gpio_40028000) fn(DT_N_S_soc_S_uart_40070000) fn(DT_N_S_soc_S_uart_40078000) fn(DT_N_S_soc_S_spi_40080000) fn(DT_N_S_soc_S_spi_40088000) fn(DT_N_S_soc_S_i2c_40090000) fn(DT_N_S_soc_S_i2c_40098000) fn(DT_N_S_soc_S_adc_400a0000) fn(DT_N_S_soc_S_pwm_400a8000) fn(DT_N_S_soc_S_timer_400b0000) fn(DT_N_S_soc_S_timer_400b8000) fn(DT_N_S_soc_S_watchdog_400d8000) fn(DT_N_S_soc_S_dma_50000000) fn(DT_N_S_soc_S_usbd_50100000) fn(DT_N_S_soc_S_pio_50200000) fn(DT_N_S_soc_S_pio_50300000) fn(DT_N_S_soc_S_pio_50400000) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_pin_controller) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2) fn(DT_N_S_pin_controller_S_i2c1_default) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1) fn(DT_N_S_pin_controller_S_spi1_default) fn(DT_N_S_pin_controller_S_spi1_default_S_group1) fn(DT_N_S_pin_controller_S_spi1_default_S_group2) fn(DT_N_S_pin_controller_S_pwm_ch4b_default) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1) fn(DT_N_S_pin_controller_S_adc_default) fn(DT_N_S_pin_controller_S_adc_default_S_group1) fn(DT_N_S_dietemp) fn(DT_N_S_chosen) fn(DT_N_S_connector)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_aliases) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_clk_gpout0) fn(DT_N_S_clocks_S_clk_gpout1) fn(DT_N_S_clocks_S_clk_gpout2) fn(DT_N_S_clocks_S_clk_gpout3) fn(DT_N_S_clocks_S_clk_hstx) fn(DT_N_S_clocks_S_clk_ref) fn(DT_N_S_clocks_S_clk_sys) fn(DT_N_S_clocks_S_clk_usb) fn(DT_N_S_clocks_S_clk_adc) fn(DT_N_S_clocks_S_clk_peri) fn(DT_N_S_clocks_S_pll_sys) fn(DT_N_S_clocks_S_pll_usb) fn(DT_N_S_clocks_S_rosc) fn(DT_N_S_clocks_S_rosc_ph) fn(DT_N_S_clocks_S_xosc) fn(DT_N_S_soc) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100) fn(DT_N_S_soc_S_reset_controller_40020000) fn(DT_N_S_soc_S_clock_controller_40010000) fn(DT_N_S_soc_S_gpio_40028000) fn(DT_N_S_soc_S_uart_40070000) fn(DT_N_S_soc_S_i2c_40098000) fn(DT_N_S_soc_S_adc_400a0000) fn(DT_N_S_soc_S_timer_400b0000) fn(DT_N_S_soc_S_usbd_50100000) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_pin_controller) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2) fn(DT_N_S_pin_controller_S_i2c1_default) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1) fn(DT_N_S_pin_controller_S_spi1_default) fn(DT_N_S_pin_controller_S_spi1_default_S_group1) fn(DT_N_S_pin_controller_S_spi1_default_S_group2) fn(DT_N_S_pin_controller_S_pwm_ch4b_default) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1) fn(DT_N_S_pin_controller_S_adc_default) fn(DT_N_S_pin_controller_S_adc_default_S_group1) fn(DT_N_S_chosen) fn(DT_N_S_connector)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_gpout0, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_gpout1, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_gpout2, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_gpout3, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hstx, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_ref, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_sys, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_usb, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_adc, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_peri, __VA_ARGS__) fn(DT_N_S_clocks_S_pll_sys, __VA_ARGS__) fn(DT_N_S_clocks_S_pll_usb, __VA_ARGS__) fn(DT_N_S_clocks_S_rosc, __VA_ARGS__) fn(DT_N_S_clocks_S_rosc_ph, __VA_ARGS__) fn(DT_N_S_clocks_S_xosc, __VA_ARGS__) fn(DT_N_S_clocks_S_gpin0, __VA_ARGS__) fn(DT_N_S_clocks_S_gpin1, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_400d0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100, __VA_ARGS__) fn(DT_N_S_soc_S_reset_controller_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_controller_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40070000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40078000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40080000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40088000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40090000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40098000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400a0000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_400a8000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_400b0000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_400b8000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_400d8000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_50100000, __VA_ARGS__) fn(DT_N_S_soc_S_pio_50200000, __VA_ARGS__) fn(DT_N_S_soc_S_pio_50300000, __VA_ARGS__) fn(DT_N_S_soc_S_pio_50400000, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm_ch4b_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_adc_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_adc_default_S_group1, __VA_ARGS__) fn(DT_N_S_dietemp, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_gpout0, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_gpout1, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_gpout2, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_gpout3, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hstx, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_ref, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_sys, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_usb, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_adc, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_peri, __VA_ARGS__) fn(DT_N_S_clocks_S_pll_sys, __VA_ARGS__) fn(DT_N_S_clocks_S_pll_usb, __VA_ARGS__) fn(DT_N_S_clocks_S_rosc, __VA_ARGS__) fn(DT_N_S_clocks_S_rosc_ph, __VA_ARGS__) fn(DT_N_S_clocks_S_xosc, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100, __VA_ARGS__) fn(DT_N_S_soc_S_reset_controller_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_controller_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40070000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40098000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400a0000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_400b0000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_50100000, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm_ch4b_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_adc_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_adc_default_S_group1, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__)
#define DT_COMPAT_fixed_partitions_LABEL_image_def DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_image_def_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_code_partition DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions_S_partition_100
#define DT_COMPAT_fixed_partitions_LABEL_code_partition_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_arm_cortex_m33 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_clock 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_pll 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_rosc 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_xosc 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_reset 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_clock_controller 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_gpio 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_uart 1
#define DT_COMPAT_HAS_OKAY_arm_pl011 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_i2c 1
#define DT_COMPAT_HAS_OKAY_snps_designware_i2c 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_adc 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_timer 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_usbd 1
#define DT_COMPAT_HAS_OKAY_arm_v8m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv8m_systick 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_pinctrl 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_header 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_arm_cortex_m33_NUM_OKAY 2
#define DT_N_INST_raspberrypi_pico_clock_NUM_OKAY 11
#define DT_N_INST_raspberrypi_pico_pll_NUM_OKAY 2
#define DT_N_INST_raspberrypi_pico_rosc_NUM_OKAY 1
#define DT_N_INST_raspberrypi_pico_xosc_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_raspberrypi_pico_reset_NUM_OKAY 1
#define DT_N_INST_raspberrypi_pico_clock_controller_NUM_OKAY 1
#define DT_N_INST_raspberrypi_pico_gpio_NUM_OKAY 1
#define DT_N_INST_raspberrypi_pico_uart_NUM_OKAY 1
#define DT_N_INST_arm_pl011_NUM_OKAY 1
#define DT_N_INST_raspberrypi_pico_i2c_NUM_OKAY 1
#define DT_N_INST_snps_designware_i2c_NUM_OKAY 1
#define DT_N_INST_raspberrypi_pico_adc_NUM_OKAY 1
#define DT_N_INST_raspberrypi_pico_timer_NUM_OKAY 1
#define DT_N_INST_raspberrypi_pico_usbd_NUM_OKAY 1
#define DT_N_INST_arm_v8m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv8m_systick_NUM_OKAY 1
#define DT_N_INST_raspberrypi_pico_pinctrl_NUM_OKAY 1
#define DT_N_INST_raspberrypi_pico_header_NUM_OKAY 1
#define DT_FOREACH_OKAY_arm_cortex_m33(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m33(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m33(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m33(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_clock(fn) fn(DT_N_S_clocks_S_clk_gpout0) fn(DT_N_S_clocks_S_clk_gpout1) fn(DT_N_S_clocks_S_clk_gpout2) fn(DT_N_S_clocks_S_clk_gpout3) fn(DT_N_S_clocks_S_clk_hstx) fn(DT_N_S_clocks_S_clk_ref) fn(DT_N_S_clocks_S_clk_sys) fn(DT_N_S_clocks_S_clk_usb) fn(DT_N_S_clocks_S_clk_adc) fn(DT_N_S_clocks_S_clk_peri) fn(DT_N_S_clocks_S_rosc_ph)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_clock(fn, ...) fn(DT_N_S_clocks_S_clk_gpout0, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_gpout1, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_gpout2, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_gpout3, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hstx, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_ref, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_sys, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_usb, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_adc, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_peri, __VA_ARGS__) fn(DT_N_S_clocks_S_rosc_ph, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_clock(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5) fn(6) fn(7) fn(8) fn(9) fn(10)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_clock(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__) fn(6, __VA_ARGS__) fn(7, __VA_ARGS__) fn(8, __VA_ARGS__) fn(9, __VA_ARGS__) fn(10, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_pll(fn) fn(DT_N_S_clocks_S_pll_sys) fn(DT_N_S_clocks_S_pll_usb)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_pll(fn, ...) fn(DT_N_S_clocks_S_pll_sys, __VA_ARGS__) fn(DT_N_S_clocks_S_pll_usb, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_pll(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_pll(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_rosc(fn) fn(DT_N_S_clocks_S_rosc)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_rosc(fn, ...) fn(DT_N_S_clocks_S_rosc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_rosc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_rosc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_xosc(fn) fn(DT_N_S_clocks_S_xosc)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_xosc(fn, ...) fn(DT_N_S_clocks_S_xosc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_xosc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_xosc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_soc_S_memory_20000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_flash_controller_400d0000_S_flash_10000000_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_reset(fn) fn(DT_N_S_soc_S_reset_controller_40020000)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_reset(fn, ...) fn(DT_N_S_soc_S_reset_controller_40020000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_reset(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_reset(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_clock_controller(fn) fn(DT_N_S_soc_S_clock_controller_40010000)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_clock_controller(fn, ...) fn(DT_N_S_soc_S_clock_controller_40010000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_clock_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_clock_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_gpio(fn) fn(DT_N_S_soc_S_gpio_40028000)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_gpio(fn, ...) fn(DT_N_S_soc_S_gpio_40028000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_gpio(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_gpio(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_uart(fn) fn(DT_N_S_soc_S_uart_40070000)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_uart(fn, ...) fn(DT_N_S_soc_S_uart_40070000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_uart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_uart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_pl011(fn) fn(DT_N_S_soc_S_uart_40070000)
#define DT_FOREACH_OKAY_VARGS_arm_pl011(fn, ...) fn(DT_N_S_soc_S_uart_40070000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_pl011(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_pl011(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_i2c(fn) fn(DT_N_S_soc_S_i2c_40098000)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_i2c(fn, ...) fn(DT_N_S_soc_S_i2c_40098000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_i2c(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_i2c(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_snps_designware_i2c(fn) fn(DT_N_S_soc_S_i2c_40098000)
#define DT_FOREACH_OKAY_VARGS_snps_designware_i2c(fn, ...) fn(DT_N_S_soc_S_i2c_40098000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_snps_designware_i2c(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_snps_designware_i2c(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_adc(fn) fn(DT_N_S_soc_S_adc_400a0000)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_adc(fn, ...) fn(DT_N_S_soc_S_adc_400a0000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_adc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_adc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_timer(fn) fn(DT_N_S_soc_S_timer_400b0000)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_timer(fn, ...) fn(DT_N_S_soc_S_timer_400b0000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_timer(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_timer(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_usbd(fn) fn(DT_N_S_soc_S_usbd_50100000)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_usbd(fn, ...) fn(DT_N_S_soc_S_usbd_50100000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_usbd(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_usbd(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v8m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v8m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v8m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v8m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv8m_systick(fn) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_FOREACH_OKAY_VARGS_arm_armv8m_systick(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv8m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv8m_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_pinctrl(fn) fn(DT_N_S_pin_controller)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_pinctrl(fn, ...) fn(DT_N_S_pin_controller, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_header(fn) fn(DT_N_S_connector)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_header(fn, ...) fn(DT_N_S_connector, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_header(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_header(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
